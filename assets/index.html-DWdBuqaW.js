import{_ as l,r as c,o,c as i,a as n,b as s,d as p,e as t}from"./app-CrGoCQwh.js";const e="/TIL/assets/11-Beq-EsaA.jpg",u="/TIL/assets/1-lqtTph1W.jpg",r="/TIL/assets/2-D83NiQqC.jpg",k="/TIL/assets/3-n890HMRt.jpg",d="/TIL/assets/4-CfdLNCeL.jpg",v="/TIL/assets/5-BgPSPAvA.jpg",m="/TIL/assets/6-xAgIPGyO.jpg",b="/TIL/assets/7-Dd9I7ouV.jpg",g="/TIL/assets/8-DmLVh5Ei.jpg",h="/TIL/assets/9-Nh8EfLh3.jpg",y="/TIL/assets/10-FD-dpOET.jpg",q="/TIL/assets/12-CPmPRFES.jpg",f="/TIL/assets/13-B4SkX1Xq.jpg",w="/TIL/assets/14-B8PLv1j2.jpg",_="/TIL/assets/15-kOb8fQe3.jpg",C="/TIL/assets/16-CDr8EIPh.jpg",E="/TIL/assets/17-ChZ9HAR-.jpg",j="/TIL/assets/18-CIlNCDoz.jpg",x="/TIL/assets/19-CvW3qi3E.jpg",A="/TIL/assets/20-De7yxrze.jpg",S="/TIL/assets/21-DgrnREpL.jpg",T="/TIL/assets/22-DjMLkso2.jpg",L="/TIL/assets/23-5Qw3Ricp.jpg",B="/TIL/assets/24-4WJ4ufVo.jpg",D="/TIL/assets/25-CXrORcCB.jpg",I="/TIL/assets/26-B__EoIUk.jpg",N="/TIL/assets/27-DlR9Z0FD.jpg",O={},P=n("h1",{id:"단국대학교-강의-시간표를-제공하는-서비스를-만들자",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#단국대학교-강의-시간표를-제공하는-서비스를-만들자"},[n("span",null,"단국대학교 강의 시간표를 제공하는 서비스를 만들자")])],-1),H=n("img",{src:e,alt:"11",style:{"max-width":"1000px",width:"100%"}},null,-1),R=n("blockquote",null,[n("p",null,"본 게시물은 이 사이드 프로젝트를 시작하게 된 계기와 어떤 부분에 대해서 고민했는지 다루고 있습니다.")],-1),M={href:"https://junilhwang.github.io/dku-schedule-manager/",target:"_blank",rel:"noopener noreferrer"},$={href:"https://github.com/junilHwang/dku-schedule-manager",target:"_blank",rel:"noopener noreferrer"},F=t('<h2 id="_0-간단한-요약" tabindex="-1"><a class="header-anchor" href="#_0-간단한-요약"><span>0. 간단한 요약</span></a></h2><ul><li>대학교 시간표를 긁어서 직접 시간표를 구성할 수 있는 서비스를 만들었다. <s>근데 왜 대학교측에서는 이런 기능을 안만들어주는걸까?</s></li><li>별도의 API서버가 없어도 되도록 구성했다.</li><li>대신에 Github Actions을 이용했다.</li><li>Github Actions을 실행하여 시간표를 1시간마다 읽어들여서 json 파일로 저장한다.</li><li>저장된 json 파일을 이용하여 FE에서 시간표를 구성할 수 있게 만들었다.</li><li>Github Pages로 호스팅했다.</li></ul><h2 id="_1-번뜩" tabindex="-1"><a class="header-anchor" href="#_1-번뜩"><span>1. 번뜩</span></a></h2>',3),J={href:"https://everytime.kr/",target:"_blank",rel:"noopener noreferrer"},U=n("s",null,"그 시절에는 왜 직접 시간표 서비스를 만들 생각을 하지 않았을까?",-1),K=t('<p>에브리타임은 전국의 모든 대학교를 대상으로 서비스하기 때문에 누군가가 누군가가 에브리타임 측에 시간표를 정리해서 보내지 않으면 아무도 에브리타임 내에서 시간표를 만들 수 없었다. 이건 지금도 마찬가지인 상황이다.</p><img src="'+u+'" alt="1" width="600px"><p>여기서 중요한 점은 에브리타임은 모든 학교를 대상으로 완전 자동화 하기가 힘들다는 것이다. 그래서 나는 내 모교인 단국대학교를 타겟팅하여 시간표 서비스를 만들어야겠다고 생각했다.</p><h2 id="_2-시간표-긁어오기" tabindex="-1"><a class="header-anchor" href="#_2-시간표-긁어오기"><span>2. 시간표 긁어오기</span></a></h2><p>처음에는 아예 API 서버를 만들까 고민했었는데, 서버를 만들게 될 경우 골치아픈 상황이 많을 것 같아서 일단 보류했다. 그래도 API 서버가 있으면 할 수 있는 일이 무척 많아진다. 내가 재학생이 아니라서 웹 포털의 모든 기능을 사용할 수 없는게 아쉬울뿐..</p><p>만약에 API 서버가 있다는 가정 하에 할 수 있는 일들을 나열해보자면</p><ul><li>서비스에서 만든 시간표를, 그대로 대학교 웹 포털에 등록하기</li><li>시간표 공유 <ul><li>지금도 이미지 기반으로 가능하긴 함</li></ul></li><li>실시간 채팅</li><li><s>등록된 시간표를 기반으로 수강신청</s><ul><li>하면 잡혀감. 철컹철컹</li><li>이론상 가능하긴 함</li></ul></li><li>기타 등등..?</li><li>사실 지금 당장 생각나는게 딱히 없다.</li><li>할 수 있는게 무궁무진 하긴 하다.</li></ul><p>어쨌든 별도의 서버가 없는 상태에서, 단국대 포털에 시간표가 올라오자마자 이를 읽어들이고 서비스로 제공해야 한다.</p>',8),V={href:"https://webinfo.dankook.ac.kr/tiac/univ/lssn/lpci/views/lssnPopup/tmtbl.do",target:"_blank",rel:"noopener noreferrer"},W=t('<p><img src="'+r+'" alt="2"></p><p>이 때 다음과 같이 크롬에서 발생한 네트워크 전송을 cURL 요청으로 복사하여 확인해볼 수 있다.</p><p><img src="'+k+`" alt="3"></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">curl</span> <span class="token string">&#39;https://webinfo.dankook.ac.kr/tiac/univ/lssn/lpci/views/lssnPopup/tmtbl.do&#39;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">&#39;Connection: keep-alive&#39;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">&#39;Cache-Control: max-age=0&#39;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">&#39;sec-ch-ua: &quot; Not;A Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;97&quot;, &quot;Chromium&quot;;v=&quot;97&quot;&#39;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">&#39;sec-ch-ua-mobile: ?0&#39;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">&#39;sec-ch-ua-platform: &quot;macOS&quot;&#39;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">&#39;Upgrade-Insecure-Requests: 1&#39;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">&#39;Origin: https://webinfo.dankook.ac.kr&#39;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">&#39;Content-Type: application/x-www-form-urlencoded&#39;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">&#39;User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36&#39;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">&#39;Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&#39;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">&#39;Sec-Fetch-Site: same-origin&#39;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">&#39;Sec-Fetch-Mode: navigate&#39;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">&#39;Sec-Fetch-User: ?1&#39;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">&#39;Sec-Fetch-Dest: document&#39;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">&#39;Referer: https://webinfo.dankook.ac.kr/tiac/univ/lssn/lpci/views/lssnPopup/tmtbl.do&#39;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">&#39;Accept-Language: ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7,ru;q=0.6&#39;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">$&#39;Cookie: _ga=GA1.3.323624598.1551946103; __utmz=245676305.1610941513.125.87.utmcsr=github.com|utmccn=(referral)|utmcmd=referral|utmcct=/; WMONID=MVr1R3I7eJH; CMS_JSESSIONID=AgULShDkdidZumNdj8LOsNh8LDcEccprVFI60NfwaeKApnjVnoe0<span class="token entity" title="\\u0021">\\u0021</span>-364676328; __utma=245676305.323624598.1551946103.1642701274.1643112161.150; __utmc=245676305; __utmt=1; __utmb=245676305.1.10.1643112161; TIS_JSESSIONID=VI19I6y0L0R7XxBoRlrUsUoOE4UMUpFRmZf0gopY5exZg2z5Kt5g<span class="token entity" title="\\u0021">\\u0021</span>-1807917221&#39;</span> <span class="token punctuation">\\</span></span>
<span class="line">  --data-raw <span class="token string">&#39;yy=2022&amp;semCd=1&amp;qrySxn=2&amp;curiCparCd=&amp;lesnPlcCd=1&amp;mjSubjKnm=&amp;mjDowCd=&amp;grade=&amp;pfltNm=&#39;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--compressed</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>위에서 불필요한 파라미터를 날려버리고, 필요한 부분만 추출하면 다음과 같다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># content-type, accept, data-raw(request body)를 제외한 나머지는 모두 제거한다.</span></span>
<span class="line"><span class="token function">curl</span> <span class="token string">&#39;https://webinfo.dankook.ac.kr/tiac/univ/lssn/lpci/views/lssnPopup/tmtbl.do&#39;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">&#39;Content-Type: application/x-www-form-urlencoded&#39;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">&#39;Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&#39;</span> <span class="token punctuation">\\</span></span>
<span class="line">  --data-raw <span class="token string">&#39;yy=2022&amp;semCd=1&amp;qrySxn=2&amp;curiCparCd=&amp;lesnPlcCd=1&amp;mjSubjKnm=&amp;mjDowCd=&amp;grade=&amp;pfltNm=&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>위의 curl 명령어를 실행해보면 다음과 같은 결과를 볼 수 있다.</p><p><img src="`+d+`" alt="4"></p><p>혹시 직접 실행해보았는가? 그렇다면 검색된 시간표가 HTML로 출력되는 것을 확인할 수 있을 것이다.</p><p>그런데 갑자기 accept를 <code>application/json</code> 으로 수정해보고 싶었다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 수신 방식(accept)은 application/json 으로</span></span>
<span class="line"><span class="token comment"># 전송 데이터는 다음과 같음</span></span>
<span class="line"><span class="token function">curl</span> <span class="token string">&#39;https://webinfo.dankook.ac.kr/tiac/univ/lssn/lpci/views/lssnPopup/tmtbl.do&#39;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">&#39;Content-Type: application/x-www-form-urlencoded&#39;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">&#39;Accept: application/json&#39;</span> <span class="token punctuation">\\</span></span>
<span class="line">  --data-raw <span class="token string">&#39;yy=2022&amp;semCd=1&amp;qrySxn=2&amp;curiCparCd=&amp;lesnPlcCd=1&amp;mjSubjKnm=&amp;mjDowCd=&amp;grade=&amp;pfltNm=&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>그랬더니 응답값을 JSON으로 보내줬다.</p><p><img src="`+v+'" alt="5"></p><img src="'+m+'" alt="6" width="400"><p>혹시나 해서 시도해봤는데, JSON으로 보내줬다. <s>개이득</s></p><p>왜 그런가 추측해봤는데 spring의 controller에서 ModelAndView를 사용해서 endpoint를 구성하면 accept에 따라서 응답값의 형태가 달라지는 것 같다. <s>아마 맞을 것 같은데 알아보기가 귀찮다.</s></p><p>어쨌든 결과적으로 HTML을 파싱해야 하는 수고를 덜었기 때문에 기분이 좋아졌다.</p><p>필요한 HTTP 요청을 확인했으니, 직접 코드로 만들어보자. 필자는 프론트엔드 개발자로 일하고 있기 때문에 NestJS를 이용해서(<s>무슨상관인데?</s>) 프로젝트를 구성했다.</p>',18),G={class:"custom-container tip"},z=n("p",{class:"custom-container-title"},"NestJS",-1),Z=n("ul",null,[n("li",null,"Nest(NestJS)는 효율적이고 확장 가능한 Node.js 서버 측 애플리케이션을 구축하기 위한 프레임워크입니다."),n("li",null,"프로그레시브 JavaScript를 사용하고 TypeScript로 구축되고 완벽하게 지원하며, OOP, FP, FRP의 요소를 결합하여 사용할 수 있습니다."),n("li",null,"내부적으로 Nest는 Express(기본값)와 같은 강력한 HTTP 서버 프레임워크를 사용하며 선택적으로 Fastify도 사용하도록 구성할 수 있습니다."),n("li",null,"Nest는 이러한 일반적인 Node.js 프레임워크(Express/Fastify)보다 높은 수준의 추상화를 제공하지만 해당 API를 개발자에게 직접 노출합니다."),n("li",null,"이를 통해 개발자는 기본 플랫폼에서 사용할 수 있는 수많은 타사 모듈을 자유롭게 사용할 수 있습니다.")],-1),X={href:"https://docs.nestjs.com/",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://docs.nestjs.com/standalone-applications",target:"_blank",rel:"noopener noreferrer"},Y=t(`<div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> NestFactory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/core&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> AppModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./app.module&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> AppService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./app.service&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">await</span> NestFactory<span class="token punctuation">.</span><span class="token function">createApplicationContext</span><span class="token punctuation">(</span>AppModule<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> appService<span class="token operator">:</span> AppService <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>AppService<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  appService<span class="token punctuation">.</span><span class="token function">saveSchedule</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// appService에서 데이터를 저장함</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>위와 같이 <code>NestFactory.createApplicationContext</code> 으로 만들 경우 단순하게 Nest로 구성된 코드를 실행해준다. 많은 기능이 필요 없기 때문에 appService에 schedule을 저장하는 코드를 구성했다.</p>`,2),nn={href:"https://github.dev/JunilHwang/dku-schedule-manager/blob/master/.packages/dku-schedule-cralwer/src/app.service.ts",target:"_blank",rel:"noopener noreferrer"},sn=t(`<div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">const</span> payloads <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line highlighted">    yy<span class="token operator">:</span> <span class="token number">2021</span><span class="token punctuation">,</span> <span class="token comment">// 년도</span></span>
<span class="line highlighted">    semCd<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token comment">// 학기</span></span>
<span class="line highlighted">    qrySxn<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token comment">// 1: 전공, 2: 교양</span></span>
<span class="line highlighted">    lesnPlcCd<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 1: 죽전캠, 2: 천안캠</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">/* 위의 양식에 따라 2021년 2학기 ~ 2022년 1학기 페이로드를 작성함 */</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Injectable</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppService</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">private</span> <span class="token keyword">readonly</span> scheduleClient<span class="token operator">:</span> AxiosInstance<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> scheduleClient <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">      baseURL<span class="token operator">:</span> <span class="token string">&quot;https://webinfo.dankook.ac.kr&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    scheduleClient<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> data <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>scheduleClient <span class="token operator">=</span> scheduleClient<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token function">saveSchedule</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> dataPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">INIT_CWD</span><span class="token punctuation">,</span> <span class="token string">&quot;../../data&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 2021년 2학기와 2022년 1학기에 대한 모든 시간표 정보를 저장한다.</span></span>
<span class="line highlighted">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> payload<span class="token punctuation">]</span> <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>payloadMap<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">      <span class="token keyword">const</span> lectures<span class="token operator">:</span> Lecture<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fetchSchedule</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">      fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span></span>
<span class="line highlighted">        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>dataPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token comment">// 원래 더 복잡한 로직이지만, 일단 간단하게 표현했음</span></span>
<span class="line highlighted">        <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>lectures<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line highlighted">        <span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">,</span></span>
<span class="line highlighted">      <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 시간표를 가져오기 위한 API 요청</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token function">fetchSchedule</span><span class="token punctuation">(</span>payload<span class="token operator">:</span> PayloadBody<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Lecture<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span> scheduleClient <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token string">&quot;/tiac/univ/lssn/lpci/views/lssnPopup/tmtbl.do&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> data <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">[</span>k<span class="token punctuation">,</span> v<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>k<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>v<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&amp;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span> headers <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line highlighted">    <span class="token keyword">const</span> response<span class="token operator">:</span> ScheduleResponse <span class="token operator">=</span> <span class="token keyword">await</span> scheduleClient<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span></span>
<span class="line highlighted">      url<span class="token punctuation">,</span></span>
<span class="line highlighted">      data<span class="token punctuation">,</span></span>
<span class="line highlighted">      config<span class="token punctuation">,</span></span>
<span class="line highlighted">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 원래 response에 별에별 정보가 다 들어있으나.. 딱 시간표 정보만 추출함</span></span>
<span class="line">    <span class="token keyword">return</span> response<span class="token punctuation">.</span>lctTmtblDscMjList<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>코드로 보면 좀 복잡해보일 수 있는데, 요약하자면 다음과 같은 기능을 수행하는 것이다.</p><ul><li><p>단국대 포털에서 다음과 같은 데이터를 가져온다.</p><ul><li>죽전 캠퍼스의 2021년 2학기 교양 시간표</li><li>천안 캠퍼스의 2021년 2학기 교양 시간표</li><li>죽전 캠퍼스의 2021년 2학기 전공 시간표</li><li>천안 캠퍼스의 2021년 2학기 전공 시간표</li><li>죽전 캠퍼스의 2022년 1학기 교양 시간표</li><li>천안 캠퍼스의 2022년 1학기 교양 시간표</li><li>죽전 캠퍼스의 2022년 1학기 전공 시간표</li><li>천안 캠퍼스의 2022년 1학기 전공 시간표</li></ul></li><li><p>2021년 데이터는 테스트를 위해서 가져온다고 보면 된다.</p></li><li><p>시간표를 가져온다음에 JSON 파일로 저장한다.</p><p><img src="`+b+'" alt="7"></p><ul><li><s>음.. 그렇다. 별거 없다.</s></li><li>그런데 여기서부터가 제일 중요하다.</li><li><strong>API 서버를 만들지 않기 위해서 github repository를 적극적으로 사용하는 것</strong>이다.</li></ul></li><li><p>github actions을 이용하여 위의 프로세스를 주기적으로 실행한다.</p><ul><li>1시간 주기로 실행하면 적당할 것 같다.</li></ul></li><li><p>json파일이 만들어지면</p><ul><li>commit 후에</li><li>github repository에 push한다. → 이게 제일 중요하다.</li></ul></li><li><p>push가 되는 순간, github pages가 호스팅 된다.</p></li><li><p>github pages에서 json 파일을 읽어들인 후에 시간표를 구성할 수 있도록 만든다.</p><ul><li>여기서부터는 frontend의 영역이라고 보면 된다.</li></ul></li></ul><p>조금 흐름이 끊긴 감이 없지않아 있지만, 어쨌든 github actions을 구성해보자.</p><div class="custom-container tip"><p class="custom-container-title">Github Actions</p><ul><li>Github Actions = Workflow 자동화 도구</li><li>Github Actions를 사용하면 이제 세계적 수준의 CI/CD를 통해 모든 소프트웨어 워크플로를 쉽게 자동화할 수 있습니다.</li><li>Github에서 바로 코드를 빌드, 테스트 및 배포하세요. 코드 검토, 분기 관리 및 문제 분류가 원하는 방식으로 작동하도록 합니다.</li></ul><p>라고 공식문서에 나와있다.</p></div><p>project root를 기준으로 <code>.github/workflows/main.yml</code> 폴더를 만들거나 그냥 github actions에서 workflow를 추가해도 된다.</p><p><img src="'+g+`" alt="8"></p><p>actions tab으로 이동한 다음에 <code>New workflow</code> 버튼을 클릭하면 만들어진다.</p><p>그리고 다음과 같이 작성했다.</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&quot;Schedule Save&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token key atrule">on</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">schedule</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 1시간 마다 실행</span></span>
<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">cron</span><span class="token punctuation">:</span> <span class="token string">&#39;0 */1 * * *&#39;</span></span>
<span class="line"></span>
<span class="line">  <span class="token key atrule">workflow_dispatch</span><span class="token punctuation">:</span></span>
<span class="line"></span>
<span class="line"><span class="token key atrule">jobs</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">build</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># ubuntu imageFmf tkdydgksek.</span></span>
<span class="line">    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest</span>
<span class="line"></span>
<span class="line">    <span class="token key atrule">steps</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token comment"># 현재 repository로 checkout</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@master</span>
<span class="line">        <span class="token key atrule">with</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">ref</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.head_ref <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token comment"># node를 사용한다.</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@v2</span>
<span class="line"></span>
<span class="line">      <span class="token comment"># 패키지를 설치하고, build하고, build된걸 실행하는 과정이라고 보면 된다.</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Data Save</span>
<span class="line">          <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string"></span>
<span class="line">          cd .packages/dku-schedule-cralwer</span>
<span class="line">          yarn install</span>
<span class="line">          yarn build</span>
<span class="line">          yarn start:prod</span>
<span class="line">          cd ../..</span></span>
<span class="line"></span>
<span class="line">      <span class="token comment"># 저장된 json파일을 github repository에 push 한다.</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Commit And Push</span>
<span class="line">        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions<span class="token punctuation">-</span>js/push@master</span>
<span class="line">        <span class="token key atrule">with</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">github_token</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.GITHUB_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line">          <span class="token key atrule">author_email</span><span class="token punctuation">:</span> junil.h@kakao.com</span>
<span class="line">          <span class="token key atrule">author_name</span><span class="token punctuation">:</span> JunilHwang</span>
<span class="line">          <span class="token key atrule">branch</span><span class="token punctuation">:</span> master</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+h+'" alt="9"></p><p>기본적으로 1시간 마다 실행되도록 구성했으며, 필요하다면 직접 workflow를 실행해도 된다.</p><p><img src="'+y+'" alt="10"></p><p>글을 작성하고 있는 날짜에 시간표가 계속 업데이트 되고 있어서 commit 내역이 자동으로 많아지고 있다. <s>개이득</s></p><h2 id="_3-fe" tabindex="-1"><a class="header-anchor" href="#_3-fe"><span>3. FE</span></a></h2><p><img src="'+e+'" alt="11"></p><p>회사에서 신규 프로젝트를 Vue3 + Vite + Typescript로 진행할 예정이여서, 사이드 프로젝트에도 똑같은 기술 스택을 적용했다.</p><p>참고로 vite의 장점은 다음과 같다.</p><p><img src="'+q+`" alt="12"></p><ul><li>번들링을 하지 않기 때문에 실행 속도가 무척 빠르다. <ul><li>브라우저 모듈을 사용한다. <ul><li>내부적으로 rollup을 사용한다.</li><li>브라우저 모듈을 사용하기 때문에 프로젝트 규모와 상관 없이 로딩 속도가 일정하다.</li></ul></li><li>즉, IE는 지원하지 않는다.</li><li>억지로 지원할 수 있도록 환경을 구성할 순 있지만, 그렇다면 vite를 사용하는 이유가 없다.</li></ul></li><li>핫 모듈 시스템이 빠르게 작동한다. <ul><li>파일이 변경되고 서버가 다시 실행되는 과정이 정말 빠르다.</li><li>웹팩이랑 비교 불가</li></ul></li><li>vue, react 등의 프레임워크를 사용하기 위한 템플릿을 제공한다.</li></ul><h3 id="프로젝트-구성" tabindex="-1"><a class="header-anchor" href="#프로젝트-구성"><span>프로젝트 구성</span></a></h3><p>vite 프로젝트 구성은 다음과 같이 할 수 있다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token operator">&gt;</span> <span class="token function">yarn</span> create vite <span class="token punctuation">[</span>프로젝트 이름<span class="token punctuation">]</span> <span class="token parameter variable">--template</span> <span class="token punctuation">[</span>템플릿 이름<span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,23),an=n("code",null,"vanilla",-1),pn=n("code",null,"vanilla-ts",-1),tn=n("code",null,"vue",-1),en=n("code",null,"vue-ts",-1),ln=n("code",null,"react",-1),cn=n("code",null,"react-ts",-1),on=n("code",null,"preact",-1),un=n("code",null,"preact-ts",-1),rn=n("code",null,"lit",-1),kn=n("code",null,"lit-ts",-1),dn=n("code",null,"svelte`` svelte-ts",-1),vn={href:"https://vitejs.dev/guide/#scaffolding-your-first-vite-project",target:"_blank",rel:"noopener noreferrer"},mn=t(`<p>어쨌든 나는 <code>vue-ts</code>로 구성했다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token operator">&gt;</span> <span class="token function">yarn</span> create vite dku-schedule-client <span class="token parameter variable">--template</span> vue-ts</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>추가로 vue-router도 설치했다. vue3와 같이 사용하기 위해선 최신 버전 router를 설치해야 한다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token operator">&gt;</span> <span class="token function">yarn</span> <span class="token function">add</span> vue-router@next</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>그러면 다음과 같이 <code>package.json</code>이 구성될 것이다.</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dku-schedule-client&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0.0.0&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue-tsc --noEmit &amp;&amp; vite build&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;preview&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite preview&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;dependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;vue&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^3.2.25&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;vue-router&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.0.12&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;devDependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;@vitejs/plugin-vue&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^2.0.0&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;typescript&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.4.4&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;vite&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^2.7.2&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;vue-tsc&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^0.29.8&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="vue3의-script-setup" tabindex="-1"><a class="header-anchor" href="#vue3의-script-setup"><span>Vue3의 script setup</span></a></h3><p>vue3에서 제일 신기했던(?) 것은 <code>&lt;script setup&gt;</code> 이다. 따로 export를 하지 않아도 되고, 선언된 변수를 template 내부에서 그냥 사용하면 된다.</p><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue" data-title="vue"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line"><span class="token keyword">const</span> msg <span class="token operator">=</span> <span class="token string">&#39;Hello!&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>log<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ msg }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>그리고 react의 useEffect 같은 hook도 있다.</p><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue" data-title="vue"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> watchEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> $root <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">watchEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$root<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>This is a root element<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>template ref를 사용하려면 위와 같은 방식으로 사용해야 정상적으로 작동한다.</p><h3 id="디자인시스템" tabindex="-1"><a class="header-anchor" href="#디자인시스템"><span>디자인시스템</span></a></h3><p>디자인 시스템은 ElementUI Plus를 사용했다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token operator">&gt;</span> <span class="token function">yarn</span> <span class="token function">add</span> element-plus @element-plus/icons-vue</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>element ui plus의 icon을 사용하기 위해서 별도의 패키지를 추가로 설치해야 한다.</li></ul><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> ElementPlus <span class="token keyword">from</span> <span class="token string">&quot;element-plus&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token string">&quot;element-plus/dist/index.css&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token string">&quot;./styles/reset.scss&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 한글어팩 적용</span></span>
<span class="line"><span class="token keyword">import</span> ko <span class="token keyword">from</span> <span class="token string">&quot;element-plus/es/locale/lang/ko&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&quot;./App.vue&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> router <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./router&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementPlus<span class="token punctuation">,</span> <span class="token punctuation">{</span> locale<span class="token operator">:</span> ko <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// App에 등록</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&quot;#app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>그러면 다음과 같이 사용할 수 있다.</p><p><img src="`+f+`" alt="13"></p><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue" data-title="vue"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line"><span class="token comment">// icon 관련 component를 가져온다.</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Download<span class="token punctuation">,</span> Search<span class="token punctuation">,</span> Share <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@element-plus/icons-vue&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>controller<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button-group</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">:icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Search<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>emit(&#39;search&#39;)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">round</span> <span class="token attr-name">plain</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      검색</span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span></span>
<span class="line">      <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ label, value } in conditions<span class="token punctuation">&quot;</span></span></span>
<span class="line">      <span class="token attr-name">:type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value === condition ? &#39;primary&#39; : &#39;default&#39;<span class="token punctuation">&quot;</span></span></span>
<span class="line">      <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>emit(&#39;select-semester&#39;, value)<span class="token punctuation">&quot;</span></span></span>
<span class="line">      <span class="token attr-name">round</span></span>
<span class="line">    <span class="token punctuation">&gt;</span></span></span>
<span class="line">      {{ label }}</span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button-group</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button-group</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>shares<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-popover</span></span>
<span class="line">      <span class="token attr-name">placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>top-start<span class="token punctuation">&quot;</span></span></span>
<span class="line">      <span class="token attr-name">:width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>200<span class="token punctuation">&quot;</span></span></span>
<span class="line">      <span class="token attr-name">trigger</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hover<span class="token punctuation">&quot;</span></span></span>
<span class="line">      <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>클립보드에 시간표 URL을 복사합니다.<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#reference</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>emit(&#39;share&#39;)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Share<span class="token punctuation">&quot;</span></span> <span class="token attr-name">round</span> <span class="token attr-name">plain</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          시간표 공유</span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-popover</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-popover</span></span>
<span class="line">      <span class="token attr-name">placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>top-start<span class="token punctuation">&quot;</span></span></span>
<span class="line">      <span class="token attr-name">:width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>200<span class="token punctuation">&quot;</span></span></span>
<span class="line">      <span class="token attr-name">trigger</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hover<span class="token punctuation">&quot;</span></span></span>
<span class="line">      <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>시간표 이미지를 다운로드합니다.<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#reference</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>emit(&#39;download&#39;)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Download<span class="token punctuation">&quot;</span></span> <span class="token attr-name">round</span> <span class="token attr-name">plain</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          다운로드</span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-popover</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button-group</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>생각보다 더 깔끔해서 만족스러웠다.</p><p>그리고 alert 대신에 사용할 수 있는 Message 관련 API도 존재한다.</p><p><img src="`+w+`" alt="14"></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> ElMessage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;element-plus&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">ElMessage<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;삭제되었습니다.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="시간표-저장" tabindex="-1"><a class="header-anchor" href="#시간표-저장"><span>시간표 저장</span></a></h3><p>시간표를 이미지로 저장하기 위해서 html2canvas를 설치해서 사용했다.</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">handleDownload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>$main<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> $clone <span class="token operator">=</span> $main<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> $cloneHeader <span class="token operator">=</span> $clone<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;header&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  $clone<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;.controller&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  $cloneHeader<span class="token punctuation">.</span>style<span class="token punctuation">.</span>cssText <span class="token operator">=</span> <span class="token string">&quot;position: static; margin-bottom: -41px;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  $clone<span class="token punctuation">.</span>style<span class="token punctuation">.</span>cssText <span class="token operator">=</span> <span class="token string">&quot;width: 800px; position: absolute: left: -800px; top: 0;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  $main<span class="token punctuation">.</span>value<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>$clone<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// html -&gt; canvas -&gt; base64 -&gt; 다운로드</span></span>
<span class="line highlighted">  <span class="token function">html2canvas</span><span class="token punctuation">(</span>$clone<span class="token punctuation">,</span> <span class="token punctuation">{</span> height<span class="token operator">:</span> $clone<span class="token punctuation">.</span>scrollHeight <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">    $clone<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">    <span class="token keyword">const</span> $anchor <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">    $anchor<span class="token punctuation">.</span>href <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">    $anchor<span class="token punctuation">.</span>download <span class="token operator">=</span> <span class="token string">&quot;시간표.png&quot;</span><span class="token punctuation">;</span></span>
<span class="line highlighted">    $anchor<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line highlighted">    $main<span class="token punctuation">.</span>value<span class="token punctuation">.</span>style <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line highlighted">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>만들어진 시간표를 canvas로 변환하고, 다시 base64로 변환하여 이미지로 다운받을 수 있게 된다.</p><p><img src="`+_+'" alt="15"></p><h3 id="시간표-공유" tabindex="-1"><a class="header-anchor" href="#시간표-공유"><span>시간표 공유</span></a></h3>',30),bn={href:"https://junilhwang.github.io/dku-schedule-manager/shared/?init=%5B%7B%22buldAndRoomCont%22:%22%EC%9B%947~9(%EC%83%81%EA%B2%BD323)%3Cp%3E%EC%88%981~3(%EC%83%81%EA%B2%BD323)%22,%22wkLecrEmpnm%22:%22%EC%9D%B4%EB%B4%89%EC%88%98%22,%22subjMethod%22:null,%22cybCoronaTyNm4%22:null,%22cybCoronaTyNm%22:%22%EC%9B%90%EA%B2%A9%EC%88%98%EC%97%85%22,%22dvclsNb%22:1,%22opOrgid%22:%222000000989%22,%22cybCoronaTyNm2%22:null,%22dsgnCrd%22:0,%22cybCoronaTyNm3%22:null,%22oglngLctLanggCdnm%22:null,%22yy%22:%222022%22,%22cybLtrTyNm%22:null,%22curiCparNm%22:null,%22kor%22:9,%22crd%22:%223(0)%22,%22tmtblChgSxnCd%22:null,%22tmtblChgSxnNm%22:null,%22grade%22:3,%22eng%22:9,%22tkcrsEcaOrgnm%22:%22SW%EC%9C%B5%ED%95%A9%EB%8C%80%ED%95%99%3Cp%3ESW%EC%9C%B5%ED%95%A9%ED%95%99%EB%B6%80%3Cp%3ESW%EC%9C%B5%ED%95%A9%EA%B2%BD%EC%A0%9C%EA%B2%BD%EC%98%81%EC%A0%84%EA%B3%B5%22,%22pfltId%22:%2212011227%22,%22status%22:1,%22subjKnm%22:%22%EA%B5%AD%EC%A0%9C%EA%B8%B0%EC%97%85%EA%B2%BD%EC%98%81%EB%A1%A0%22,%22tkcrsEcaOrgid%22:%222000004874%22,%22subjId%22:%22320190%22,%22semCd%22:%221%22,%22oglngLctLanggCd%22:null,%22checked%22:%220%22%7D,%7B%22buldAndRoomCont%22:%22%EC%9B%944~6(2%EA%B3%B5105)%3Cp%3E%ED%99%941~3(%EC%86%8C%ED%94%84%ED%8A%B8307)%22,%22wkLecrEmpnm%22:%22%EB%82%98%EC%97%B0%EB%AC%B5%22,%22subjMethod%22:null,%22cybCoronaTyNm4%22:null,%22cybCoronaTyNm%22:%22%EC%9B%90%EA%B2%A9%EC%88%98%EC%97%85%22,%22dvclsNb%22:2,%22opOrgid%22:%222000000989%22,%22cybCoronaTyNm2%22:null,%22dsgnCrd%22:0,%22cybCoronaTyNm3%22:null,%22oglngLctLanggCdnm%22:null,%22yy%22:%222022%22,%22cybLtrTyNm%22:null,%22curiCparNm%22:null,%22kor%22:0,%22crd%22:%223(0)%22,%22tmtblChgSxnCd%22:null,%22tmtblChgSxnNm%22:null,%22grade%22:3,%22eng%22:0,%22tkcrsEcaOrgnm%22:%22SW%EC%9C%B5%ED%95%A9%EB%8C%80%ED%95%99%3Cp%3ESW%EC%9C%B5%ED%95%A9%ED%95%99%EB%B6%80%3Cp%3ESW%EC%9C%B5%ED%95%A9%EA%B2%BD%EC%A0%9C%EA%B2%BD%EC%98%81%EC%A0%84%EA%B3%B5%22,%22pfltId%22:%2211932468%22,%22status%22:1,%22subjKnm%22:%22%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4(CE)%22,%22tkcrsEcaOrgid%22:%222000004874%22,%22subjId%22:%22527900%22,%22semCd%22:%221%22,%22oglngLctLanggCd%22:null,%22checked%22:%220%22%7D%5D",target:"_blank",rel:"noopener noreferrer"},gn=t(`<h3 id="시간표-검색" tabindex="-1"><a class="header-anchor" href="#시간표-검색"><span>시간표 검색</span></a></h3><ul><li>일단 사이트에 접속하자 마자 모든 시간표 데이터를 가져온다.</li></ul><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue" data-title="vue"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line"><span class="token comment">// 검색 옵션을 초기화하고, 현재 학기에 대한 시간표 데이터를 가져옴</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fetchLectures</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  searchOptions<span class="token punctuation">.</span>lectures <span class="token operator">=</span> <span class="token keyword">await</span> scheduleService<span class="token punctuation">.</span><span class="token function">getAllSchedules</span><span class="token punctuation">(</span></span>
<span class="line">    year<span class="token punctuation">.</span>value<span class="token punctuation">,</span></span>
<span class="line">    semester<span class="token punctuation">.</span>value</span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  searchOptions<span class="token punctuation">.</span>days <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  searchOptions<span class="token punctuation">.</span>times <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  searchOptions<span class="token punctuation">.</span>query <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  searchOptions<span class="token punctuation">.</span>grades <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  searchOptions<span class="token punctuation">.</span>majors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  searchOptions<span class="token punctuation">.</span>page <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">  searchOptions<span class="token punctuation">.</span>cursor <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">  searchOptions<span class="token punctuation">.</span>currentLectures <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token function">fetchNextData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 데이터가 무척 많기 때문에, 렌더링에 필요한 데이터만 가져오는 함수</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">fetchNextData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/* 생략 */</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 컴포넌트가 로딩 되자 마자 시간표 데이터를 가져옴</span></span>
<span class="line"><span class="token function">fetchLectures</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>일단 한 학기에 개설되는 강의가 대략 10000개 정도 된다.</li><li>그래서 이걸 한 번에 렌더링 할 경우 당연히 사이트가 버벅일 수 밖에 없다.</li><li>그래서 필요한 갯수만큼, <code>대략 100개씩 끊어서 가져오는 로직</code>이 필요하다.</li></ul><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">fetchNextData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">{</span> grades<span class="token punctuation">,</span> lectures<span class="token punctuation">,</span> days<span class="token punctuation">,</span> times<span class="token punctuation">,</span> query<span class="token punctuation">,</span> currentLectures<span class="token punctuation">,</span> majors <span class="token punctuation">}</span> <span class="token operator">=</span> searchOptions<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  searchOptions<span class="token punctuation">.</span>page <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// arr에 추가로 보여줄 만큼의 데이터를 쌓는다.</span></span>
<span class="line">  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// cursor 부터 반복문을 시작한다.</span></span>
<span class="line">  <span class="token comment">// cursor가 lectures의 사이즈가 넘어가면 반복문이 종료된다.</span></span>
<span class="line">  <span class="token keyword">let</span> cursor <span class="token operator">=</span> searchOptions<span class="token punctuation">.</span>cursor<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> cursor <span class="token operator">&lt;</span> lectures<span class="token punctuation">.</span>length<span class="token punctuation">;</span> cursor <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// arr가 pageSize 만큼 채워지면 반복문을 종료한다.</span></span>
<span class="line highlighted">    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&gt;=</span> pageSize<span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">const</span> lecture <span class="token operator">=</span> lectures<span class="token punctuation">[</span>cursor<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span> grade<span class="token punctuation">,</span> buldAndRoomCont<span class="token punctuation">,</span> subjKnm<span class="token punctuation">,</span> tkcrsEcaOrgnm <span class="token punctuation">}</span> <span class="token operator">=</span> lecture<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 검색어가 입력된 상태일 때, 검색어로 필터링</span></span>
<span class="line highlighted">    <span class="token keyword">if</span> <span class="token punctuation">(</span>query<span class="token punctuation">.</span>length <span class="token operator">!==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>subjKnm<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">continue</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 학년이 선택된 상태일 때, 학년으로 필터링</span></span>
<span class="line highlighted">    <span class="token keyword">if</span> <span class="token punctuation">(</span>grades<span class="token punctuation">.</span>length <span class="token operator">!==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>grades<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>grade<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">continue</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 전공이 선택된 상태일 때, 전공 정보로 필터링</span></span>
<span class="line highlighted">    <span class="token keyword">if</span> <span class="token punctuation">(</span>majors<span class="token punctuation">.</span>length <span class="token operator">!==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>majors<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>tkcrsEcaOrgnm<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">continue</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 요일이 선택된 상태일 때, 요일 정보로 필터링</span></span>
<span class="line highlighted">    <span class="token keyword">if</span> <span class="token punctuation">(</span></span>
<span class="line highlighted">      days<span class="token punctuation">.</span>length <span class="token operator">!==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span></span>
<span class="line highlighted">      buldAndRoomCont <span class="token operator">&amp;&amp;</span></span>
<span class="line highlighted">      days<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>day<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> buldAndRoomCont<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>day<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span></span>
<span class="line highlighted">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">continue</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 시간이 선택된 상태일 때, 요일 + 시간으로 필터링</span></span>
<span class="line">    <span class="token comment">// 사실 이 로직은 문제가 있다. 요일과 시간의 and 조건이 정상적으로 작동하지 않는 상태임</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span></span>
<span class="line">      times<span class="token punctuation">.</span>length <span class="token operator">!==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span></span>
<span class="line">      times<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>timeKey<span class="token punctuation">)</span> <span class="token operator">=&gt;</span></span>
<span class="line">        <span class="token punctuation">(</span>buldAndRoomCont <span class="token operator">||</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span></span>
<span class="line">          <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;p&gt;&quot;</span><span class="token punctuation">)</span></span>
<span class="line">          <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^([가-힣])(\\d+(~\\d+)?)(.*)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&quot;$2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">          <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">const</span> <span class="token punctuation">[</span>start<span class="token punctuation">,</span> end<span class="token punctuation">]</span> <span class="token operator">=</span> v<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>Number<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>end <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token function">Array</span><span class="token punctuation">(</span>end <span class="token operator">-</span> start <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">              <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span></span>
<span class="line">              <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> k<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> v <span class="token operator">+</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">          <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">          <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">)</span></span>
<span class="line">          <span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>timeKey<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span></span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">continue</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 위의 조건들을 다 통과하면, arr에 과목 정보 추가</span></span>
<span class="line">    arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>lecture<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// cursor값 초기화</span></span>
<span class="line">  searchOptions<span class="token punctuation">.</span>cursor <span class="token operator">=</span> cursor<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 렌더링 될 데이터 추가</span></span>
<span class="line highlighted">  currentLectures<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>딱 봐도 망한 코드다. 정확히는, 리팩토링이 필요하다. 원래 Array 관련 메소드를 사용했었는데 그럴 경우 배열의 모든 요소를 순회하기 때문에 무척 비효율적이다. 배열 사이즈가 1000개 정도면 그냥 쓰겠지만, 10000개 정도 되니까 무조건 최적화가 필요한 상황이다. 그래서 몇 년 만에 이렇게 날 것의 for문을 사용했다. <s>Java의 Stream이 필요하다.</s></p><p>이럴 때 필요한 것이 바로 <code>함수형 프로그래밍</code> 이다. 인프런의 유인동님 강의를 추천한다.</p>`,7),hn={href:"https://github.com/marpple/FxTS",target:"_blank",rel:"noopener noreferrer"},yn=t(`<div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> pipe<span class="token punctuation">,</span> range<span class="token punctuation">,</span> map<span class="token punctuation">,</span> filter<span class="token punctuation">,</span> concurrent<span class="token punctuation">,</span> take<span class="token punctuation">,</span> each <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@fxts/core&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> 추가될_과목_정보_배열 <span class="token operator">=</span> <span class="token function">pipe</span><span class="token punctuation">(</span></span>
<span class="line">  과목_정보_배열<span class="token punctuation">,</span></span>
<span class="line">  <span class="token function">filter</span><span class="token punctuation">(</span>검색어_필터_함수<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token function">filter</span><span class="token punctuation">(</span>학년_필터_함수<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token function">filter</span><span class="token punctuation">(</span>요일_필터_함수<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token function">filter</span><span class="token punctuation">(</span>시간_필터_함수<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token function">take</span><span class="token punctuation">(</span>페이지_크기<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token function">concurrent</span><span class="token punctuation">(</span>페이지_크기<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>시작될 key값이 필요하기 때문에 초기 데이터에 대한 정제가 더 필요할 것 같다.</p><h3 id="vite에서-프로젝트-외부-데이터-접근" tabindex="-1"><a class="header-anchor" href="#vite에서-프로젝트-외부-데이터-접근"><span>Vite에서 프로젝트 외부 데이터 접근</span></a></h3><p><img src="`+C+`" alt="16"></p><p>이 프로젝트의 github repository 구조는 위와 같다.</p><p>이를 보여주는 이유는, <code>/.packages/dku-schedule-client/src/*/**</code> 에서 <code>/data/*/**</code>에 대한 접근이 필요하기 때문이다.</p><p>vite는 기본적으로 브라우저 모듈 방식으로 파일 시스템을 가져오기 때문에, 프로젝트 외부에 있는 파일에 접근하기 위해선 별도의 설정이 필요하다.</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vite&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">&quot;@vitejs/plugin-vue&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> path <span class="token keyword">from</span> <span class="token string">&quot;path&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// https://vitejs.dev/config/</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  resolve<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">    alias<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">      <span class="token comment">// alias를 이용해서 /data 폴더에 접근시 uri를 변경해준다.</span></span>
<span class="line highlighted">      <span class="token string-property property">&quot;/data&quot;</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;../../data&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line highlighted">      <span class="token string-property property">&quot;@&quot;</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;src&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line highlighted">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  server<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    fs<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 프로젝트 외부 접근을 허용한다.</span></span>
<span class="line highlighted">      allow<span class="token operator">:</span> <span class="token punctuation">[</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;../../&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  base<span class="token operator">:</span> <span class="token string">&quot;./&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  build<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    outDir<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;../../.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>tsconfig에서도 alias 설정이 필요하다.</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token string-property property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string-property property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;esnext&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&quot;useDefineForClassFields&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;esnext&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&quot;moduleResolution&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&quot;strict&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&quot;jsx&quot;</span><span class="token operator">:</span> <span class="token string">&quot;preserve&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&quot;sourceMap&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&quot;resolveJsonModule&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&quot;esModuleInterop&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&quot;lib&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;esnext&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dom&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&quot;types&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;element-plus/global&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;@types/node&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line highlighted">    <span class="token string-property property">&quot;baseUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span></span>
<span class="line highlighted">    <span class="token string-property property">&quot;paths&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">      <span class="token string-property property">&quot;/data/*&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;../../data/*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line highlighted">      <span class="token string-property property">&quot;@/*&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;./src/*&quot;</span><span class="token punctuation">]</span></span>
<span class="line highlighted">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string-property property">&quot;include&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;src/**/*.ts&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;src/**/*.d.ts&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;src/**/*.tsx&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;src/**/*.vue&quot;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>코드에서는 다음과 같이 dynamic import를 이용해서 json 파일을 가져온다.</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">_fetchData</span> <span class="token punctuation">(</span></span>
<span class="line">  path<span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Lecture<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// production 모드일 때는 fetch api를 이용하여 json 파일을 가져온다.</span></span>
<span class="line">  <span class="token comment">// dynamic import로 json을 가져올 경우 content-type 관련 오류가 발생하기 때문이다.</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">PROD</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">    <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=&gt;</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 개발 모드일 때만 dynamic import를 사용한다.</span></span>
<span class="line">  <span class="token comment">// 지금 생각해보니 proxy 설정을 사용해도 됐을듯.</span></span>
<span class="line highlighted">  <span class="token keyword">return</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token comment">/* @vite-ignore */</span>path<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>v <span class="token operator">=&gt;</span> v<span class="token punctuation">.</span>default <span class="token keyword">as</span> Lecture<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>dev 모드일 때와 prod 모드일 때 사용하는 코드를 다르게 한다. 자세한 내용은 주석 참고</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getSchedules</span><span class="token punctuation">(</span></span>
<span class="line">  payload<span class="token operator">:</span> SchedulePayload</span>
<span class="line"><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Lecture<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">getDataPath</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cache<span class="token punctuation">[</span>path<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    cache<span class="token punctuation">[</span>path<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">_fetchData</span><span class="token punctuation">(</span><span class="token function">getDataPath</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">return</span> cache<span class="token punctuation">[</span>path<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getAllSchedules</span><span class="token punctuation">(</span></span>
<span class="line">  year <span class="token operator">=</span> <span class="token number">2022</span><span class="token punctuation">,</span></span>
<span class="line">  semester <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Lecture<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> results <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span></span>
<span class="line">    <span class="token function">getSchedules</span><span class="token punctuation">(</span><span class="token punctuation">{</span> year<span class="token punctuation">,</span> semester<span class="token punctuation">,</span> lectureType<span class="token operator">:</span> LectureType<span class="token punctuation">.</span><span class="token constant">MAJOR</span><span class="token punctuation">,</span> campusType<span class="token operator">:</span> CampusType<span class="token punctuation">.</span><span class="token constant">JUKJEON</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">getSchedules</span><span class="token punctuation">(</span><span class="token punctuation">{</span> year<span class="token punctuation">,</span> semester<span class="token punctuation">,</span> lectureType<span class="token operator">:</span> LectureType<span class="token punctuation">.</span><span class="token constant">MAJOR</span><span class="token punctuation">,</span> campusType<span class="token operator">:</span> CampusType<span class="token punctuation">.</span><span class="token constant">CHEONAN</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">getSchedules</span><span class="token punctuation">(</span><span class="token punctuation">{</span> year<span class="token punctuation">,</span> semester<span class="token punctuation">,</span> lectureType<span class="token operator">:</span> LectureType<span class="token punctuation">.</span><span class="token constant">LIBERAL_ARTS</span><span class="token punctuation">,</span> campusType<span class="token operator">:</span> CampusType<span class="token punctuation">.</span><span class="token constant">JUKJEON</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">getSchedules</span><span class="token punctuation">(</span><span class="token punctuation">{</span> year<span class="token punctuation">,</span> semester<span class="token punctuation">,</span> lectureType<span class="token operator">:</span> LectureType<span class="token punctuation">.</span><span class="token constant">LIBERAL_ARTS</span><span class="token punctuation">,</span> campusType<span class="token operator">:</span> CampusType<span class="token punctuation">.</span><span class="token constant">CHEONAN</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> results<span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>v <span class="token operator">=&gt;</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>이렇게 한 번에 한 학기에 대한 과목 정보를 가져올 수 있도록 했다.</p><h3 id="배포" tabindex="-1"><a class="header-anchor" href="#배포"><span>배포</span></a></h3><p>배포는 별거 없다. 그냥 github pages를 사용하고, 빌드 후에 push하면 된다.</p><p><img src="`+E+`" alt="17"></p><p>위의 사진 처럼, 그냥 master branch를 기준으로 github pages가 생성되도록 한다.</p><p>그리고 작성된 코드를 build후에 push하면 deploy가 실행된다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># client 패키지 폴더로 이동한다.</span></span>
<span class="line"><span class="token operator">&gt;</span> <span class="token builtin class-name">cd</span> /.packages/dku-schedule-client</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 빌드 실행</span></span>
<span class="line"><span class="token operator">&gt;</span> <span class="token function">yarn</span> build</span>
<span class="line"></span>
<span class="line"><span class="token comment"># root로 이동 후 git push</span></span>
<span class="line"><span class="token operator">&gt;</span> <span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span></span>
<span class="line"><span class="token operator">&gt;</span> <span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span></span>
<span class="line"><span class="token operator">&gt;</span> <span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;build&quot;</span></span>
<span class="line"><span class="token operator">&gt;</span> <span class="token function">git</span> push</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+j+'" alt="18"></p><p>결과적으로 다음과 같은 프로세스를 가지게 된다.</p><ul><li>github action이 1시간 마다 실행</li><li>시간표 데이터 저장 후 commit, push</li><li>push가 되면, 자동으로 github pages deploy</li><li>신규 시간표 데이터 반영</li></ul><p><img src="'+x+'" alt="19"></p><p>위에 보이는 것 처럼 Schedule이 실행 된 후에 바로 github pages가 deploy 되는 것을 확인할 수 있다.</p><h2 id="_4-홍보" tabindex="-1"><a class="header-anchor" href="#_4-홍보"><span>4. 홍보</span></a></h2><p>서비스가 완성된 다음에 에브리타임에 홍보했다.</p><p><img src="'+A+'" alt="20"></p><p><img src="'+S+'" alt="21"></p><p>약간의 어그로를 위해서(?) 모시고 있는 주인님 사진을 같이 첨부했다.</p><p><img src="'+T+'" alt="22"> <img src="'+L+'" alt="23"> <img src="'+B+'" alt="24"> <img src="'+D+'" alt="25"></p><p>예상대로, 고양이 사진 더 올려달라는 댓글이 많이 달렸다. <s>정확히는 그런 댓글만 달렸다.</s></p><p><img src="'+I+'" alt="26"></p><p>문제는, 아직 시간표가 공개되기 전이라서 사실 저 타이밍에 홍보해봤자 소용이 없었다는 점..</p><p>그래서 시간표가 공개된 다음에 다시 홍보했다.</p><p><img src="'+N+'" alt="27"></p><p><s>추천수의 차이는.. 아마도 고양이 사진 때문인듯</s></p><h2 id="후기" tabindex="-1"><a class="header-anchor" href="#후기"><span>후기</span></a></h2><ul><li>나중에 고도화 해서 커뮤니티로 발전시키면 재밌을 것 같다.</li><li>근데 귀찮다.</li><li>짧은 기간 동안 몰입해서 만들어서 재밌었다.</li><li>테스트 코드도 작성해볼껄 하는 아쉬움이 있다.</li><li>다음 학기에도 써먹어야지</li></ul><h2 id="기타" tabindex="-1"><a class="header-anchor" href="#기타"><span>기타</span></a></h2>',41),qn={href:"https://github.com/JunilHwang/dku-schedule-manager",target:"_blank",rel:"noopener noreferrer"},fn=n("li",null,"코드가 좀 더럽다.",-1);function wn(_n,Cn){const a=c("ExternalLinkIcon");return o(),i("div",null,[P,H,R,n("ul",null,[n("li",null,[n("a",M,[s("단국대학교 강의 시간표 만들기"),p(a)])]),n("li",null,[n("a",$,[s("소스코드"),p(a)])])]),F,n("p",null,[s("대학교 재학 시절, 방학 때 마다 언제 시간표가 올라오나 기다렸고, 시간표가 올라와도 언제 "),n("a",J,[s("에브리타임"),p(a)]),s("에 업로드되나 또 기다렸다. "),U]),K,n("p",null,[s("강의 시간표는 "),n("a",V,[s("이 링크"),p(a)]),s("에서 검색해볼 수 있는데, 검색 조건을 설정하고 전송하면 다음과 같은 네트워크 요청을 보낸다.")]),W,n("div",G,[z,Z,n("p",null,[s("라고 "),n("a",X,[s("공식문서"),p(a)]),s("에 나와있다.")])]),n("p",null,[s("NestJS는 webserver 뿐만 아니라 "),n("a",Q,[s("standalone application"),p(a)]),s("으로도 사용할 수 있다.")]),Y,n("p",null,[n("a",nn,[s("> 전체 코드 보기 <"),p(a)])]),sn,n("p",null,[s("vite template은 "),an,s(),pn,s(),tn,s(),en,s(),ln,s(),cn,s(),on,s(),un,s(),rn,s(),kn,s(),dn,s(" 등이 존재한다. 자세한건 "),n("a",vn,[s("공식문서"),p(a)]),s("에서 확인해볼 수 있다.")]),mn,n("p",null,[s("이렇게 "),n("a",bn,[s("링크"),p(a)]),s("를 통해서 시간표를 공유할 수 있도록 만들었다. 귀찮아서 그냥 시간표 정보를 전부 uri에 때려박았다. 정확히는, 학교에서 제공하는 각 시간표에 대한 기본키(Primary Key)가 없어서 그냥 통짜로 정보를 집어넣었다. 어차피 크롬 전용으로 제공할 생각이고, 크롬의 경우 어느 정도의 uri 사이즈는 커버가 된다.")]),gn,n("p",null,[s("일단 "),n("a",hn,[s("FxTS"),p(a)]),s(" 를 사용한다면 아마 다음과 같은 형태로 작성하면 될 것이다.")]),yn,n("ul",null,[n("li",null,[s("소스코드는 "),n("a",qn,[s("여기"),p(a)]),s("에서 확인할 수 있다.")]),fn])])}const jn=l(O,[["render",wn],["__file","index.html.vue"]]),xn=JSON.parse('{"path":"/side-project/dku-schedule-manager/","title":"단국대학교 강의 시간표를 제공하는 서비스를 만들자","lang":"en-US","frontmatter":{"title":"단국대학교 강의 시간표를 제공하는 서비스를 만들자","description":"단국대학교 재학생들을 타겟팅하는 간단한 사이드 프로젝트를 진행했다. 이에 대한 내용을 정리하는 글이다.","sidebarDepth":2,"date":"2022-01-26T11:00:00.000Z","tag":"project","thumbnail":"https://user-images.githubusercontent.com/18749057/172793209-17b5d1e9-a196-4019-8e36-b7024d533bf2.png"},"headers":[{"level":2,"title":"0. 간단한 요약","slug":"_0-간단한-요약","link":"#_0-간단한-요약","children":[]},{"level":2,"title":"1. 번뜩","slug":"_1-번뜩","link":"#_1-번뜩","children":[]},{"level":2,"title":"2. 시간표 긁어오기","slug":"_2-시간표-긁어오기","link":"#_2-시간표-긁어오기","children":[]},{"level":2,"title":"3. FE","slug":"_3-fe","link":"#_3-fe","children":[{"level":3,"title":"프로젝트 구성","slug":"프로젝트-구성","link":"#프로젝트-구성","children":[]},{"level":3,"title":"Vue3의 script setup","slug":"vue3의-script-setup","link":"#vue3의-script-setup","children":[]},{"level":3,"title":"디자인시스템","slug":"디자인시스템","link":"#디자인시스템","children":[]},{"level":3,"title":"시간표 저장","slug":"시간표-저장","link":"#시간표-저장","children":[]},{"level":3,"title":"시간표 공유","slug":"시간표-공유","link":"#시간표-공유","children":[]},{"level":3,"title":"시간표 검색","slug":"시간표-검색","link":"#시간표-검색","children":[]},{"level":3,"title":"Vite에서 프로젝트 외부 데이터 접근","slug":"vite에서-프로젝트-외부-데이터-접근","link":"#vite에서-프로젝트-외부-데이터-접근","children":[]},{"level":3,"title":"배포","slug":"배포","link":"#배포","children":[]}]},{"level":2,"title":"4. 홍보","slug":"_4-홍보","link":"#_4-홍보","children":[]},{"level":2,"title":"후기","slug":"후기","link":"#후기","children":[]},{"level":2,"title":"기타","slug":"기타","link":"#기타","children":[]}],"git":{"updatedTime":1739779495000},"filePathRelative":"side-project/dku-schedule-manager/README.md"}');export{jn as comp,xn as data};
