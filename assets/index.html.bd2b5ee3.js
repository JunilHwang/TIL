import{_ as e,r as o,o as c,c as l,b as n,d as a,a as p,e as t}from"./app.ba0a858b.js";const i={},u=p('<h1 id="with-ai-typescript-a-\u1107\u116E\u1110\u1165-z-\u1101\u1161\u110C\u1175" tabindex="-1"><a class="header-anchor" href="#with-ai-typescript-a-\u1107\u116E\u1110\u1165-z-\u1101\u1161\u110C\u1175" aria-hidden="true">#</a> [With AI] Typescript A \uBD80\uD130 Z \uAE4C\uC9C0</h1><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\uBCF8 \uAC8C\uC2DC\uBB3C\uC740 AI(Claude)\uC640 \uD568\uAED8 \uC791\uC131\uD558\uC600\uC2B5\uB2C8\uB2E4.</p></div><h2 id="\u110E\u1161\u11B7\u1100\u1169\u110C\u1161\u1105\u116D" tabindex="-1"><a class="header-anchor" href="#\u110E\u1161\u11B7\u1100\u1169\u110C\u1161\u1105\u116D" aria-hidden="true">#</a> \uCC38\uACE0\uC790\uB8CC</h2>',3),r={href:"https://blog.insightbook.co.kr/2021/06/10/%E3%80%8A%EC%9D%B4%ED%8E%99%ED%8B%B0%EB%B8%8C-%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC%EC%9D%98-%EC%9D%B4%ED%95%B4%EC%99%80-%EA%B5%AC%EC%B2%B4/",target:"_blank",rel:"noopener noreferrer"},k=t("\uC774\uD399\uD2F0\uBE0C \uD0C0\uC785\uC2A4\uD06C\uB9BD\uD2B8: \uB3D9\uC791 \uC6D0\uB9AC\uC758 \uC774\uD574\uC640 \uAD6C\uCCB4\uC801\uC778 \uC870\uC5B8 62\uAC00\uC9C0"),d={href:"https://www.youtube.com/watch?v=ViS8DLd6o-E",target:"_blank",rel:"noopener noreferrer"},v=t("[8\uC6D4 \uC6B0\uC544\uD55C\uD14C\uD06C\uC138\uBBF8\uB098] \uC6B0\uC544\uD55C \uD0C0\uC785\uC2A4\uD06C\uB9BD\uD2B8"),m={href:"https://smartstudio.tech/type-programming/",target:"_blank",rel:"noopener noreferrer"},b=t("\uD0C0\uC785\uC2A4\uD06C\uB9BD\uD2B8\uC5D0\uC11C \uD0C0\uC785 \uD504\uB85C\uADF8\uB798\uBC0D\uD558\uAE30: SmartEditor\uC5D0\uC11C \uD0C0\uC785\uC744 \uB2E4\uB8E8\uB294 \uBC29\uBC95 - Naver SmartStudio Blog"),g={href:"https://github.com/type-challenges/type-challenges/blob/main/README.ko.md",target:"_blank",rel:"noopener noreferrer"},y=t("type-challenges/README.ko.md at main \xB7 type-challenges/type-challenges"),h={href:"https://www.youtube.com/watch?v=kMuJz6N-Grw",target:"_blank",rel:"noopener noreferrer"},f=t("[10\uBD84 \uD14C\uCF54\uD1A1] \uC2DC\uC9C0\uD504\uC758 \u1110\u1161\u110B\u1175\u11B8\u1109\u1173\u110F\u1173\u1105\u1175\u11B8\u1110\u1173 \u1103\u1169\u110B\u1163\u11A8\u1112\u1161\u1100\u1175"),x=p(`<h2 id="_1-\u1110\u1161\u110B\u1175\u11B8\u1109\u1173\u110F\u1173\u1105\u1175\u11B8\u1110\u1173-\u1109\u1169\u1100\u1162" tabindex="-1"><a class="header-anchor" href="#_1-\u1110\u1161\u110B\u1175\u11B8\u1109\u1173\u110F\u1173\u1105\u1175\u11B8\u1110\u1173-\u1109\u1169\u1100\u1162" aria-hidden="true">#</a> 1. \uD0C0\uC785\uC2A4\uD06C\uB9BD\uD2B8 \uC18C\uAC1C</h2><h3 id="what-\u1110\u1161\u110B\u1175\u11B8\u1109\u1173\u110F\u1173\u1105\u1175\u11B8\u1110\u1173\u1105\u1161\u11AB-\u1106\u116E\u110B\u1165\u11BA\u110B\u1175\u11AB\u1100\u1161" tabindex="-1"><a class="header-anchor" href="#what-\u1110\u1161\u110B\u1175\u11B8\u1109\u1173\u110F\u1173\u1105\u1175\u11B8\u1110\u1173\u1105\u1161\u11AB-\u1106\u116E\u110B\u1165\u11BA\u110B\u1175\u11AB\u1100\u1161" aria-hidden="true">#</a> What (\uD0C0\uC785\uC2A4\uD06C\uB9BD\uD2B8\uB780 \uBB34\uC5C7\uC778\uAC00?)</h3><p>TypeScript\uB294 Microsoft\uC5D0\uC11C \uAC1C\uBC1C\uD55C \uC624\uD508 \uC18C\uC2A4 \uD504\uB85C\uADF8\uB798\uBC0D \uC5B8\uC5B4\uB85C, JavaScript\uC758 \uC288\uD37C\uC14B\uC785\uB2C8\uB2E4. \uC989, \uBAA8\uB4E0 JavaScript \uCF54\uB4DC\uB294 \uC720\uD6A8\uD55C TypeScript \uCF54\uB4DC\uC785\uB2C8\uB2E4. TypeScript\uB294 \uB2E4\uC74C\uACFC \uAC19\uC740 \uD2B9\uC9D5\uC744 \uAC00\uC9D1\uB2C8\uB2E4:</p><ul><li>\uC815\uC801 \uD0C0\uC785 \uC9C0\uC6D0</li><li>\uD074\uB798\uC2A4 \uAE30\uBC18 \uAC1D\uCCB4 \uC9C0\uD5A5 \uD504\uB85C\uADF8\uB798\uBC0D</li><li>\uBAA8\uB4C8 \uC2DC\uC2A4\uD15C</li><li>ES6+ \uAE30\uB2A5 \uC9C0\uC6D0</li></ul><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// TypeScript \uC608\uC2DC</span>
<span class="token keyword">let</span> greeting<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&quot;Hello, TypeScript!&quot;</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>greeting<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="why-\u110B\u116B-\u1110\u1161\u110B\u1175\u11B8\u1109\u1173\u110F\u1173\u1105\u1175\u11B8\u1110\u1173\u1105\u1173\u11AF-\u1109\u1161\u110B\u116D\u11BC\u1112\u1162\u110B\u1163-\u1112\u1161\u1102\u1173\u11AB\u1100\u1161" tabindex="-1"><a class="header-anchor" href="#why-\u110B\u116B-\u1110\u1161\u110B\u1175\u11B8\u1109\u1173\u110F\u1173\u1105\u1175\u11B8\u1110\u1173\u1105\u1173\u11AF-\u1109\u1161\u110B\u116D\u11BC\u1112\u1162\u110B\u1163-\u1112\u1161\u1102\u1173\u11AB\u1100\u1161" aria-hidden="true">#</a> Why (\uC65C \uD0C0\uC785\uC2A4\uD06C\uB9BD\uD2B8\uB97C \uC0AC\uC6A9\uD574\uC57C \uD558\uB294\uAC00?)</h3><ol><li>\uD5A5\uC0C1\uB41C \uAC1C\uBC1C\uC790 \uACBD\uD5D8:</li></ol><ul><li>\uCF54\uB4DC \uC790\uB3D9 \uC644\uC131 \uBC0F IntelliSense \uC9C0\uC6D0</li><li>\uB9AC\uD329\uD1A0\uB9C1 \uC2DC \uB354 \uC548\uC804\uD558\uACE0 \uD6A8\uC728\uC801\uC778 \uC791\uC5C5 \uAC00\uB2A5</li></ul><ol start="2"><li>\uC624\uB958 \uC870\uAE30 \uBC1C\uACAC:</li></ol><ul><li>\uCEF4\uD30C\uC77C \uC2DC\uC810\uC5D0 \uD0C0\uC785 \uAD00\uB828 \uC624\uB958 \uAC10\uC9C0</li><li>\uB7F0\uD0C0\uC784 \uC624\uB958 \uAC10\uC18C</li></ul><ol start="3"><li>\uB354 \uB098\uC740 \uCF54\uB4DC \uBB38\uC11C\uD654:</li></ol><ul><li>\uD0C0\uC785 \uC815\uC758\uB97C \uD1B5\uD55C \uC790\uCCB4 \uBB38\uC11C\uD654</li><li>\uCF54\uB4DC \uAC00\uB3C5\uC131 \uBC0F \uC720\uC9C0\uBCF4\uC218\uC131 \uD5A5\uC0C1</li></ul><ol start="4"><li>\uB300\uADDC\uBAA8 \uC560\uD50C\uB9AC\uCF00\uC774\uC158 \uAC1C\uBC1C\uC5D0 \uC801\uD569:</li></ol><ul><li>\uBCF5\uC7A1\uD55C \uC2DC\uC2A4\uD15C \uC124\uACC4\uC5D0 \uC720\uC6A9\uD55C \uD0C0\uC785 \uC2DC\uC2A4\uD15C</li><li>\uD300 \uD611\uC5C5 \uC2DC \uCF54\uB4DC \uD488\uC9C8 \uC720\uC9C0 \uC6A9\uC774</li></ul><h3 id="don-t-\u110B\u1165\u11AB\u110C\u1166-\u1110\u1161\u110B\u1175\u11B8\u1109\u1173\u110F\u1173\u1105\u1175\u11B8\u1110\u1173\u1105\u1173\u11AF-\u1109\u1161\u110B\u116D\u11BC\u1112\u1161\u110C\u1175-\u1106\u1161\u11AF\u110B\u1161\u110B\u1163-\u1112\u1161\u1102\u1173\u11AB\u1100\u1161" tabindex="-1"><a class="header-anchor" href="#don-t-\u110B\u1165\u11AB\u110C\u1166-\u1110\u1161\u110B\u1175\u11B8\u1109\u1173\u110F\u1173\u1105\u1175\u11B8\u1110\u1173\u1105\u1173\u11AF-\u1109\u1161\u110B\u116D\u11BC\u1112\u1161\u110C\u1175-\u1106\u1161\u11AF\u110B\u1161\u110B\u1163-\u1112\u1161\u1102\u1173\u11AB\u1100\u1161" aria-hidden="true">#</a> Don&#39;t (\uC5B8\uC81C \uD0C0\uC785\uC2A4\uD06C\uB9BD\uD2B8\uB97C \uC0AC\uC6A9\uD558\uC9C0 \uB9D0\uC544\uC57C \uD558\uB294\uAC00?)</h3><ol><li>\uC18C\uADDC\uBAA8 \uB610\uB294 \uAC04\uB2E8\uD55C \uD504\uB85C\uC81D\uD2B8:</li></ol><ul><li>\uC124\uC815 \uBC0F \uCEF4\uD30C\uC77C \uACFC\uC815\uC774 \uC624\uBC84\uD5E4\uB4DC\uAC00 \uB420 \uC218 \uC788\uC74C</li><li>\uBE60\uB978 \uD504\uB85C\uD1A0\uD0C0\uC774\uD551\uC774 \uD544\uC694\uD55C \uACBD\uC6B0</li></ul><ol start="2"><li>\uD300\uC774 TypeScript\uC5D0 \uC775\uC219\uD558\uC9C0 \uC54A\uC740 \uACBD\uC6B0:</li></ol><ul><li>\uD559\uC2B5 \uACE1\uC120\uC73C\uB85C \uC778\uD55C \uCD08\uAE30 \uC0DD\uC0B0\uC131 \uC800\uD558 \uAC00\uB2A5\uC131</li></ul><ol start="3"><li>\uB7F0\uD0C0\uC784 \uC131\uB2A5\uC774 \uADF9\uB3C4\uB85C \uC911\uC694\uD55C \uACBD\uC6B0:</li></ol><ul><li>\uCEF4\uD30C\uC77C\uB41C JavaScript\uAC00 \uC57D\uAC04\uC758 \uC624\uBC84\uD5E4\uB4DC\uB97C \uAC00\uC9C8 \uC218 \uC788\uC74C</li><li>\uB2E8, \uB300\uBD80\uBD84\uC758 \uACBD\uC6B0 \uC131\uB2A5 \uCC28\uC774\uB294 \uBB34\uC2DC\uD560 \uB9CC\uD55C \uC218\uC900</li></ul><ol start="4"><li>\uD2B9\uC815 JavaScript \uB77C\uC774\uBE0C\uB7EC\uB9AC\uC640\uC758 \uD638\uD658\uC131 \uBB38\uC81C:</li></ol><ul><li>\uD0C0\uC785 \uC815\uC758 \uD30C\uC77C\uC774 \uC5C6\uAC70\uB098 \uBD88\uC644\uC804\uD55C \uACBD\uC6B0 \uC0AC\uC6A9\uC774 \uC5B4\uB824\uC6B8 \uC218 \uC788\uC74C</li></ul><h2 id="_2-\u1100\u1175\u1107\u1169\u11AB\u1100\u1175" tabindex="-1"><a class="header-anchor" href="#_2-\u1100\u1175\u1107\u1169\u11AB\u1100\u1175" aria-hidden="true">#</a> 2. \uAE30\uBCF8\uAE30</h2><h3 id="\u1100\u1175\u1107\u1169\u11AB-\u1110\u1161\u110B\u1175\u11B8" tabindex="-1"><a class="header-anchor" href="#\u1100\u1175\u1107\u1169\u11AB-\u1110\u1161\u110B\u1175\u11B8" aria-hidden="true">#</a> \uAE30\uBCF8 \uD0C0\uC785</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// \uAE30\uBCF8 \uD0C0\uC785 \uC608\uC81C</span>
<span class="token keyword">let</span> id<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> company<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&quot;Acme Corp&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> isPublished<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> x<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token string">&quot;Hello&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// \uBC30\uC5F4</span>
<span class="token keyword">let</span> ids<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> arr<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">&quot;Hello&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// \uD29C\uD50C</span>
<span class="token keyword">let</span> person<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;Brad&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// \uC5F4\uAC70\uD615</span>
<span class="token keyword">enum</span> Direction <span class="token punctuation">{</span>
  Up <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
  Down<span class="token punctuation">,</span>
  Left<span class="token punctuation">,</span>
  Right<span class="token punctuation">,</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u110B\u1175\u11AB\u1110\u1165\u1111\u1166\u110B\u1175\u1109\u1173\u110B\u116A-\u1110\u1161\u110B\u1175\u11B8-\u1107\u1167\u11AF\u110E\u1175\u11BC" tabindex="-1"><a class="header-anchor" href="#\u110B\u1175\u11AB\u1110\u1165\u1111\u1166\u110B\u1175\u1109\u1173\u110B\u116A-\u1110\u1161\u110B\u1175\u11B8-\u1107\u1167\u11AF\u110E\u1175\u11BC" aria-hidden="true">#</a> \uC778\uD130\uD398\uC774\uC2A4\uC640 \uD0C0\uC785 \uBCC4\uCE6D</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// \uC778\uD130\uD398\uC774\uC2A4</span>
<span class="token keyword">interface</span> <span class="token class-name">UserInterface</span> <span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> user1<span class="token operator">:</span> UserInterface <span class="token operator">=</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  name<span class="token operator">:</span> <span class="token string">&quot;John&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \uD0C0\uC785 \uBCC4\uCE6D</span>
<span class="token keyword">type</span> <span class="token class-name">Point</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> pt<span class="token operator">:</span> Point <span class="token operator">=</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u1112\u1161\u11B7\u1109\u116E\u110B\u116A-\u1110\u1161\u110B\u1175\u11B8" tabindex="-1"><a class="header-anchor" href="#\u1112\u1161\u11B7\u1109\u116E\u110B\u116A-\u1110\u1161\u110B\u1175\u11B8" aria-hidden="true">#</a> \uD568\uC218\uC640 \uD0C0\uC785</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// \uD568\uC218</span>
<span class="token keyword">function</span> <span class="token function">addNum</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \uC120\uD0DD\uC801 \uB9E4\uAC1C\uBCC0\uC218</span>
<span class="token keyword">function</span> <span class="token function">log</span><span class="token punctuation">(</span>message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> userId<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> userId <span class="token operator">||</span> <span class="token string">&quot;Not signed in&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \uD568\uC218 \uC624\uBC84\uB85C\uB529</span>
<span class="token keyword">function</span> <span class="token function">padding</span><span class="token punctuation">(</span>all<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">padding</span><span class="token punctuation">(</span>topAndBottom<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> leftAndRight<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">padding</span><span class="token punctuation">(</span>top<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> right<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> bottom<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> left<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">padding</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> c<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> d<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> c <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> d <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    b <span class="token operator">=</span> c <span class="token operator">=</span> d <span class="token operator">=</span> a<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> d <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    c <span class="token operator">=</span> a<span class="token punctuation">;</span>
    d <span class="token operator">=</span> b<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    top<span class="token operator">:</span> a<span class="token punctuation">,</span>
    right<span class="token operator">:</span> b<span class="token punctuation">,</span>
    bottom<span class="token operator">:</span> c<span class="token punctuation">,</span>
    left<span class="token operator">:</span> d
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u110C\u1166\u1102\u1166\u1105\u1175\u11A8" tabindex="-1"><a class="header-anchor" href="#\u110C\u1166\u1102\u1166\u1105\u1175\u11A8" aria-hidden="true">#</a> \uC81C\uB124\uB9AD</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// \uC81C\uB124\uB9AD \uD568\uC218</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getArray</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>items <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> numArray <span class="token operator">=</span> <span class="token generic-function"><span class="token function">getArray</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> strArray <span class="token operator">=</span> <span class="token generic-function"><span class="token function">getArray</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \uC81C\uB124\uB9AD \uC778\uD130\uD398\uC774\uC2A4</span>
<span class="token keyword">interface</span> <span class="token class-name">GenericIdentityFn<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">identity</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arg<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> myIdentity<span class="token operator">:</span> GenericIdentityFn<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> identity<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u1110\u1161\u110B\u1175\u11B8-\u110E\u116E\u1105\u1169\u11AB\u1100\u116A-\u1110\u1161\u110B\u1175\u11B8-\u1103\u1161\u11AB\u110B\u1165\u11AB" tabindex="-1"><a class="header-anchor" href="#\u1110\u1161\u110B\u1175\u11B8-\u110E\u116E\u1105\u1169\u11AB\u1100\u116A-\u1110\u1161\u110B\u1175\u11B8-\u1103\u1161\u11AB\u110B\u1165\u11AB" aria-hidden="true">#</a> \uD0C0\uC785 \uCD94\uB860\uACFC \uD0C0\uC785 \uB2E8\uC5B8</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// \uD0C0\uC785 \uCD94\uB860</span>
<span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">// TypeScript\uAC00 x\uB97C number\uB85C \uCD94\uB860</span>

<span class="token comment">// \uD0C0\uC785 \uB2E8\uC5B8</span>
<span class="token keyword">let</span> someValue<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token string">&quot;this is a string&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> strLength<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token punctuation">(</span>someValue <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-\u1110\u1161\u110B\u1175\u11B8-\u110B\u1172\u1110\u1175\u11AF\u1105\u1175\u1110\u1175" tabindex="-1"><a class="header-anchor" href="#_3-\u1110\u1161\u110B\u1175\u11B8-\u110B\u1172\u1110\u1175\u11AF\u1105\u1175\u1110\u1175" aria-hidden="true">#</a> 3. \uD0C0\uC785 \uC720\uD2F8\uB9AC\uD2F0</h2><p>TypeScript\uB294 \uBCF5\uC7A1\uD55C \uD0C0\uC785\uC744 \uC27D\uAC8C \uC870\uC791\uD560 \uC218 \uC788\uB294 \uC5EC\uB7EC \uC720\uD2F8\uB9AC\uD2F0 \uD0C0\uC785\uC744 \uC81C\uACF5\uD569\uB2C8\uB2E4. \uC774\uB4E4\uC740 \uC2E4\uC81C \uAC1C\uBC1C \uC0C1\uD669\uC5D0\uC11C \uB9E4\uC6B0 \uC720\uC6A9\uD558\uAC8C \uC0AC\uC6A9\uB429\uB2C8\uB2E4. \uC8FC\uC694 \uC720\uD2F8\uB9AC\uD2F0 \uD0C0\uC785\uACFC \uADF8 \uC0AC\uC6A9 \uC608\uB97C \uC0B4\uD3B4\uBCF4\uACA0\uC2B5\uB2C8\uB2E4.</p><h3 id="partial-t" tabindex="-1"><a class="header-anchor" href="#partial-t" aria-hidden="true">#</a> <code>Partial&lt;T&gt;</code></h3><p>\uBAA8\uB4E0 \uC18D\uC131\uC744 \uC120\uD0DD\uC801\uC73C\uB85C \uB9CC\uB4ED\uB2C8\uB2E4.</p><p><strong>AS-IS:</strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  email<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">updateUser</span><span class="token punctuation">(</span>user<span class="token operator">:</span> User<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \uBAA8\uB4E0 \uD544\uB4DC\uB97C \uC5C5\uB370\uC774\uD2B8\uD574\uC57C \uD568</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>TO-BE:</strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  email<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">updateUser</span><span class="token punctuation">(</span>user<span class="token operator">:</span> Partial<span class="token operator">&lt;</span>User<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \uC77C\uBD80 \uD544\uB4DC\uB9CC \uC5C5\uB370\uC774\uD2B8 \uAC00\uB2A5</span>
<span class="token punctuation">}</span>

<span class="token function">updateUser</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;John&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \uC720\uD6A8</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="required-t" tabindex="-1"><a class="header-anchor" href="#required-t" aria-hidden="true">#</a> <code>Required&lt;T&gt;</code></h3><p>\uBAA8\uB4E0 \uC18D\uC131\uC744 \uD544\uC218\uB85C \uB9CC\uB4ED\uB2C8\uB2E4.</p><p><strong>AS-IS:</strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">interface</span> <span class="token class-name">Config</span> <span class="token punctuation">{</span>
  debug<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  timeout<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>TO-BE:</strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">RequiredConfig</span> <span class="token operator">=</span> Required<span class="token operator">&lt;</span>Config<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// \uACB0\uACFC: { debug: boolean; timeout: number; }</span>

<span class="token keyword">const</span> config<span class="token operator">:</span> RequiredConfig <span class="token operator">=</span> <span class="token punctuation">{</span>
  debug<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  timeout<span class="token operator">:</span> <span class="token number">3000</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// \uBAA8\uB4E0 \uD544\uB4DC \uD544\uC218</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pick-t-k" tabindex="-1"><a class="header-anchor" href="#pick-t-k" aria-hidden="true">#</a> <code>Pick&lt;T, K&gt;</code></h3><p>\uD2B9\uC815 \uC18D\uC131\uB9CC \uC120\uD0DD\uD569\uB2C8\uB2E4.</p><p><strong>AS-IS:</strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">interface</span> <span class="token class-name">Product</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  price<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  description<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>TO-BE:</strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">ProductPreview</span> <span class="token operator">=</span> Pick<span class="token operator">&lt;</span>Product<span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;price&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// \uACB0\uACFC: { name: string; price: number; }</span>

<span class="token keyword">const</span> preview<span class="token operator">:</span> ProductPreview <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;Laptop&quot;</span><span class="token punctuation">,</span>
  price<span class="token operator">:</span> <span class="token number">1000</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="omit-t-k" tabindex="-1"><a class="header-anchor" href="#omit-t-k" aria-hidden="true">#</a> <code>Omit&lt;T, K&gt;</code></h3><p>\uD2B9\uC815 \uC18D\uC131\uC744 \uC81C\uC678\uD569\uB2C8\uB2E4.</p><p><strong>AS-IS:</strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  username<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  password<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>TO-BE:</strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">PublicUser</span> <span class="token operator">=</span> Omit<span class="token operator">&lt;</span>User<span class="token punctuation">,</span> <span class="token string">&#39;password&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// \uACB0\uACFC: { id: number; username: string; }</span>

<span class="token keyword">const</span> publicInfo<span class="token operator">:</span> PublicUser <span class="token operator">=</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  username<span class="token operator">:</span> <span class="token string">&quot;john_doe&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="record-k-t" tabindex="-1"><a class="header-anchor" href="#record-k-t" aria-hidden="true">#</a> <code>Record&lt;K, T&gt;</code></h3><p>\uD0A4-\uAC12 \uC30D\uC758 \uD0C0\uC785\uC744 \uC815\uC758\uD569\uB2C8\uB2E4.</p><p><strong>AS-IS:</strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">const</span> fruitInventory <span class="token operator">=</span> <span class="token punctuation">{</span>
  apple<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
  banana<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
  orange<span class="token operator">:</span> <span class="token number">15</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>TO-BE:</strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">Fruit</span> <span class="token operator">=</span> <span class="token string">&#39;apple&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;banana&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;orange&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">Stock</span> <span class="token operator">=</span> Record<span class="token operator">&lt;</span>Fruit<span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> fruitInventory<span class="token operator">:</span> Stock <span class="token operator">=</span> <span class="token punctuation">{</span>
  apple<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
  banana<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
  orange<span class="token operator">:</span> <span class="token number">15</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="readonly-t" tabindex="-1"><a class="header-anchor" href="#readonly-t" aria-hidden="true">#</a> <code>Readonly&lt;T&gt;</code></h3><p>\uBAA8\uB4E0 \uC18D\uC131\uC744 \uC77D\uAE30 \uC804\uC6A9\uC73C\uB85C \uB9CC\uB4ED\uB2C8\uB2E4.</p><p><strong>AS-IS:</strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">interface</span> <span class="token class-name">Config</span> <span class="token punctuation">{</span>
  apiKey<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  timeout<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>TO-BE:</strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">ReadonlyConfig</span> <span class="token operator">=</span> Readonly<span class="token operator">&lt;</span>Config<span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> config<span class="token operator">:</span> ReadonlyConfig <span class="token operator">=</span> <span class="token punctuation">{</span>
  apiKey<span class="token operator">:</span> <span class="token string">&quot;my-secret-key&quot;</span><span class="token punctuation">,</span>
  timeout<span class="token operator">:</span> <span class="token number">3000</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// config.apiKey = &quot;new-key&quot;; // \uC624\uB958: \uC77D\uAE30 \uC804\uC6A9 \uC18D\uC131</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="returntype-t" tabindex="-1"><a class="header-anchor" href="#returntype-t" aria-hidden="true">#</a> <code>ReturnType&lt;T&gt;</code></h3><p>\uD568\uC218\uC758 \uBC18\uD658 \uD0C0\uC785\uC744 \uCD94\uCD9C\uD569\uB2C8\uB2E4.</p><p><strong>AS-IS:</strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">function</span> <span class="token function">fetchUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&quot;John&quot;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>TO-BE:</strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">User</span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> fetchUser<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// \uACB0\uACFC: { id: number; name: string; age: number; }</span>

<span class="token keyword">const</span> user<span class="token operator">:</span> User <span class="token operator">=</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  name<span class="token operator">:</span> <span class="token string">&quot;Jane&quot;</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span> <span class="token number">28</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="parameters-t" tabindex="-1"><a class="header-anchor" href="#parameters-t" aria-hidden="true">#</a> <code>Parameters&lt;T&gt;</code></h3><p>\uD568\uC218\uC758 \uB9E4\uAC1C\uBCC0\uC218 \uD0C0\uC785\uC744 \uD29C\uD50C\uB85C \uCD94\uCD9C\uD569\uB2C8\uB2E4.</p><p><strong>AS-IS:</strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">function</span> <span class="token function">greet</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">! You are </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>age<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> years old.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>TO-BE:</strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">GreetParams</span> <span class="token operator">=</span> Parameters<span class="token operator">&lt;</span><span class="token keyword">typeof</span> greet<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// \uACB0\uACFC: [string, number]</span>

<span class="token keyword">const</span> params<span class="token operator">:</span> GreetParams <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Alice&quot;</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">greet</span><span class="token punctuation">(</span><span class="token operator">...</span>params<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u1109\u1175\u11AF\u110C\u1166-\u1109\u1161\u110B\u116D\u11BC-\u110B\u1168\u110C\u1166-\u1107\u1169\u11A8\u1112\u1161\u11B8-\u110B\u1172\u1110\u1175\u11AF\u1105\u1175\u1110\u1175-\u1110\u1161\u110B\u1175\u11B8" tabindex="-1"><a class="header-anchor" href="#\u1109\u1175\u11AF\u110C\u1166-\u1109\u1161\u110B\u116D\u11BC-\u110B\u1168\u110C\u1166-\u1107\u1169\u11A8\u1112\u1161\u11B8-\u110B\u1172\u1110\u1175\u11AF\u1105\u1175\u1110\u1175-\u1110\u1161\u110B\u1175\u11B8" aria-hidden="true">#</a> \uC2E4\uC81C \uC0AC\uC6A9 \uC608\uC81C: \uBCF5\uD569 \uC720\uD2F8\uB9AC\uD2F0 \uD0C0\uC785</h3><p>\uC5EC\uB7EC \uC720\uD2F8\uB9AC\uD2F0 \uD0C0\uC785\uC744 \uC870\uD569\uD558\uC5EC \uBCF5\uC7A1\uD55C \uD0C0\uC785\uC744 \uB9CC\uB4E4 \uC218 \uC788\uC2B5\uB2C8\uB2E4:</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  email<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  password<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  isAdmin<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \uAD00\uB9AC\uC790\uC6A9 \uC0AC\uC6A9\uC790 \uC815\uBCF4 \uD0C0\uC785 (\uBE44\uBC00\uBC88\uD638 \uC81C\uC678, \uBAA8\uB4E0 \uD544\uB4DC \uC77D\uAE30 \uC804\uC6A9)</span>
<span class="token keyword">type</span> <span class="token class-name">AdminSafeUser</span> <span class="token operator">=</span> Readonly<span class="token operator">&lt;</span>Omit<span class="token operator">&lt;</span>User<span class="token punctuation">,</span> <span class="token string">&#39;password&#39;</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>

<span class="token comment">// \uC0AC\uC6A9\uC790 \uC0DD\uC131 \uC2DC \uD544\uC694\uD55C \uC815\uBCF4 \uD0C0\uC785 (ID \uC81C\uC678, \uAD00\uB9AC\uC790 \uC5EC\uBD80 \uC120\uD0DD\uC801)</span>
<span class="token keyword">type</span> <span class="token class-name">CreateUserDto</span> <span class="token operator">=</span> Omit<span class="token operator">&lt;</span>User<span class="token punctuation">,</span> <span class="token string">&#39;id&#39;</span><span class="token operator">&gt;</span> <span class="token operator">&amp;</span> Partial<span class="token operator">&lt;</span>Pick<span class="token operator">&lt;</span>User<span class="token punctuation">,</span> <span class="token string">&#39;isAdmin&#39;</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">createUser</span><span class="token punctuation">(</span>userData<span class="token operator">:</span> CreateUserDto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \uC0AC\uC6A9\uC790 \uC0DD\uC131 \uB85C\uC9C1</span>
<span class="token punctuation">}</span>

<span class="token function">createUser</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;John Doe&quot;</span><span class="token punctuation">,</span>
  email<span class="token operator">:</span> <span class="token string">&quot;john@example.com&quot;</span><span class="token punctuation">,</span>
  password<span class="token operator">:</span> <span class="token string">&quot;securepassword123&quot;</span>
  <span class="token comment">// isAdmin\uC740 \uC120\uD0DD\uC801</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC774\uB7EC\uD55C \uD0C0\uC785 \uC720\uD2F8\uB9AC\uD2F0\uB4E4\uC744 \uD65C\uC6A9\uD558\uBA74 \uCF54\uB4DC\uC758 \uD0C0\uC785 \uC548\uC815\uC131\uC744 \uB192\uC774\uACE0, \uC7AC\uC0AC\uC6A9 \uAC00\uB2A5\uD55C \uD0C0\uC785\uC744 \uC27D\uAC8C \uC815\uC758\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uC2E4\uC81C \uD504\uB85C\uC81D\uD2B8\uC5D0\uC11C \uC774\uB4E4\uC744 \uC801\uC808\uD788 \uC870\uD569\uD558\uC5EC \uC0AC\uC6A9\uD558\uBA74 \uB354 \uACAC\uACE0\uD558\uACE0 \uC720\uC9C0\uBCF4\uC218\uAC00 \uC26C\uC6B4 \uCF54\uB4DC\uB97C \uC791\uC131\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</p><h2 id="_4-\u1110\u1161\u110B\u1175\u11B8-\u110E\u116E\u1105\u1169\u11AB-\u1109\u1175\u11B7\u1112\u116A" tabindex="-1"><a class="header-anchor" href="#_4-\u1110\u1161\u110B\u1175\u11B8-\u110E\u116E\u1105\u1169\u11AB-\u1109\u1175\u11B7\u1112\u116A" aria-hidden="true">#</a> 4. \uD0C0\uC785 \uCD94\uB860 \uC2EC\uD654</h2><p>TypeScript\uC758 \uD0C0\uC785 \uCD94\uB860 \uAE30\uB2A5\uC744 \uC798 \uD65C\uC6A9\uD558\uBA74 \uBA85\uC2DC\uC801\uC778 \uD0C0\uC785 \uC120\uC5B8\uC744 \uC904\uC774\uBA74\uC11C\uB3C4 \uD0C0\uC785 \uC548\uC815\uC131\uC744 \uC720\uC9C0\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uB2E4\uC74C\uC740 \uD0C0\uC785 \uCD94\uB860\uC744 \uC801\uADF9\uC801\uC73C\uB85C \uD65C\uC6A9\uD558\uB294 \uC608\uC81C\uB4E4\uC785\uB2C8\uB2E4.</p><h3 id="\u1107\u1167\u11AB\u1109\u116E-\u110E\u1169\u1100\u1175\u1112\u116A\u1105\u1173\u11AF-\u1110\u1169\u11BC\u1112\u1161\u11AB-\u1110\u1161\u110B\u1175\u11B8-\u110E\u116E\u1105\u1169\u11AB" tabindex="-1"><a class="header-anchor" href="#\u1107\u1167\u11AB\u1109\u116E-\u110E\u1169\u1100\u1175\u1112\u116A\u1105\u1173\u11AF-\u1110\u1169\u11BC\u1112\u1161\u11AB-\u1110\u1161\u110B\u1175\u11B8-\u110E\u116E\u1105\u1169\u11AB" aria-hidden="true">#</a> \uBCC0\uC218 \uCD08\uAE30\uD654\uB97C \uD1B5\uD55C \uD0C0\uC785 \uCD94\uB860</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// \uBA85\uC2DC\uC801 \uD0C0\uC785 \uC120\uC5B8 \uC5C6\uC774\uB3C4 TypeScript\uAC00 \uD0C0\uC785\uC744 \uCD94\uB860\uD569\uB2C8\uB2E4.</span>
<span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token string">&quot;Alice&quot;</span><span class="token punctuation">;</span>  <span class="token comment">// string\uC73C\uB85C \uCD94\uB860</span>
<span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>  <span class="token comment">// number\uB85C \uCD94\uB860</span>
<span class="token keyword">let</span> isStudent <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token comment">// boolean\uC73C\uB85C \uCD94\uB860</span>

<span class="token comment">// \uBC30\uC5F4\uC758 \uACBD\uC6B0 \uC694\uC18C \uD0C0\uC785\uC744 \uCD94\uB860\uD569\uB2C8\uB2E4.</span>
<span class="token keyword">let</span> numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// number[]\uB85C \uCD94\uB860</span>
<span class="token keyword">let</span> mixed <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;two&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&quot;four&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// (string | number)[]\uB85C \uCD94\uB860</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u1112\u1161\u11B7\u1109\u116E-\u1107\u1161\u11AB\u1112\u116A\u11AB-\u1110\u1161\u110B\u1175\u11B8-\u110E\u116E\u1105\u1169\u11AB" tabindex="-1"><a class="header-anchor" href="#\u1112\u1161\u11B7\u1109\u116E-\u1107\u1161\u11AB\u1112\u116A\u11AB-\u1110\u1161\u110B\u1175\u11B8-\u110E\u116E\u1105\u1169\u11AB" aria-hidden="true">#</a> \uD568\uC218 \uBC18\uD658 \uD0C0\uC785 \uCD94\uB860</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>  <span class="token comment">// \uBC18\uD658 \uD0C0\uC785\uC774 number\uB85C \uCD94\uB860\uB428</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">greet</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>  <span class="token comment">// \uBC18\uD658 \uD0C0\uC785\uC774 string\uC73C\uB85C \uCD94\uB860\uB428</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u1100\u1162\u11A8\u110E\u1166-\u1105\u1175\u1110\u1165\u1105\u1165\u11AF\u1100\u116A-\u1110\u1161\u110B\u1175\u11B8-\u110E\u116E\u1105\u1169\u11AB" tabindex="-1"><a class="header-anchor" href="#\u1100\u1162\u11A8\u110E\u1166-\u1105\u1175\u1110\u1165\u1105\u1165\u11AF\u1100\u116A-\u1110\u1161\u110B\u1175\u11B8-\u110E\u116E\u1105\u1169\u11AB" aria-hidden="true">#</a> \uAC1D\uCCB4 \uB9AC\uD130\uB7F4\uACFC \uD0C0\uC785 \uCD94\uB860</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// \uAC1D\uCCB4 \uB9AC\uD130\uB7F4\uC758 \uC18D\uC131 \uD0C0\uC785\uC774 \uC790\uB3D9\uC73C\uB85C \uCD94\uB860\uB429\uB2C8\uB2E4.</span>
<span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">{</span>
    id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">&quot;John Doe&quot;</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>
    isAdmin<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    roles<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;editor&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// user\uC758 \uD0C0\uC785\uC740 \uB2E4\uC74C\uACFC \uAC19\uC774 \uCD94\uB860\uB429\uB2C8\uB2E4:</span>
<span class="token comment">// {</span>
<span class="token comment">//     id: number;</span>
<span class="token comment">//     name: string;</span>
<span class="token comment">//     age: number;</span>
<span class="token comment">//     isAdmin: boolean;</span>
<span class="token comment">//     roles: string[];</span>
<span class="token comment">// }</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u110C\u1166\u1102\u1166\u1105\u1175\u11A8\u1100\u116A-\u1110\u1161\u110B\u1175\u11B8-\u110E\u116E\u1105\u1169\u11AB" tabindex="-1"><a class="header-anchor" href="#\u110C\u1166\u1102\u1166\u1105\u1175\u11A8\u1100\u116A-\u1110\u1161\u110B\u1175\u11B8-\u110E\u116E\u1105\u1169\u11AB" aria-hidden="true">#</a> \uC81C\uB124\uB9AD\uACFC \uD0C0\uC785 \uCD94\uB860</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">identity</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arg<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> output <span class="token operator">=</span> <span class="token function">identity</span><span class="token punctuation">(</span><span class="token string">&quot;myString&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// output\uC758 \uD0C0\uC785\uC774 string\uC73C\uB85C \uCD94\uB860\uB428</span>
<span class="token keyword">let</span> numOutput <span class="token operator">=</span> <span class="token function">identity</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// numOutput\uC758 \uD0C0\uC785\uC774 number\uB85C \uCD94\uB860\uB428</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u110F\u1169\u11AF\u1107\u1162\u11A8-\u1112\u1161\u11B7\u1109\u116E\u110B\u1174-\u1106\u1162\u1100\u1162\u1107\u1167\u11AB\u1109\u116E-\u1110\u1161\u110B\u1175\u11B8-\u110E\u116E\u1105\u1169\u11AB" tabindex="-1"><a class="header-anchor" href="#\u110F\u1169\u11AF\u1107\u1162\u11A8-\u1112\u1161\u11B7\u1109\u116E\u110B\u1174-\u1106\u1162\u1100\u1162\u1107\u1167\u11AB\u1109\u116E-\u1110\u1161\u110B\u1175\u11B8-\u110E\u116E\u1105\u1169\u11AB" aria-hidden="true">#</a> \uCF5C\uBC31 \uD568\uC218\uC758 \uB9E4\uAC1C\uBCC0\uC218 \uD0C0\uC785 \uCD94\uB860</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">const</span> numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// item\uC758 \uD0C0\uC785\uC774 number\uB85C \uCD94\uB860\uB428</span>
numbers<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \uBA85\uC2DC\uC801 \uD0C0\uC785 \uC120\uC5B8 \uC5C6\uC774\uB3C4 value\uC758 \uD0C0\uC785\uC774 number\uB85C \uCD94\uB860\uB428</span>
<span class="token keyword">const</span> doubled <span class="token operator">=</span> numbers<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>value <span class="token operator">=&gt;</span> value <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u1100\u116E\u110C\u1169-\u1107\u116E\u11AB\u1112\u1162-\u1112\u1161\u11AF\u1103\u1161\u11BC\u1100\u116A-\u1110\u1161\u110B\u1175\u11B8-\u110E\u116E\u1105\u1169\u11AB" tabindex="-1"><a class="header-anchor" href="#\u1100\u116E\u110C\u1169-\u1107\u116E\u11AB\u1112\u1162-\u1112\u1161\u11AF\u1103\u1161\u11BC\u1100\u116A-\u1110\u1161\u110B\u1175\u11B8-\u110E\u116E\u1105\u1169\u11AB" aria-hidden="true">#</a> \uAD6C\uC870 \uBD84\uD574 \uD560\uB2F9\uACFC \uD0C0\uC785 \uCD94\uB860</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">const</span> point <span class="token operator">=</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// destructured\uC758 \uD0C0\uC785\uC774 { x: number, y: number }\uB85C \uCD94\uB860\uB428</span>
<span class="token keyword">function</span> <span class="token function">printCoord</span><span class="token punctuation">(</span><span class="token punctuation">{</span> x<span class="token punctuation">,</span> y <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> y<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Coordinate: (</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>x<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>y<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">printCoord</span><span class="token punctuation">(</span>point<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u110C\u1169\u1100\u1165\u11AB\u1107\u116E-\u1110\u1161\u110B\u1175\u11B8\u1100\u116A-\u1110\u1161\u110B\u1175\u11B8-\u110E\u116E\u1105\u1169\u11AB" tabindex="-1"><a class="header-anchor" href="#\u110C\u1169\u1100\u1165\u11AB\u1107\u116E-\u1110\u1161\u110B\u1175\u11B8\u1100\u116A-\u1110\u1161\u110B\u1175\u11B8-\u110E\u116E\u1105\u1169\u11AB" aria-hidden="true">#</a> \uC870\uAC74\uBD80 \uD0C0\uC785\uACFC \uD0C0\uC785 \uCD94\uB860</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">IsArray<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">any</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

<span class="token comment">// \uD0C0\uC785 \uC778\uC218\uB97C \uBA85\uC2DC\uC801\uC73C\uB85C \uC9C0\uC815\uD558\uC9C0 \uC54A\uC544\uB3C4 TypeScript\uAC00 \uCD94\uB860</span>
<span class="token keyword">const</span> isNumberArray<span class="token operator">:</span> IsArray<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token comment">// true\uB85C \uCD94\uB860</span>
<span class="token keyword">const</span> isStringArray<span class="token operator">:</span> IsArray<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token comment">// false\uB85C \uCD94\uB860</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u1107\u1169\u11A8\u1112\u1161\u11B8-\u110B\u1168\u110C\u1166-\u1110\u1161\u110B\u1175\u11B8-\u110E\u116E\u1105\u1169\u11AB\u110B\u1173\u11AF-\u1112\u116A\u11AF\u110B\u116D\u11BC\u1112\u1161\u11AB-\u110B\u1172\u1110\u1175\u11AF\u1105\u1175\u1110\u1175-\u1112\u1161\u11B7\u1109\u116E" tabindex="-1"><a class="header-anchor" href="#\u1107\u1169\u11A8\u1112\u1161\u11B8-\u110B\u1168\u110C\u1166-\u1110\u1161\u110B\u1175\u11B8-\u110E\u116E\u1105\u1169\u11AB\u110B\u1173\u11AF-\u1112\u116A\u11AF\u110B\u116D\u11BC\u1112\u1161\u11AB-\u110B\u1172\u1110\u1175\u11AF\u1105\u1175\u1110\u1175-\u1112\u1161\u11B7\u1109\u116E" aria-hidden="true">#</a> \uBCF5\uD569 \uC608\uC81C: \uD0C0\uC785 \uCD94\uB860\uC744 \uD65C\uC6A9\uD55C \uC720\uD2F8\uB9AC\uD2F0 \uD568\uC218</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">createUser</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> object<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>defaults<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> override<span class="token operator">:</span> Partial<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>defaults<span class="token punctuation">,</span> <span class="token operator">...</span>override <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> defaultUser <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&quot;Guest&quot;</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    isAdmin<span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// user\uC758 \uD0C0\uC785\uC774 { name: string; age: number; isAdmin: boolean; }\uB85C \uCD94\uB860\uB428</span>
<span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token function">createUser</span><span class="token punctuation">(</span>defaultUser<span class="token punctuation">,</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;John&quot;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// { name: &quot;John&quot;, age: 30, isAdmin: false }</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-\u110C\u1166\u1102\u1166\u1105\u1175\u11A8-\u1109\u1175\u11B7\u1112\u116A" tabindex="-1"><a class="header-anchor" href="#_5-\u110C\u1166\u1102\u1166\u1105\u1175\u11A8-\u1109\u1175\u11B7\u1112\u116A" aria-hidden="true">#</a> 5. \uC81C\uB124\uB9AD \uC2EC\uD654</h2><p>\uC81C\uB124\uB9AD\uC744 \uC0AC\uC6A9\uD558\uBA74 \uD0C0\uC785\uC744 \uB9C8\uCE58 \uD568\uC218\uC758 \uB9E4\uAC1C\uBCC0\uC218\uCC98\uB7FC \uC0AC\uC6A9\uD560 \uC218 \uC788\uC5B4, \uC7AC\uC0AC\uC6A9 \uAC00\uB2A5\uD558\uACE0 \uC720\uC5F0\uD55C \uCF54\uB4DC\uB97C \uC791\uC131\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uB2E4\uC74C\uC740 \uC81C\uB124\uB9AD\uC744 \uC801\uADF9\uC801\uC73C\uB85C \uD65C\uC6A9\uD558\uB294 \uB2E4\uC591\uD55C \uC608\uC81C\uB4E4\uC785\uB2C8\uB2E4.</p><h3 id="\u1100\u1175\u1107\u1169\u11AB-\u110C\u1166\u1102\u1166\u1105\u1175\u11A8-\u1112\u1161\u11B7\u1109\u116E" tabindex="-1"><a class="header-anchor" href="#\u1100\u1175\u1107\u1169\u11AB-\u110C\u1166\u1102\u1166\u1105\u1175\u11A8-\u1112\u1161\u11B7\u1109\u116E" aria-hidden="true">#</a> \uAE30\uBCF8 \uC81C\uB124\uB9AD \uD568\uC218</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">identity</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arg<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> output1 <span class="token operator">=</span> <span class="token generic-function"><span class="token function">identity</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;myString&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \uD0C0\uC785\uC744 \uBA85\uC2DC\uC801\uC73C\uB85C \uC9C0\uC815</span>
<span class="token keyword">let</span> output2 <span class="token operator">=</span> <span class="token function">identity</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \uD0C0\uC785 \uCD94\uB860 \uC0AC\uC6A9</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u110C\u1166\u1102\u1166\u1105\u1175\u11A8-\u110B\u1175\u11AB\u1110\u1165\u1111\u1166\u110B\u1175\u1109\u1173" tabindex="-1"><a class="header-anchor" href="#\u110C\u1166\u1102\u1166\u1105\u1175\u11A8-\u110B\u1175\u11AB\u1110\u1165\u1111\u1166\u110B\u1175\u1109\u1173" aria-hidden="true">#</a> \uC81C\uB124\uB9AD \uC778\uD130\uD398\uC774\uC2A4</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">interface</span> <span class="token class-name">GenericIdentityFn<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> myIdentity<span class="token operator">:</span> GenericIdentityFn<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> identity<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u110C\u1166\u1102\u1166\u1105\u1175\u11A8-\u110F\u1173\u11AF\u1105\u1162\u1109\u1173" tabindex="-1"><a class="header-anchor" href="#\u110C\u1166\u1102\u1166\u1105\u1175\u11A8-\u110F\u1173\u11AF\u1105\u1162\u1109\u1173" aria-hidden="true">#</a> \uC81C\uB124\uB9AD \uD074\uB798\uC2A4</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">class</span> <span class="token class-name">GenericNumber<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    zeroValue<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
    <span class="token function-variable function">add</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">;</span>

    <span class="token function">constructor</span><span class="token punctuation">(</span>zeroValue<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> <span class="token function-variable function">addFn</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>zeroValue <span class="token operator">=</span> zeroValue<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>add <span class="token operator">=</span> addFn<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> stringNumeric <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GenericNumber<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">+</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stringNumeric<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>stringNumeric<span class="token punctuation">.</span>zeroValue<span class="token punctuation">,</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// &quot;test&quot;</span>

<span class="token keyword">let</span> numberNumeric <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GenericNumber<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">+</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>numberNumeric<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 15</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u110C\u1166\u1102\u1166\u1105\u1175\u11A8-\u110C\u1166\u110B\u1163\u11A8\u110C\u1169\u1100\u1165\u11AB" tabindex="-1"><a class="header-anchor" href="#\u110C\u1166\u1102\u1166\u1105\u1175\u11A8-\u110C\u1166\u110B\u1163\u11A8\u110C\u1169\u1100\u1165\u11AB" aria-hidden="true">#</a> \uC81C\uB124\uB9AD \uC81C\uC57D\uC870\uAC74</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">interface</span> <span class="token class-name">Lengthwise</span> <span class="token punctuation">{</span>
    length<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">loggingIdentity</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> Lengthwise<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \uC774\uC81C .length \uC18D\uC131\uC774 \uC788\uB2E4\uACE0 \uD655\uC2E0\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4</span>
    <span class="token keyword">return</span> arg<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">loggingIdentity</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \uC131\uACF5</span>
<span class="token function">loggingIdentity</span><span class="token punctuation">(</span><span class="token punctuation">{</span>length<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \uC131\uACF5</span>
<span class="token comment">// loggingIdentity(3);  // \uC624\uB958, number\uC5D0\uB294 .length\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u110C\u1166\u1102\u1166\u1105\u1175\u11A8\u1100\u116A-\u1110\u1161\u110B\u1175\u11B8-\u110E\u116E\u1105\u1169\u11AB\u110B\u1173\u11AF-\u1112\u116A\u11AF\u110B\u116D\u11BC\u1112\u1161\u11AB-factory-\u1112\u1161\u11B7\u1109\u116E" tabindex="-1"><a class="header-anchor" href="#\u110C\u1166\u1102\u1166\u1105\u1175\u11A8\u1100\u116A-\u1110\u1161\u110B\u1175\u11B8-\u110E\u116E\u1105\u1169\u11AB\u110B\u1173\u11AF-\u1112\u116A\u11AF\u110B\u116D\u11BC\u1112\u1161\u11AB-factory-\u1112\u1161\u11B7\u1109\u116E" aria-hidden="true">#</a> \uC81C\uB124\uB9AD\uACFC \uD0C0\uC785 \uCD94\uB860\uC744 \uD65C\uC6A9\uD55C Factory \uD568\uC218</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">create</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>Factory<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">BeeKeeper</span> <span class="token punctuation">{</span>
    hasMask<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">ZooKeeper</span> <span class="token punctuation">{</span>
    nametag<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&quot;Mikle&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    numLegs<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Bee</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    keeper<span class="token operator">:</span> BeeKeeper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BeeKeeper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Lion</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    keeper<span class="token operator">:</span> ZooKeeper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZooKeeper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> bee <span class="token operator">=</span> <span class="token function">create</span><span class="token punctuation">(</span>Bee<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> lion <span class="token operator">=</span> <span class="token function">create</span><span class="token punctuation">(</span>Lion<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u110C\u1166\u1102\u1166\u1105\u1175\u11A8-\u1110\u1161\u110B\u1175\u11B8-\u1106\u1162\u1111\u1175\u11BC" tabindex="-1"><a class="header-anchor" href="#\u110C\u1166\u1102\u1166\u1105\u1175\u11A8-\u1110\u1161\u110B\u1175\u11B8-\u1106\u1162\u1111\u1175\u11BC" aria-hidden="true">#</a> \uC81C\uB124\uB9AD \uD0C0\uC785 \uB9E4\uD551</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">Nullable<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">NullableUser</span> <span class="token operator">=</span> Nullable<span class="token operator">&lt;</span>User<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// \uACB0\uACFC: { name: string | null; age: number | null; }</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u110C\u1169\u1100\u1165\u11AB\u1107\u116E-\u1110\u1161\u110B\u1175\u11B8\u1100\u116A-\u110C\u1166\u1102\u1166\u1105\u1175\u11A8" tabindex="-1"><a class="header-anchor" href="#\u110C\u1169\u1100\u1165\u11AB\u1107\u116E-\u1110\u1161\u110B\u1175\u11B8\u1100\u116A-\u110C\u1166\u1102\u1166\u1105\u1175\u11A8" aria-hidden="true">#</a> \uC870\uAC74\uBD80 \uD0C0\uC785\uACFC \uC81C\uB124\uB9AD</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">NonNullable<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token keyword">null</span></span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token builtin">never</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">Result</span> <span class="token operator">=</span> NonNullable<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// \uACB0\uACFC: string | number</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u1107\u1169\u11A8\u1112\u1161\u11B8-\u110B\u1168\u110C\u1166-\u110C\u1166\u1102\u1166\u1105\u1175\u11A8\u110B\u1173\u11AF-\u1112\u116A\u11AF\u110B\u116D\u11BC\u1112\u1161\u11AB-\u1109\u1161\u11BC\u1110\u1162-\u1100\u116A\u11AB\u1105\u1175-\u1109\u1175\u1109\u1173\u1110\u1166\u11B7" tabindex="-1"><a class="header-anchor" href="#\u1107\u1169\u11A8\u1112\u1161\u11B8-\u110B\u1168\u110C\u1166-\u110C\u1166\u1102\u1166\u1105\u1175\u11A8\u110B\u1173\u11AF-\u1112\u116A\u11AF\u110B\u116D\u11BC\u1112\u1161\u11AB-\u1109\u1161\u11BC\u1110\u1162-\u1100\u116A\u11AB\u1105\u1175-\u1109\u1175\u1109\u1173\u1110\u1166\u11B7" aria-hidden="true">#</a> \uBCF5\uD569 \uC608\uC81C: \uC81C\uB124\uB9AD\uC744 \uD65C\uC6A9\uD55C \uC0C1\uD0DC \uAD00\uB9AC \uC2DC\uC2A4\uD15C</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">class</span> <span class="token class-name">StateManager<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> state<span class="token operator">:</span> <span class="token constant">S</span><span class="token punctuation">;</span>

    <span class="token function">constructor</span><span class="token punctuation">(</span>initialState<span class="token operator">:</span> <span class="token constant">S</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> initialState<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">S</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">setState</span><span class="token punctuation">(</span>newState<span class="token operator">:</span> Partial<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">,</span> <span class="token operator">...</span>newState <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">UserState</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    isLoggedIn<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> userStateManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StateManager<span class="token operator">&lt;</span>UserState<span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&quot;Guest&quot;</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    isLoggedIn<span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>userStateManager<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// { name: &quot;Guest&quot;, age: 0, isLoggedIn: false }</span>

userStateManager<span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;John&quot;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>userStateManager<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// { name: &quot;John&quot;, age: 30, isLoggedIn: false }</span>

userStateManager<span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> isLoggedIn<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>userStateManager<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// { name: &quot;John&quot;, age: 30, isLoggedIn: true }</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-react\u110B\u116A-typescript" tabindex="-1"><a class="header-anchor" href="#_6-react\u110B\u116A-typescript" aria-hidden="true">#</a> 6. React\uC640 TypeScript</h2><p>React\uC640 TypeScript\uB97C \uD568\uAED8 \uC0AC\uC6A9\uD560 \uB54C \uD2B9\uD788 \uC720\uC6A9\uD55C \uD0C0\uC785 \uC720\uD2F8\uB9AC\uD2F0\uB4E4\uC744 \uC18C\uAC1C\uD569\uB2C8\uB2E4. \uC774\uB4E4\uC740 \uCEF4\uD3EC\uB10C\uD2B8\uC640 props\uB97C \uB354 \uC815\uD655\uD558\uACE0 \uC720\uC5F0\uD558\uAC8C \uD0C0\uC785\uD654\uD558\uB294 \uB370 \uB3C4\uC6C0\uC744 \uC90D\uB2C8\uB2E4.</p><h3 id="componentprops-t" tabindex="-1"><a class="header-anchor" href="#componentprops-t" aria-hidden="true">#</a> <code>ComponentProps&lt;T&gt;</code></h3><p>\uCEF4\uD3EC\uB10C\uD2B8\uC758 props \uD0C0\uC785\uC744 \uCD94\uCD9C\uD569\uB2C8\uB2E4.</p><p><strong>AS-IS:</strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;some-ui-library&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">ButtonProps</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">onClick</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  children<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode<span class="token punctuation">;</span>
  <span class="token comment">// \uB2E4\uB978 \uBAA8\uB4E0 props\uB97C \uC218\uB3D9\uC73C\uB85C \uC815\uC758\uD574\uC57C \uD568</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>TO-BE:</strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;some-ui-library&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ComponentProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">ButtonProps</span> <span class="token operator">=</span> ComponentProps<span class="token operator">&lt;</span><span class="token keyword">typeof</span> Button<span class="token operator">&gt;</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="propswithchildren-p" tabindex="-1"><a class="header-anchor" href="#propswithchildren-p" aria-hidden="true">#</a> <code>PropsWithChildren&lt;P&gt;</code></h3><p>props \uD0C0\uC785\uC5D0 children\uC744 \uCD94\uAC00\uD569\uB2C8\uB2E4.</p><p><strong>AS-IS:</strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">CardProps</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  children<span class="token operator">?</span><span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>TO-BE:</strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> PropsWithChildren <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">CardProps</span> <span class="token operator">=</span> PropsWithChildren<span class="token operator">&lt;</span><span class="token punctuation">{</span>
  title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cssproperties" tabindex="-1"><a class="header-anchor" href="#cssproperties" aria-hidden="true">#</a> CSSProperties</h3><p>\uC778\uB77C\uC778 \uC2A4\uD0C0\uC77C \uAC1D\uCCB4\uC758 \uD0C0\uC785\uC744 \uC815\uC758\uD569\uB2C8\uB2E4.</p><p><strong>AS-IS:</strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">function</span> <span class="token function">StyledDiv</span><span class="token punctuation">(</span><span class="token punctuation">{</span> style <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span> style<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>TO-BE:</strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> CSSProperties <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">StyledDiv</span><span class="token punctuation">(</span><span class="token punctuation">{</span> style <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span> style<span class="token operator">:</span> CSSProperties <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-\u110C\u1169\u11BC\u1112\u1161\u11B8-\u110B\u1168\u110C\u1166-5\u1100\u1161\u110C\u1175" tabindex="-1"><a class="header-anchor" href="#_7-\u110C\u1169\u11BC\u1112\u1161\u11B8-\u110B\u1168\u110C\u1166-5\u1100\u1161\u110C\u1175" aria-hidden="true">#</a> 7. \uC885\uD569 \uC608\uC81C 5\uAC00\uC9C0</h2><h3 id="\u110C\u1162\u1100\u1171\u110C\u1165\u11A8-\u1110\u1161\u110B\u1175\u11B8\u110B\u1173\u11AF-\u110B\u1175\u110B\u116D\u11BC\u1112\u1161\u11AB-json-\u1111\u1161\u1109\u1165" tabindex="-1"><a class="header-anchor" href="#\u110C\u1162\u1100\u1171\u110C\u1165\u11A8-\u1110\u1161\u110B\u1175\u11B8\u110B\u1173\u11AF-\u110B\u1175\u110B\u116D\u11BC\u1112\u1161\u11AB-json-\u1111\u1161\u1109\u1165" aria-hidden="true">#</a> \uC7AC\uADC0\uC801 \uD0C0\uC785\uC744 \uC774\uC6A9\uD55C JSON \uD30C\uC11C</h3><p>\uC774 \uC608\uC81C\uB294 TypeScript\uC758 \uC7AC\uADC0\uC801 \uD0C0\uC785\uC744 \uC0AC\uC6A9\uD558\uC5EC JSON \uAD6C\uC870\uB97C \uD0C0\uC785\uC73C\uB85C \uD45C\uD604\uD569\uB2C8\uB2E4.</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">JSONValue</span> <span class="token operator">=</span>
  <span class="token operator">|</span> <span class="token builtin">string</span>
  <span class="token operator">|</span> <span class="token builtin">number</span>
  <span class="token operator">|</span> <span class="token builtin">boolean</span>
  <span class="token operator">|</span> <span class="token keyword">null</span>
  <span class="token operator">|</span> JSONValue<span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token operator">|</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> JSONValue <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">JSONObject</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> JSONValue <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">parseJSON</span><span class="token punctuation">(</span>json<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> JSONValue <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">stringifyJSON</span><span class="token punctuation">(</span>value<span class="token operator">:</span> JSONValue<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \uC0AC\uC6A9 \uC608</span>
<span class="token keyword">const</span> jsonString <span class="token operator">=</span> <span class="token string">&#39;{&quot;name&quot;:&quot;John&quot;,&quot;age&quot;:30,&quot;isStudent&quot;:false,&quot;hobbies&quot;:[&quot;reading&quot;,&quot;coding&quot;]}&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> parsed <span class="token operator">=</span> <span class="token function">parseJSON</span><span class="token punctuation">(</span>jsonString<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>parsed<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> stringified <span class="token operator">=</span> <span class="token function">stringifyJSON</span><span class="token punctuation">(</span><span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stringified<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u110C\u1169\u1100\u1165\u11AB\u1107\u116E-\u1110\u1161\u110B\u1175\u11B8\u110B\u1173\u11AF-\u110B\u1175\u110B\u116D\u11BC\u1112\u1161\u11AB-\u110B\u1172\u1110\u1175\u11AF\u1105\u1175\u1110\u1175-\u1112\u1161\u11B7\u1109\u116E" tabindex="-1"><a class="header-anchor" href="#\u110C\u1169\u1100\u1165\u11AB\u1107\u116E-\u1110\u1161\u110B\u1175\u11B8\u110B\u1173\u11AF-\u110B\u1175\u110B\u116D\u11BC\u1112\u1161\u11AB-\u110B\u1172\u1110\u1175\u11AF\u1105\u1175\u1110\u1175-\u1112\u1161\u11B7\u1109\u116E" aria-hidden="true">#</a> \uC870\uAC74\uBD80 \uD0C0\uC785\uC744 \uC774\uC6A9\uD55C \uC720\uD2F8\uB9AC\uD2F0 \uD568\uC218</h3><p>\uC774 \uC608\uC81C\uB294 \uC870\uAC74\uBD80 \uD0C0\uC785\uC744 \uC0AC\uC6A9\uD558\uC5EC \uAC1D\uCCB4\uC758 \uD2B9\uC815 \uC18D\uC131\uB9CC \uC120\uD0DD\uD558\uB294 \uC720\uD2F8\uB9AC\uD2F0 \uD568\uC218\uB97C \uAD6C\uD604\uD569\uB2C8\uB2E4.</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">PickByType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span> <span class="token keyword">as</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span> <span class="token operator">?</span> <span class="token constant">P</span> <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">pickByType</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> object<span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">U</span><span class="token punctuation">)</span><span class="token operator">:</span> PickByType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result<span class="token operator">:</span> Partial<span class="token operator">&lt;</span>PickByType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name"><span class="token keyword">type</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result<span class="token punctuation">[</span>key <span class="token keyword">as</span> <span class="token keyword">keyof</span> PickByType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span><span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token constant">U</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result <span class="token keyword">as</span> PickByType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \uC0AC\uC6A9 \uC608</span>
<span class="token keyword">const</span> mixedObject <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;John&quot;</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>
  birthDate<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;1990-01-01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  address<span class="token operator">:</span> <span class="token punctuation">{</span> street<span class="token operator">:</span> <span class="token string">&quot;Main St&quot;</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token string">&quot;New York&quot;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> dateProperties <span class="token operator">=</span> <span class="token function">pickByType</span><span class="token punctuation">(</span>mixedObject<span class="token punctuation">,</span> Date<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dateProperties<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { birthDate: Date }</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u110C\u1166\u1102\u1166\u1105\u1175\u11A8\u1100\u116A-\u1106\u1162\u1111\u1175\u11BC\u1103\u116C\u11AB-\u1110\u1161\u110B\u1175\u11B8\u110B\u1173\u11AF-\u110B\u1175\u110B\u116D\u11BC\u1112\u1161\u11AB-\u1100\u1175\u11C1\u110B\u1173\u11AB-\u110B\u1175\u11B0\u1100\u1175-\u110C\u1165\u11AB\u110B\u116D\u11BC-\u1107\u1167\u11AB\u1112\u116A\u11AB\u1100\u1175" tabindex="-1"><a class="header-anchor" href="#\u110C\u1166\u1102\u1166\u1105\u1175\u11A8\u1100\u116A-\u1106\u1162\u1111\u1175\u11BC\u1103\u116C\u11AB-\u1110\u1161\u110B\u1175\u11B8\u110B\u1173\u11AF-\u110B\u1175\u110B\u116D\u11BC\u1112\u1161\u11AB-\u1100\u1175\u11C1\u110B\u1173\u11AB-\u110B\u1175\u11B0\u1100\u1175-\u110C\u1165\u11AB\u110B\u116D\u11BC-\u1107\u1167\u11AB\u1112\u116A\u11AB\u1100\u1175" aria-hidden="true">#</a> \uC81C\uB124\uB9AD\uACFC \uB9E4\uD551\uB41C \uD0C0\uC785\uC744 \uC774\uC6A9\uD55C \uAE4A\uC740 \uC77D\uAE30 \uC804\uC6A9 \uBCC0\uD658\uAE30</h3><p>\uC774 \uC608\uC81C\uB294 \uC81C\uB124\uB9AD\uACFC \uB9E4\uD551\uB41C \uD0C0\uC785\uC744 \uC0AC\uC6A9\uD558\uC5EC \uAC1D\uCCB4\uB97C \uAE4A\uC740 \uC218\uC900\uC5D0\uC11C \uC77D\uAE30 \uC804\uC6A9\uC73C\uB85C \uBCC0\uD658\uD569\uB2C8\uB2E4.</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">DeepReadonly<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span>
  <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token keyword">infer</span> <span class="token constant">R</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">?</span> DeepReadonlyArray<span class="token operator">&lt;</span><span class="token constant">R</span><span class="token operator">&gt;</span> <span class="token operator">:</span>
    <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Function</span></span> <span class="token operator">?</span> <span class="token constant">T</span> <span class="token operator">:</span>
      <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">object</span> <span class="token operator">?</span> DeepReadonlyObject<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">:</span>
        <span class="token constant">T</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DeepReadonlyArray<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">ReadonlyArray<span class="token operator">&lt;</span>DeepReadonly<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">DeepReadonlyObject<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> DeepReadonly<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">makeDeepReadonly</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> DeepReadonly<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> obj <span class="token keyword">as</span> DeepReadonly<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \uC0AC\uC6A9 \uC608</span>
<span class="token keyword">const</span> mutableObject <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;John&quot;</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>
  address<span class="token operator">:</span> <span class="token punctuation">{</span>
    street<span class="token operator">:</span> <span class="token string">&quot;Main St&quot;</span><span class="token punctuation">,</span>
    city<span class="token operator">:</span> <span class="token string">&quot;New York&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  hobbies<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;reading&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;coding&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> readonlyObject <span class="token operator">=</span> <span class="token function">makeDeepReadonly</span><span class="token punctuation">(</span>mutableObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// readonlyObject.name = &quot;Jane&quot;; // \uC624\uB958</span>
<span class="token comment">// readonlyObject.address.city = &quot;Boston&quot;; // \uC624\uB958</span>
<span class="token comment">// readonlyObject.hobbies.push(&quot;gaming&quot;); // \uC624\uB958</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u110B\u1175\u11AB\u1110\u1165\u1109\u1166\u11A8\u1109\u1167\u11AB-\u1110\u1161\u110B\u1175\u11B8\u1100\u116A-\u110B\u1172\u1102\u1175\u110B\u1169\u11AB-\u1110\u1161\u110B\u1175\u11B8\u110B\u1173\u11AF-\u110B\u1175\u110B\u116D\u11BC\u1112\u1161\u11AB-\u1107\u1169\u11A8\u110C\u1161\u11B8\u1112\u1161\u11AB-\u1109\u1161\u11BC\u1110\u1162-\u1100\u116A\u11AB\u1105\u1175" tabindex="-1"><a class="header-anchor" href="#\u110B\u1175\u11AB\u1110\u1165\u1109\u1166\u11A8\u1109\u1167\u11AB-\u1110\u1161\u110B\u1175\u11B8\u1100\u116A-\u110B\u1172\u1102\u1175\u110B\u1169\u11AB-\u1110\u1161\u110B\u1175\u11B8\u110B\u1173\u11AF-\u110B\u1175\u110B\u116D\u11BC\u1112\u1161\u11AB-\u1107\u1169\u11A8\u110C\u1161\u11B8\u1112\u1161\u11AB-\u1109\u1161\u11BC\u1110\u1162-\u1100\u116A\u11AB\u1105\u1175" aria-hidden="true">#</a> \uC778\uD130\uC139\uC158 \uD0C0\uC785\uACFC \uC720\uB2C8\uC628 \uD0C0\uC785\uC744 \uC774\uC6A9\uD55C \uBCF5\uC7A1\uD55C \uC0C1\uD0DC \uAD00\uB9AC</h3><p>\uC774 \uC608\uC81C\uB294 \uC778\uD130\uC139\uC158 \uD0C0\uC785\uACFC \uC720\uB2C8\uC628 \uD0C0\uC785\uC744 \uC0AC\uC6A9\uD558\uC5EC \uBCF5\uC7A1\uD55C \uC560\uD50C\uB9AC\uCF00\uC774\uC158 \uC0C1\uD0DC\uB97C \uBAA8\uB378\uB9C1\uD569\uB2C8\uB2E4.</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">UserRole</span> <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;user&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;guest&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">BaseState</span> <span class="token punctuation">{</span>
  isLoading<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  error<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">GuestState</span> <span class="token keyword">extends</span> <span class="token class-name">BaseState</span> <span class="token punctuation">{</span>
  userRole<span class="token operator">:</span> <span class="token string">&quot;guest&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">UserState</span> <span class="token keyword">extends</span> <span class="token class-name">BaseState</span> <span class="token punctuation">{</span>
  userRole<span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">;</span>
  username<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">AdminState</span> <span class="token keyword">extends</span> <span class="token class-name">BaseState</span> <span class="token punctuation">{</span>
  userRole<span class="token operator">:</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">;</span>
  username<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  adminToken<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">AppState</span> <span class="token operator">=</span> GuestState <span class="token operator">|</span> UserState <span class="token operator">|</span> AdminState<span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">updateState</span><span class="token punctuation">(</span>currentState<span class="token operator">:</span> AppState<span class="token punctuation">,</span> update<span class="token operator">:</span> Partial<span class="token operator">&lt;</span>AppState<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> AppState <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>currentState<span class="token punctuation">,</span> <span class="token operator">...</span>update <span class="token punctuation">}</span> <span class="token keyword">as</span> AppState<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \uC0AC\uC6A9 \uC608</span>
<span class="token keyword">let</span> state<span class="token operator">:</span> AppState <span class="token operator">=</span> <span class="token punctuation">{</span> isLoading<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> error<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> userRole<span class="token operator">:</span> <span class="token string">&quot;guest&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>

state <span class="token operator">=</span> <span class="token function">updateState</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> <span class="token punctuation">{</span> isLoading<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> userRole<span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span> username<span class="token operator">:</span> <span class="token string">&quot;john_doe&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>

state <span class="token operator">=</span> <span class="token function">updateState</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> <span class="token punctuation">{</span> userRole<span class="token operator">:</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span> adminToken<span class="token operator">:</span> <span class="token string">&quot;secret_token&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u1110\u1161\u110B\u1175\u11B8-\u110E\u116E\u1105\u1169\u11AB\u1100\u116A-\u110C\u1166\u1102\u1166\u1105\u1175\u11A8\u110B\u1173\u11AF-\u110B\u1175\u110B\u116D\u11BC\u1112\u1161\u11AB-\u1112\u1161\u11B7\u1109\u116E-\u1112\u1161\u11B8\u1109\u1165\u11BC\u1100\u1175" tabindex="-1"><a class="header-anchor" href="#\u1110\u1161\u110B\u1175\u11B8-\u110E\u116E\u1105\u1169\u11AB\u1100\u116A-\u110C\u1166\u1102\u1166\u1105\u1175\u11A8\u110B\u1173\u11AF-\u110B\u1175\u110B\u116D\u11BC\u1112\u1161\u11AB-\u1112\u1161\u11B7\u1109\u116E-\u1112\u1161\u11B8\u1109\u1165\u11BC\u1100\u1175" aria-hidden="true">#</a> \uD0C0\uC785 \uCD94\uB860\uACFC \uC81C\uB124\uB9AD\uC744 \uC774\uC6A9\uD55C \uD568\uC218 \uD569\uC131\uAE30</h3><p>\uC774 \uC608\uC81C\uB294 \uD0C0\uC785 \uCD94\uB860\uACFC \uC81C\uB124\uB9AD\uC744 \uC0AC\uC6A9\uD558\uC5EC \uD568\uC218 \uD569\uC131\uC744 \uD0C0\uC785 \uC548\uC804\uD558\uAC8C \uAD6C\uD604\uD569\uB2C8\uB2E4.</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">Func<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">R</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">R</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">compose</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">R</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>fn1<span class="token operator">:</span> Func<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token constant">R</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> Func<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token constant">R</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">compose</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T1</span><span class="token punctuation">,</span> <span class="token constant">R</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>fn1<span class="token operator">:</span> Func<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token constant">T1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">R</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> Func<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token constant">T1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">R</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">compose</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T1</span><span class="token punctuation">,</span> <span class="token constant">T2</span><span class="token punctuation">,</span> <span class="token constant">R</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>fn1<span class="token operator">:</span> Func<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token constant">T2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">R</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> fn2<span class="token operator">:</span> Func<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token constant">T1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">T2</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> Func<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token constant">T1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">R</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">compose</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T1</span><span class="token punctuation">,</span> <span class="token constant">T2</span><span class="token punctuation">,</span> <span class="token constant">T3</span><span class="token punctuation">,</span> <span class="token constant">R</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  fn1<span class="token operator">:</span> Func<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token constant">T3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">R</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  fn2<span class="token operator">:</span> Func<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token constant">T2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">T3</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  fn3<span class="token operator">:</span> Func<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token constant">T1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">T2</span><span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token operator">:</span> Func<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token constant">T1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">R</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">compose</span><span class="token punctuation">(</span><span class="token operator">...</span>fns<span class="token operator">:</span> Func<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> Func<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> fns<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> g<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token function">g</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \uC0AC\uC6A9 \uC608</span>
<span class="token keyword">const</span> <span class="token function-variable function">toUpperCase</span> <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">exclaim</span> <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">+</span> <span class="token string">&quot;!&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> shout <span class="token operator">=</span> <span class="token function">compose</span><span class="token punctuation">(</span>exclaim<span class="token punctuation">,</span> toUpperCase<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">shout</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;HELLO!&quot;</span>

<span class="token keyword">const</span> <span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">square</span> <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x <span class="token operator">*</span> x<span class="token punctuation">;</span>
<span class="token keyword">const</span> addAndSquare <span class="token operator">=</span> <span class="token function">compose</span><span class="token punctuation">(</span>square<span class="token punctuation">,</span> add<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">addAndSquare</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 49</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,160);function w(q,T){const s=o("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[n("a",r,[k,a(s)])]),n("p",null,[n("a",d,[v,a(s)])]),n("p",null,[n("a",m,[b,a(s)])]),n("p",null,[n("a",g,[y,a(s)])]),n("p",null,[n("a",h,[f,a(s)])]),x])}var A=e(i,[["render",w],["__file","index.html.vue"]]);export{A as default};
