import{_ as e,r as o,o as c,c as l,a as n,b as t,e as s,d as p}from"./app.0931900d.js";const i={},u=n("h1",{id:"mvvm-system-\u1100\u1162\u1109\u1165\u11AB\u1112\u1161\u1100\u1175-3",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#mvvm-system-\u1100\u1162\u1109\u1165\u11AB\u1112\u1161\u1100\u1175-3","aria-hidden":"true"},"#"),s(" MVVM System \uAC1C\uC120\uD558\uAE30 (3)")],-1),k=n("p",null,"\uAC1D\uCCB4\uC9C0\uD5A5 \uC790\uBC14\uC2A4\uD06C\uB9BD\uD2B8 \uB9C8\uC9C0\uB9C9 \uD3EC\uC2A4\uD305\uC785\uB2C8\uB2E4.",-1),r={class:"custom-container tip"},d=n("p",{class:"custom-container-title"},"\uD574\uB2F9 \uD3EC\uC2A4\uD2B8\uB294 \uC544\uB798\uC758 \uB0B4\uC6A9\uB4E4\uC744 \uD1A0\uB300\uB85C \uC815\uB9AC\uD55C \uAC83\uC785\uB2C8\uB2E4.",-1),v={href:"https://www.youtube.com/watch?v=5UUISCK6CL4",target:"_blank",rel:"noopener noreferrer"},m=s("\uCF54\uB4DC\uC2A4\uD53C\uCE20 86\uAE30 5\uD68C\uCC28 \uB3D9\uC601\uC0C1"),b=p(`<h2 id="viewmodellistener-\u1100\u1162\u1109\u1165\u11AB" tabindex="-1"><a class="header-anchor" href="#viewmodellistener-\u1100\u1162\u1109\u1165\u11AB" aria-hidden="true">#</a> ViewModelListener \uAC1C\uC120</h2><p><a href="../03-Strategy-Observer">MVVM System \uAC1C\uC120\uD558\uAE30 (1)</a>\uC5D0\uC11C \uB9CC\uB4E0 Binder\uC758 viewmodelUpdated\uB294 \uBB38\uC81C\uAC00 \uC788\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Binder <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token class-name">extends</span> ViewModelListener <span class="token punctuation">{</span>\uB7B5
  <span class="token comment">// .. \uC0DD\uB7B5</span>
  <span class="token function">viewmodelUpdated</span> <span class="token punctuation">(</span><span class="token parameter">updated</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>#items<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> vmName<span class="token punctuation">,</span> el <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      items<span class="token punctuation">[</span>vmName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">type</span><span class="token punctuation">(</span>rootViewModel<span class="token punctuation">[</span>vmName<span class="token punctuation">]</span><span class="token punctuation">,</span> ViewModel<span class="token punctuation">)</span><span class="token punctuation">,</span> el<span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    updated<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> subKey<span class="token punctuation">,</span> category<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>items<span class="token punctuation">[</span>subKey<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
      <span class="token keyword">const</span> <span class="token punctuation">[</span>vm<span class="token punctuation">,</span> el<span class="token punctuation">]</span> <span class="token operator">=</span> items<span class="token punctuation">[</span>subKey<span class="token punctuation">]</span><span class="token punctuation">,</span> processor <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#processors<span class="token punctuation">[</span>category<span class="token punctuation">]</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>el <span class="token operator">||</span> <span class="token operator">!</span>processor<span class="token punctuation">)</span> <span class="token keyword">return</span>
      processor<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC704\uC758 \uCF54\uB4DC\uC5D0\uC11C <code>rootViewModel</code>\uC740 <u>client \uCF54\uB4DC\uC5D0\uC11C \uC0DD\uC131\uD55C \uC804\uC5ED\uBCC0\uC218(\uC804\uC5ED\uAC1D\uCCB4)</u> \uC774\uB2E4. \uADF8\uB7F0\uB370 \uC774 \uC804\uC5ED\uBCC0\uC218\uB97C \uC9C0\uAE08 viewmodelUpdate\uC5D0\uC11C \uC0AC\uC6A9\uD558\uACE0 \uC788\uB294 \uAC83\uC774\uB2E4. \uC774 \uBD80\uBD84\uC744 \uAC1C\uC120\uD574\uC57C \uD55C\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> ViewModelListener <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token class-name">extends</span> <span class="token punctuation">{</span>
  <span class="token comment">/* \uC0DD\uB7B5 */</span>
  <span class="token function">viewmodelUpdated</span> <span class="token punctuation">(</span><span class="token parameter">viewmodel<span class="token punctuation">,</span> updated</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">throw</span> <span class="token string">&#39;override!&#39;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> Binder <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token class-name">extends</span> ViewModelListener <span class="token punctuation">{</span>
  <span class="token function">viewmodelUpdated</span> <span class="token punctuation">(</span><span class="token parameter">viewmodel<span class="token punctuation">,</span> updated</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>#items<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> vmName<span class="token punctuation">,</span> el <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      items<span class="token punctuation">[</span>vmName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">type</span><span class="token punctuation">(</span>viewdmoel<span class="token punctuation">[</span>vmName<span class="token punctuation">]</span><span class="token punctuation">,</span> ViewModel<span class="token punctuation">)</span><span class="token punctuation">,</span> el<span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    updated<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> subKey<span class="token punctuation">,</span> category<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>items<span class="token punctuation">[</span>subKey<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
      <span class="token keyword">const</span> <span class="token punctuation">[</span>vm<span class="token punctuation">,</span> el<span class="token punctuation">]</span> <span class="token operator">=</span> items<span class="token punctuation">[</span>subKey<span class="token punctuation">]</span><span class="token punctuation">,</span> processor <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#processors<span class="token punctuation">[</span>category<span class="token punctuation">]</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>el <span class="token operator">||</span> <span class="token operator">!</span>processor<span class="token punctuation">)</span> <span class="token keyword">return</span>
      processor<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line">\xA0</div><br><br><div class="highlight-line">\xA0</div><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>viewmodelUpdated\uC5D0\uC11C <u>viewmodel\uC744 \uC778\uC790\uB85C \uBC1B\uC544\uC624\uB3C4\uB85D</u> \uD574\uC57C \uD55C\uB2E4. \uADF8\uB7F0\uB370 viewmodelUpdated\uB294 Binder\uC5D0\uB9CC \uC788\uB294\uAC8C \uC544\uB2C8\uB77C ViewModel\uC5D0\uB3C4 \uC874\uC7AC\uD55C\uB2E4. <u>\uADF8\uB9AC\uACE0 ViewModel\uC5D0\uC11C notify\uB85C Binder\uC5D0\uAC8C \uCD5C\uC2E0 \uC815\uBCF4\uB97C \uBCF4\uB0B4\uAC8C \uB41C\uB2E4.</u> \uC774 \uCF54\uB4DC \uB610\uD55C \uC218\uC815\uD574\uC57C \uD55C\uB2E4.</p><img src="https://www.plantuml.com/plantuml/svg/SoWkIImgAStDuKhEpyb9JIx9pCyhLWZBJ2ttpKz9pU7Aooz9LSWlIor2Y2bOAPG1sRaWTcX1Ic99QWeNGbBNJi4fCoy5gC5AGKiBg3qphL9B2yaSk2o68L0Pe0aWuu0gWb910fbvwLmEG1RGaG00" alt="uml diagram"><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> ViewModel <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token class-name">extends</span> ViewModelListener <span class="token punctuation">{</span>
  <span class="token comment">/* \uC0DD\uB7B5 */</span>
  <span class="token function">notify</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#listeners<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">.</span><span class="token function">viewmodelUpdated</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#isUpdated<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
  <span class="token comment">// ViewModel\uC5D0\uC11C \uC2E4\uD589\uD55C viewmodelUpdated\uB294 viewmodel \uC778\uC790\uB97C \uC0AC\uC6A9\uD558\uC9C0 \uC54A\uB294\uB2E4.</span>
  <span class="token function">viewmodelUpdated</span> <span class="token punctuation">(</span><span class="token parameter">viewmodel<span class="token punctuation">,</span> updated</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> updated<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#isUpdated<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>\uADF8\uB7F0\uB370 <a href="../04-ISP-Visitor">MVVM System \uAC1C\uC120\uD558\uAE30 (2)</a>\uC5D0\uC11C \uB9CC\uB4E0 viewmodelUpdated\uB294 \uC704\uC640 \uAC19\uC774 \uB2E8\uC21C\uD558\uC9C0\uAC00 \uC54A\uB2E4. <code>ViewModelSubject</code>\uB294 <code>notify</code>\uB97C \uD1B5\uD574 <code>Binder</code>\uC5D0\uAC8C viewmodel\uC758 updated \uB0B4\uC5ED\uC744 \uC54C\uB9B0\uB2E4.</p><p>\uB2E4\uB974\uAC8C \uB9D0\uD558\uC790\uBA74 <strong>ViewModelSubject\uC640 Binder\uAC00 \uACC4\uC57D(\uC758\uC874 \uAD00\uACC4)\uC744 \uB9FA\uACE0 \uC788\uAE30 \uB54C\uBB38</strong>\uC774\uB2E4.</p><p>\uADF8\uB798\uC11C \uC55E\uC11C \uC791\uC131\uD55C \uCF54\uB4DC\uB97C \uADF8\uB300\uB85C \uC0AC\uC6A9\uD560 \uACBD\uC6B0, Binder\uC5D0\uC11C \uBC1B\uC544\uB4E4\uC774\uB294 viewmodel\uC774 ViewModelSubject\uC77C \uC218\uB3C4 \uC788\uACE0, ViewModel\uC77C \uC218\uB3C4 \uC788\uAC8C \uB41C\uB2E4.</p><p>\uB530\uB77C\uC11C Binder\uC5D0\uC11C \uC0AC\uC6A9\uD558\uB294 viewmodelUpdated\uAC00 \uBB34\uC870\uAC74 ViewModel\uC774 \uB418\uB3C4\uB85D \uB9CC\uB4E4\uC5B4\uC57C \uD558\uB294\uB370, \uC774\uB97C \uC704\uD574 <u>ViewModelSubject\uC5D0\uC11C Binder\uC5D0\uAC8C \uB118\uAE30\uB294 Parameter(viewmodel)\uB97C ViewModel\uC5D0\uAC8C \uC704\uC784\uD574\uC57C \uD55C\uB2E4.</u></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> ViewModelSubject <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token class-name">extends</span> ViewModelListener <span class="token punctuation">{</span>
  <span class="token comment">// ... \uC0DD\uB7B5</span>
  <span class="token function">notify</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#listeners<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">.</span><span class="token function">viewmodelUpdated</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>notifyTarget<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#info<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
  <span class="token keyword">get</span> <span class="token function">notifyTarget</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">throw</span> <span class="token string">&#39;must be override!&#39;</span> <span class="token punctuation">}</span> <span class="token comment">// ViewModel\uC5D0\uAC8C \uC704\uC784\uD55C\uB2E4.</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> ViewModel <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token class-name">extends</span> ViewModelSubject <span class="token punctuation">{</span>
  <span class="token comment">// ... \uC0DD\uB7B5</span>
  <span class="token keyword">get</span> <span class="token function">notifyTarget</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token keyword">this</span> <span class="token punctuation">}</span> <span class="token comment">// notifyTarget\uC744 \uD638\uCD9C\uD558\uBA74 ViewModel\uC744 \uBCF4\uB0B8\uB2E4.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC774\uB807\uAC8C ViewModelSubject\uC5D0\uC11C <code>notifyTarget</code>\uC774\uB77C\uB294 getter method\uB97C \uD1B5\uD574 ViewModel\uC5D0\uAC8C \uC704\uC784\uC744 \uD560 \uC218 \uC788\uB2E4.</p><p>\uADF8\uB9AC\uACE0 Binder\uC758 \uCF54\uB4DC\uB3C4 \uB2E4\uC74C\uACFC \uAC19\uC774 \uBCC0\uACBD\uB418\uC5B4\uC57C \uD55C\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Binder <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token class-name">extends</span> ViewModelListener <span class="token punctuation">{</span>
  <span class="token comment">// .. \uC0DD\uB7B5</span>
  <span class="token function">viewmodelUpdated</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> updated<span class="token punctuation">,</span>
                   _ <span class="token operator">=</span> <span class="token function">type</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> ViewModel<span class="token punctuation">)</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// target\uC740 ViewModel \uC774\uC5EC\uC57C \uD55C\uB2E4.</span>
    <span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>#items<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> vmName<span class="token punctuation">,</span> el <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      items<span class="token punctuation">[</span>vmName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">type</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>vmName<span class="token punctuation">]</span><span class="token punctuation">,</span> ViewModel<span class="token punctuation">)</span><span class="token punctuation">,</span> el<span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    updated<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> subKey<span class="token punctuation">,</span> category<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>items<span class="token punctuation">[</span>subKey<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
      <span class="token keyword">const</span> <span class="token punctuation">[</span>vm<span class="token punctuation">,</span> el<span class="token punctuation">]</span> <span class="token operator">=</span> items<span class="token punctuation">[</span>subKey<span class="token punctuation">]</span><span class="token punctuation">,</span> processor <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#processors<span class="token punctuation">[</span>category<span class="token punctuation">]</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>el <span class="token operator">||</span> <span class="token operator">!</span>processor<span class="token punctuation">)</span> <span class="token keyword">return</span>
      processor<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line">\xA0</div><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC8FC\uC11D\uC5D0\uB3C4 \uD45C\uAE30\uD588\uC9C0\uB9CC, Binder\uAC00 \uBC1B\uC544\uB4E4\uC774\uB294 viewmodel(target)\uC740 ViewModelSubject\uAC00 \uC544\uB2C8\uB77C ViewModel\uC774\uC5EC\uC57C \uD55C\uB2E4.</p><p><u>\uCD94\uC0C1 \uACC4\uCE35\uC744 \uBD84\uB9AC\uD558\uAC8C \uB420 \uACBD\uC6B0, \uC5B4\uB5A0\uD55C \uBB38\uC81C\uAC00 \uC0DD\uACBC\uC744 \uB54C \uAC01\uAC01\uC758 \uACC4\uCE35\uC5D0\uC11C \uD574\uACB0\uD558\uB3C4\uB85D \uB9CC\uB4DC\uB294 \uAC83\uC744 \uC9C0\uD5A5\uD574\uC57C \uD55C\uB2E4.</u></p><h2 id="processor-\u1100\u1162\u1109\u1165\u11AB" tabindex="-1"><a class="header-anchor" href="#processor-\u1100\u1162\u1109\u1165\u11AB" aria-hidden="true">#</a> Processor \uAC1C\uC120</h2><p>\uD604\uC7AC Strategy Pattern\uC744 \uD1B5\uD574\uC11C \uCD94\uCD9C\uD55C Processor\uB294 \uC57D\uAC04\uC758 \uBB38\uC81C\uB97C \uAC00\uC9C0\uACE0 \uC788\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Binder\uC758 Render \uBD80\uBD84</span>
<span class="token keyword">const</span> Binder <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token class-name">extends</span> ViewModelListener <span class="token punctuation">{</span>
  <span class="token comment">// ... \uC0DD\uB7B5</span>
  <span class="token function">render</span> <span class="token punctuation">(</span><span class="token parameter">viewmodel<span class="token punctuation">,</span> _ <span class="token operator">=</span> <span class="token function">type</span><span class="token punctuation">(</span>viewmodel<span class="token punctuation">,</span> ViewModel<span class="token punctuation">)</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> processores <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>#processors<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>#items<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> vmName<span class="token punctuation">,</span> el <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token function">type</span><span class="token punctuation">(</span>viewmodel<span class="token punctuation">[</span>vmName<span class="token punctuation">]</span><span class="token punctuation">,</span> ViewModel<span class="token punctuation">)</span>
      processores<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>pk<span class="token punctuation">,</span> processor<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>vm<span class="token punctuation">[</span>pk<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>k<span class="token punctuation">,</span> v<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          processor<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// ViewModel</span>
<span class="token keyword">const</span> ViewModel <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token class-name">extends</span> ViewModelSubject <span class="token punctuation">{</span>
  <span class="token comment">// ... \uC0DD\uB7B5</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> _ <span class="token operator">=</span> <span class="token function">type</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>k<span class="token punctuation">,</span> v<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&#39;styles,attributes,properties&#39;</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>v <span class="token operator">||</span> <span class="token keyword">typeof</span> v <span class="token operator">!=</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">invalid object k: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>k<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, v:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>v<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
        <span class="token keyword">this</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> ViewModel<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> ViewModel<span class="token punctuation">.</span><span class="token function">descriptor</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token keyword">instanceof</span> <span class="token class-name">ViewModel</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          v<span class="token punctuation">.</span><span class="token function">_setParent</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> k<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    Object<span class="token punctuation">.</span><span class="token function">seal</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// Client \uCF54\uB4DC</span>
binder<span class="token punctuation">.</span><span class="token function">addProcessor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">class</span> <span class="token keyword">extends</span> <span class="token class-name">Processor</span> <span class="token punctuation">{</span>
  <span class="token function">_process</span> <span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> el<span class="token punctuation">.</span>style<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> v <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token string">&#39;styles&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
binder<span class="token punctuation">.</span><span class="token function">addProcessor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">class</span> <span class="token keyword">extends</span> <span class="token class-name">Processor</span> <span class="token punctuation">{</span>
  <span class="token function">_process</span> <span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> el<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token string">&#39;attributes&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
binder<span class="token punctuation">.</span><span class="token function">addProcessor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">class</span> <span class="token keyword">extends</span> <span class="token class-name">Processor</span> <span class="token punctuation">{</span>
  <span class="token function">_process</span> <span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> el<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> v <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token string">&#39;properties&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
binder<span class="token punctuation">.</span><span class="token function">addProcessor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">class</span> <span class="token keyword">extends</span> <span class="token class-name">Processor</span> <span class="token punctuation">{</span>
  <span class="token function">_process</span> <span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> el<span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">on</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>k<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token function">v</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> e<span class="token punctuation">,</span> vm<span class="token punctuation">)</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token string">&#39;events&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><div class="highlight-line">\xA0</div><br><br><div class="highlight-line">\xA0</div><br><br><div class="highlight-line">\xA0</div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\uCC98\uB9AC\uAE30(Processor)\uB294 \uB370\uC774\uD130 \uAD6C\uC870(ViewModel)\uACFC \uB3D9\uAE30\uD654 \uB418\uC5B4\uC57C \uD55C\uB2E4.</p><p>\uC704 \uCF54\uB4DC\uC758 \uBB38\uC81C\uC810\uC740 \uBC14\uB85C <strong>Processor\uB294 \uD655\uC7A5 \uAC00\uB2A5</strong> \uD558\uB3C4\uB85D \uB9CC\uB4E4\uC5C8\uC9C0\uB9CC ViewModel\uC5D0\uC11C Processor\uC758 \uC885\uB958\uB97C <code>style</code> <code>attributes</code> <code>properties</code> \uB4F1\uC73C\uB85C <strong>\uC81C\uD55C</strong> \uD558\uACE0 \uC788\uB2E4\uB294 \uAC83\uC774\uB2E4.</p><p><u>\uC989, ViewModel\uC774 Processor\uC758 \uD655\uC7A5\uC744 \uC81C\uD55C\uD558\uACE0 \uC788\uB294 \uAC83\uC774\uB2E4.</u> \uADF8\uB798\uC11C \uC774 \uBD80\uBD84\uC744 \uC798 \uD655\uC7A5\uB418\uB3C4\uB85D \uC77C\uBC18\uD654 \uC2DC\uCF1C\uC57C \uD55C\uB2E4.</p></div><p>\uBB38\uC81C\uB97C \uB354 \uAE4A\uAC8C \uC0B4\uD3B4\uBCF4\uBA74, \uC9C0\uAE08 <strong>Processor\uC758 <code>Spec</code>\uC774 <code>Code</code>\uB85C \uC815\uC758 \uB41C \uC0C1\uD0DC\uB2E4.</strong> \uADF8\uB798\uC11C ViewModel\uC774 \uC790\uC720\uB86D\uAC8C \uC791\uC131\uB418\uB294 \uAC83 \uCC98\uB7FC \uBCF4\uC774\uC9C0\uB9CC \uC0AC\uC2E4 <u>\uC5C4\uACA9\uD558\uAC8C \uC81C\uD55C\uB41C Spec\uC744 \uAE30\uBC18\uC73C\uB85C \uC791\uC131 \uB418\uACE0 \uC788\uB2E4.</u> \uB530\uB77C\uC11C Code\uB97C \uC77D\uC9C0 \uC54A\uC73C\uBA74 \uB370\uC774\uD130 \uD615\uC2DD\uC744 \uC633\uBC14\uB974\uAC8C \uC791\uC131\uD560 \uC218 \uC5C6\uAC8C \uB41C\uB2E4.</p><p>\uADF8\uB7EC\uBA74 \uC5B4\uB5BB\uAC8C ViewModel\uC744 \uC790\uC720\uB86D\uAC8C \uC791\uC131\uD558\uAC8C \uD560 \uC218 \uC788\uB3C4\uB85D \uB9CC\uB4E4 \uC218 \uC788\uC744\uAE4C? \uBC14\uB85C <u>\uC5B4\uB5A4 \uD615\uC2DD\uC774\uB4E0 Getter\uC640 Setter\uB85C \uB9CC\uB4DC\uB294 Parser\uC640 Observer\uB97C \uB9CC\uB4DC\uB294 \uAC83\uC774\uB2E4.</u></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> ViewModel <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token class-name">extends</span> ViewModelSubject <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token constant">KEY</span> <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment">// \uBAA8\uB4E0 Key\uB97C Observer\uC5D0\uAC8C \uBCF4\uACE0\uD55C\uB2E4.</span>
  <span class="token function">define</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> v <span class="token operator">==</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token punctuation">(</span>v <span class="token keyword">instanceof</span> <span class="token class-name">ViewModel</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        target<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        target<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>ViewModel<span class="token punctuation">.</span><span class="token constant">KEY</span><span class="token punctuation">]</span> <span class="token operator">=</span> target<span class="token punctuation">[</span>ViewModel<span class="token punctuation">.</span><span class="token constant">KEY</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&#39;.&#39;</span> <span class="token operator">+</span> k <span class="token comment">// \uC0C1\uB300\uC801\uC778 \uACBD\uB85C \uD45C\uAE30. key\uC758 \uD655\uC7A5</span>
        v<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        target<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>ViewModel<span class="token punctuation">.</span><span class="token constant">KEY</span><span class="token punctuation">]</span><span class="token operator">:</span> target<span class="token punctuation">[</span>ViewModel<span class="token punctuation">.</span><span class="token constant">KEY</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&#39;.&#39;</span> <span class="token operator">+</span> k <span class="token punctuation">}</span> 
        Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>ik<span class="token punctuation">,</span> iv<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> ik<span class="token punctuation">,</span> iv<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;subKey&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> target<span class="token punctuation">.</span>subKey
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \uC7AC\uADC0 \uD568\uC218\uB294 \uC7AC\uADC0\uAC00 \uB05D\uB098\uB294 \uC870\uAC74\uC744 \uBA85\uD655\uD558\uAC8C \uC54C\uBA74 \uB41C\uB2E4.</span>
      <span class="token comment">// \uC885\uACB0 \uC870\uAC74\uC744 \uBC18\uB4DC\uC2DC \uB9CC\uB4E4\uC5B4\uC57C \uD55C\uB2E4.</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token keyword">instanceof</span> <span class="token class-name">ViewModel</span><span class="token punctuation">)</span> v<span class="token punctuation">.</span><span class="token function">_setParent</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> k<span class="token punctuation">)</span>
      Object<span class="token punctuation">.</span><span class="token function">defineProperties</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token parameter">_</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">,</span>
          <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token parameter">newV</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            v <span class="token operator">=</span> newV
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ViewModelValue</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span>subKey<span class="token punctuation">,</span> target<span class="token punctuation">[</span>ViewModel<span class="token punctuation">.</span><span class="token constant">KEY</span><span class="token punctuation">]</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token function">constructor</span> <span class="token punctuation">(</span>data<span class="token punctuation">,</span> _ <span class="token operator">=</span> <span class="token function">type</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">[</span>ViewModel<span class="token punctuation">.</span><span class="token constant">KEY</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;root&#39;</span>
    Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>k<span class="token punctuation">,</span> v<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span>
    Object<span class="token punctuation">.</span><span class="token function">seal</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\uC7AC\uADC0 \uD568\uC218</p><p>\uAE30\uBCF8\uC801\uC73C\uB85C \uC7AC\uADC0 \uD568\uC218\uB294 \uB290\uB9AC\uACE0 \uC704\uD5D8\uC131\uC774 \uD06C\uB2E4. \uD568\uC218\uB97C \uC2E4\uD589\uD558\uBA74 <code>Call Stack</code> \uC774\uB77C\uB294 \uAC83\uC774 \uC313\uC774\uAC8C \uB418\uB294\uB370, \uBE0C\uB77C\uC6B0\uC800\uC5D0\uC11C\uB294 Call Stack\uC758 \uD55C\uACC4\uCE58\uAC00 \uC788\uAE30 \uB54C\uBB38\uC5D0 \uC548\uC804\uD558\uB2E4\uACE0 \uBCFC \uC218 \uC5C6\uB2E4.</p><p>* \uB2E4\uB9CC \uC0AC\uD30C\uB9AC\uC758 \uACBD\uC6B0 \uAF2C\uB9AC \uBB3C\uAE30 \uCD5C\uC801\uD654\uAC00 \uB418\uC5B4 \uC788\uAE30 \uB54C\uBB38\uC5D0 \uB2E4\uB978 \uBE0C\uB77C\uC6B0\uC800\uBCF4\uB2E8 \uC7AC\uADC0 \uD568\uC218\uC758 \uC791\uB3D9\uC774 \uBE44\uAD50\uC801 \uC548\uC804\uD558\uB2E4.</p><p><u>\uADF8\uB798\uC11C \uC54C\uACE0\uB9AC\uC998\uC5D0 \uB300\uD55C \uC774\uD574\uB3C4\uAC00 \uB6F0\uC5B4\uB098\uB2E4\uBA74, \uC7AC\uADC0 \uD568\uC218 \uB300\uC2E0 stack \uC790\uB8CC\uAD6C\uC870\uB97C \uC0AC\uC6A9\uD558\uC5EC \uBC18\uBCF5\uBB38\uC744 \uD1B5\uD574 \uAD6C\uD604 \uD558\uB294 \uAC83\uC774 \uC88B\uB2E4.</u></p></div><div class="custom-container tip"><p class="custom-container-title">if Statement(\uC870\uAC74 \uBD84\uAE30)</p><p>\uC870\uAC74 \uBD84\uAE30\uC758 \uACBD\uC6B0 <u>Optional\uACFC Mandatory</u> \uB450 \uAC00\uC9C0\uAC00 \uC788\uB2E4.</p><ul><li><strong>Optional</strong> : else\uB97C \uC0AC\uC6A9\uD558\uC9C0 \uC54A\uC74C</li><li><strong>Mandatory</strong> : else\uB97C \uC0AC\uC6A9\uD568</li></ul><p>\uC870\uAC74 \uBB38\uC758 \uACBD\uC6B0 \uC5B4\uB5BB\uAC8C \uBCF4\uBA74 \uB2F9\uC5F0\uD55C \uC774\uC57C\uAE30\uC9C0\uB9CC, <u>else\uB97C \uC0AC\uC6A9\uD558\uACE0 \uC548\uD558\uACE0\uC5D0 \uB530\uB77C\uC11C \uCF54\uB4DC\uC758 \uC758\uB3C4\uAC00 \uAD49\uC7A5\uD788 \uB2EC\uB77C\uC9C4\uB2E4.</u></p><p>\uC7AC\uADC0 \uD568\uC218\uC758 \uACBD\uC6B0, \uC7AC\uADC0\uAC00 \uB05D\uB098\uB294 \uC870\uAC74\uC774 \uD544\uC694\uD558\uB2E4. \uADF8\uB807\uAE30 \uB54C\uBB38\uC5D0 Mandatory\uD55C \uBD84\uAE30 \uBB38\uC744 \uD1B5\uD574\uC11C \uC7AC\uADC0\uC758 \uC885\uB8CC\uB97C \uBA85\uC2DC\uD574\uC57C \uD55C\uB2E4.</p></div><p>\uADF8\uB9AC\uACE0 Binder\uC5D0\uC11C Processor\uB97C \uAC00\uC838\uC62C \uB54C <strong>Category\uB97C \uC2DD\uBCC4\uD558\uB294 \uB85C\uC9C1</strong>\uC774 \uD544\uC694\uD558\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Binder <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token class-name">extends</span> ViewModelListener <span class="token punctuation">{</span>
  <span class="token function">viewmodelUpdated</span> <span class="token punctuation">(</span><span class="token parameter">updated</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>#items<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> vmName<span class="token punctuation">,</span> el <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      items<span class="token punctuation">[</span>vmName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">type</span><span class="token punctuation">(</span>rootViewModel<span class="token punctuation">[</span>vmName<span class="token punctuation">]</span><span class="token punctuation">,</span> ViewModel<span class="token punctuation">)</span><span class="token punctuation">,</span> el<span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    updated<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> subKey<span class="token punctuation">,</span> category<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>items<span class="token punctuation">[</span>subKey<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
      <span class="token keyword">const</span> <span class="token punctuation">[</span>vm<span class="token punctuation">,</span> el<span class="token punctuation">]</span> <span class="token operator">=</span> items<span class="token punctuation">[</span>subKey<span class="token punctuation">]</span><span class="token punctuation">,</span> processor <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#processors<span class="token punctuation">[</span>category<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>el <span class="token operator">||</span> <span class="token operator">!</span>processor<span class="token punctuation">)</span> <span class="token keyword">return</span>
      processor<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><u>\uC774\uC81C \uD2B9\uC815 Key \uB97C \uADDC\uC815\uD558\uB294 \uAC83\uC740 Processor \uBC16\uC5D0 \uC5C6\uB2E4.</u> ViewModel\uC740 \uC544\uBB34\uB7F0 Spec\uB3C4 \uAC15\uC694\uD558\uC9C0 \uC54A\uAC8C \uB418\uC5C8\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> SetDomProcessor <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> visitor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DomVisitor</span>
  <span class="token keyword">const</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DomScanner</span><span class="token punctuation">(</span>visitor<span class="token punctuation">)</span>
  <span class="token comment">// Process\uAC00 \uB2E8\uC21C\uD55C \uC774\uC720\uB294 Binder\uAC00 \uBB34\uAC70\uC6CC\uC84C\uAE30 \uB54C\uBB38</span>
  <span class="token comment">// \uC774\uC5D0 \uB300\uD55C \uC758\uC0AC\uACB0\uC815\uC740 \uC870\uC9C1\uC5D0 \uB530\uB77C \uB2EC\uB77C\uC9D0</span>
  <span class="token keyword">const</span> baseProcessors <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token keyword">new</span> <span class="token class-name">class</span> <span class="token keyword">extends</span> <span class="token class-name">Processor</span> <span class="token punctuation">{</span>
      <span class="token function">_process</span> <span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> el<span class="token punctuation">.</span>style<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> v <span class="token punctuation">}</span> 
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token string">&#39;styles&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token class-name">class</span> <span class="token keyword">extends</span> <span class="token class-name">Processor</span> <span class="token punctuation">{</span>
      <span class="token function">_process</span> <span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> el<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token string">&#39;attributes&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token class-name">class</span> <span class="token keyword">extends</span> <span class="token class-name">Processor</span> <span class="token punctuation">{</span>
      <span class="token function">_process</span> <span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> el<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> v <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token string">&#39;properties&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token class-name">class</span> <span class="token keyword">extends</span> <span class="token class-name">Processor</span> <span class="token punctuation">{</span>
      <span class="token function">_process</span> <span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> el<span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">on</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>k<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token function">v</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> e<span class="token punctuation">,</span> vm<span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token string">&#39;events&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span>
  <span class="token keyword">const</span> <span class="token function-variable function">setProcessor</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> binder <span class="token operator">=</span> <span class="token function">type</span><span class="token punctuation">(</span>scanner<span class="token punctuation">.</span><span class="token function">scan</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">,</span> Binder<span class="token punctuation">)</span>
    baseProcessors<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> binder<span class="token punctuation">.</span><span class="token function">addProcessor</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> binder <span class="token operator">=</span> <span class="token function">SetDomProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="list\u1105\u1173\u11AF-\u1111\u116D\u1112\u1167\u11AB\u1112\u1161\u1100\u1175" tabindex="-1"><a class="header-anchor" href="#list\u1105\u1173\u11AF-\u1111\u116D\u1112\u1167\u11AB\u1112\u1161\u1100\u1175" aria-hidden="true">#</a> List\uB97C \uD45C\uD604\uD558\uAE30</h2><p>\uC774\uC81C List\uB97C \uD45C\uD604\uD560 \uC218 \uC788\uB3C4\uB85D Processor\uC640 Scanner\uB97C \uAC1C\uC120\uD574\uC57C \uD55C\uB2E4.</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>target<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-viewmodel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">data-viewmodel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">data-viewmodel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>contents<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span> <span class="token attr-name">data-viwmodel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>list<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">data-template</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>listItem<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-viewmodel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uBA3C\uC800 list\uB97C <code>data-template</code> \uC774\uB77C\uB294 attribute\uB85C \uD45C\uD604\uD55C\uB2E4\uACE0 \uD588\uC744 \uB54C, \uB2E4\uC74C\uACFC \uAC19\uC774 Scanner\uB97C \uC218\uC815\uD558\uBA74 \uB41C\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> DomScanner <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token class-name">extends</span> Scanner <span class="token punctuation">{</span>
  <span class="token keyword">static</span> #templates <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span>
  <span class="token keyword">static</span> <span class="token function">get</span> <span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#templates<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token punctuation">}</span>
  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token parameter">visitor<span class="token punctuation">,</span> _ <span class="token operator">=</span> <span class="token function">type</span><span class="token punctuation">(</span>visitor<span class="token punctuation">,</span> DomVisitor<span class="token punctuation">)</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>visitor<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">scan</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> _ <span class="token operator">=</span> <span class="token function">type</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> HTMLElement<span class="token punctuation">)</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> binder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Binder</span>
    <span class="token keyword">const</span> <span class="token function-variable function">f</span> <span class="token operator">=</span> <span class="token parameter">el</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> template <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;data-template&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>template<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        el<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;data-template&#39;</span><span class="token punctuation">)</span>
        DomScanner<span class="token punctuation">.</span>#templates<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>template<span class="token punctuation">,</span> el<span class="token punctuation">)</span>
        el<span class="token punctuation">.</span>parentElement<span class="token operator">?.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span> <span class="token comment">// Chrome 80 \uBD80\uD130 Optional Chaining\uC744 \uC0AC\uC6A9\uD560 \uC218 \uC788\uAC8C \uB428</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> vm <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;data-viewmodel&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          el<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;data-viewmodel&#39;</span><span class="token punctuation">)</span>
          binder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BinderItem</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">)</span> 
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">f</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">visit</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> target<span class="token punctuation">)</span>
    <span class="token keyword">return</span> binder
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uADF8\uB9AC\uACE0 data-template\uC744 \uC0AC\uC6A9\uD558\uB294 <code>Processor</code>\uB97C \uB9CC\uB4E4\uC5B4\uC57C \uD55C\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">class</span> <span class="token keyword">extends</span> <span class="token class-name">Processor</span> <span class="token punctuation">{</span>
  <span class="token function">_process</span> <span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span>
      name <span class="token operator">=</span> <span class="token function">err</span><span class="token punctuation">(</span><span class="token string">&#39;no name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      data <span class="token operator">=</span> <span class="token function">err</span><span class="token punctuation">(</span><span class="token string">&#39;no data&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span> <span class="token operator">=</span> vm<span class="token punctuation">.</span>template
    <span class="token keyword">const</span> template <span class="token operator">=</span> DomScanner<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">err</span><span class="token punctuation">(</span><span class="token string">&#39;no template&#39;</span> <span class="token operator">+</span> name<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>data <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">err</span><span class="token punctuation">(</span><span class="token string">&#39;invalid data:&#39;</span> <span class="token operator">+</span> data<span class="token punctuation">)</span>
    data<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>vm <span class="token keyword">instanceof</span> <span class="token class-name">ViewModel</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">err</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">invalid Viewmodel: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> - </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>vm<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    
    <span class="token comment">// \uC5EC\uAE30\uAE4C\uC9C0\uAC00 bloack list - \uAC80\uC99D\uB85C\uC9C1</span>
    <span class="token comment">// ------------------------------</span>
    <span class="token comment">// \uC5EC\uAE30\uC11C \uBD80\uD130\uB294 \uAC80\uC99D\uD558\uC9C0 \uC54A\uB294\uB2E4.</span>
    <span class="token comment">// ------------------------------</span>
    <span class="token comment">// \uC5EC\uAE30\uC11C \uBD80\uD130 white list - \uC81C\uC5B4\uB85C\uC9C1</span>

    Object<span class="token punctuation">.</span><span class="token function">freeze</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    visitor<span class="token punctuation">.</span><span class="token function">visit</span><span class="token punctuation">(</span><span class="token parameter">el</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>binder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">[</span>binder<span class="token punctuation">,</span> vm<span class="token punctuation">]</span> <span class="token operator">=</span> el<span class="token punctuation">.</span>binder
        binder<span class="token punctuation">.</span><span class="token function">unwatch</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span>
        <span class="token keyword">delete</span> el<span class="token punctuation">.</span>binder
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> el<span class="token punctuation">)</span>
    el<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    data<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> child <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
      <span class="token keyword">const</span> binder <span class="token operator">=</span> <span class="token function">setProcessor</span><span class="token punctuation">(</span>scanner<span class="token punctuation">.</span><span class="token function">scan</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">)</span>
      el<span class="token punctuation">.</span>binders <span class="token operator">=</span> <span class="token punctuation">[</span>binder<span class="token punctuation">,</span> vm<span class="token punctuation">]</span>
      binder<span class="token punctuation">.</span><span class="token function">watch</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span>
      el<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token string">&#39;template&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uCF54\uB4DC\uB97C \uC791\uC131\uD560 \uB54C <u>BlackList \uC601\uC5ED\uC5D0\uC11C \uBCC0\uC218\uC5D0 \uB300\uD55C \uAC80\uC99D\uC744 \uD558\uC5EC \uAC80\uC99D\uC774 \uC644\uB8CC \uB41C WhiteList\uB97C \uB9CC\uB4E0\uB2E4.</u><br> \uC774\uB807\uAC8C \uD560 \uACBD\uC6B0 <u>\uB85C\uC9C1\uC740 WhiteList\uB85C \uC791\uC131\uD560 \uC218 \uC788\uB2E4.</u></p><p>\uC774\uC81C ViewModel\uC758 Client \uCF54\uB4DC\uC5D0 template \uBD80\uBD84\uC744 \uCD94\uAC00\uD574\uC918\uC57C \uD55C\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> rootViewModel <span class="token operator">=</span> ViewModel<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// ... \uC0DD\uB7B5</span>
  <span class="token literal-property property">list</span><span class="token operator">:</span> ViewModel<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;listItem&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">&#39;1,2,3,4,5,6&#39;</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> ViewModel<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">item</span><span class="token operator">:</span> ViewModel<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">styles</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">background</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">rgb(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">getRandom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">getRandom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">getRandom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token literal-property property">properties</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">innerHTML</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">item</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>v<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="decorator-pattern-\u110C\u1165\u11A8\u110B\u116D\u11BC" tabindex="-1"><a class="header-anchor" href="#decorator-pattern-\u110C\u1165\u11A8\u110B\u116D\u11BC" aria-hidden="true">#</a> Decorator Pattern \uC801\uC6A9</h2><div class="custom-container tip"><p class="custom-container-title">Decorator Pattern</p><ul><li>Decoratoer Pattern\uC740 <u>\uAC1D\uCCB4\uC758 \uACB0\uD569 \uC744 \uD1B5\uD574 \uAE30\uB2A5\uC744 \uB3D9\uC801\uC73C\uB85C \uC720\uC5F0\uD558\uAC8C \uD655\uC7A5 \uD560 \uC218 \uC788\uAC8C \uD574\uC900\uB2E4.</u></li><li>\uCD94\uAC00\uD560 \uC218 \uC788\uB294 \uAE30\uB2A5\uC758 \uC885\uB958\uAC00 \uB9CE\uC740 \uACBD\uC6B0 \uC0AC\uC6A9\uD558\uAE30 \uC88B\uB2E4.</li><li>\uCD94\uAC00 \uAE30\uB2A5\uC744 Decorator\uB85C \uC815\uC758 \uD55C \uD6C4 \uC870\uD569 \uD558\uC5EC \uC124\uACC4 \uD558\uB294 \uBC29\uC2DD\uC774\uB2E4. <ul><li>\uAC1D\uCCB4\uC758 \uC758\uC874\uC131\uC774 \uBD84\uC0B0 \uB41C\uB2E4</li><li>\uAC01\uAC01\uC758 \uAC1D\uCCB4\uAC00 \uD558\uB098\uC758 \uC758\uC874\uC131\uC744 \uAC16\uB294\uB2E4</li><li><u>\uC758\uC874\uC131\uC758 \uBD84\uC0B0 = \uCC45\uC784\uC758 \uBD84\uC0B0</u></li></ul></li><li>Collection\uC744 Linked List\uB85C \uAD00\uB9AC\uD558\uB294 \uAC83\uC774\uB77C\uACE0 \uBCFC \uC218\uB3C4 \uC788\uB2E4</li></ul></div><p>\uAE30\uC874\uC758 Processor\uB294 Collection \uD615\uD0DC\uB85C \uAD00\uB9AC\uB41C\uB2E4. \uADF8\uB798\uC11C <u>\uC758\uC874\uC131\uC774 Collection\uC5D0 \uBAB0\uB9AC\uAC8C \uB418\uACE0 \uC774\uC5D0 \uB530\uB77C \uCC45\uC784\uC774 \uBE44\uB300\uD574\uC9C4\uB2E4.</u></p><p>Collection\uC744 \uC0AC\uC6A9\uD558\uAC8C \uB418\uBA74 \uB192\uC740 \uD655\uB960\uB85C \uC77C\uBC18\uD654\uAC00 \uBB34\uB108\uC9C0\uAC8C \uB41C\uB2E4. \uD2B9\uD788 \uD589\uC704\uB97C \uAC16\uB294 \uAC1D\uCCB4\uB97C Collection\uC73C\uB85C \uAC16\uAC8C \uB418\uBA74 \uBB38\uC81C\uAC00 \uBC1C\uC0DD\uD560 \uD655\uB960\uC774 \uB192\uB2E4. \uD589\uC704(Method)\uB97C \uAC16\uB294 \uB2E4\uB294 \uAC83\uC740 <strong>\uAC1D\uCCB4\uB9C8\uB2E4 \uAC00\uC9C0\uACE0 \uC788\uB294 \uB3D9\uC791\uC774 \uB2E4\uB974\uB2E4\uB294 \uAC83</strong>\uC778\uB370 \uC774\uAC78 Collection\uC73C\uB85C \uBB36\uC744 \uACBD\uC6B0 <u>\uC5EC\uB7EC \uAC00\uC9C0 \uC0C1\uD669\uC5D0 \uB300\uD55C \uB300\uC751\uC774 \uD798\uB4E4\uC5B4\uC9C8 \uC218 \uBC16\uC5D0 \uC5C6\uB2E4.</u></p><p>\uADF8\uB798\uC11C Collection\uC73C\uB85C \uAD00\uB9AC \uB418\uACE0 \uC788\uB294 \uAC1D\uCCB4\uB4E4\uC744 Decoration Pattern\uC744 \uC0AC\uC6A9\uD558\uC5EC <u>Linked List\uB85C \uBD84\uC0B0</u> \uC2DC\uD0A8 \uB2E4\uC74C \uAC01\uAC01\uC758 \uAC1D\uCCB4\uAC00 \uAC16\uB294 Method\uB294 \uAC01\uC790 \uC54C\uC544\uC11C \uC2E4\uD589\uD558\uACE0 \uB2E4\uC74C \uAC1D\uCCB4\uB97C \uD638\uCD9C\uD558\uBA74 \uB41C\uB2E4.</p><p>\uC989, <strong>Loop\uB97C Object\uC5D0\uAC8C \uC704\uC784\uD558\uB294 \uAC83</strong>\uC774\uB77C\uACE0 \uC0DD\uAC01\uD560 \uC218\uB3C4 \uC788\uB2E4. \uCF54\uB4DC\uB97C \uAC1D\uCCB4\uB85C \uBC14\uAFB8\uB294 \uAC83\uC774\uB2E4.</p><p>\uC774\uC81C \uCF54\uB4DC\uC0C1\uC73C\uB85C \uC0B4\uD3B4\uBCF4\uC790. \uBA3C\uC800 <code>Processor</code>\uB97C \uC218\uC815\uD574\uC57C \uD55C\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Processor <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token punctuation">{</span>
  category<span class="token punctuation">;</span>
  #next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token parameter">category</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>category <span class="token operator">=</span> category
    Object<span class="token punctuation">.</span><span class="token function">freeze</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">process</span> <span class="token punctuation">(</span>category<span class="token punctuation">,</span> vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">,</span>
            _0 <span class="token operator">=</span> <span class="token function">type</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> ViewModel<span class="token punctuation">)</span><span class="token punctuation">,</span>
            _1 <span class="token operator">=</span> <span class="token function">type</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> HTMLElement<span class="token punctuation">)</span><span class="token punctuation">,</span>
            _2 <span class="token operator">=</span> <span class="token function">type</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_process</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span>

    <span class="token comment">// next\uAC00 \uC788\uC744 \uACBD\uC6B0, next\uC758 process\uB97C \uC2E4\uD589\uD55C\uB2E4.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>#category <span class="token operator">===</span> category<span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_process</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span>

    <span class="token comment">// category</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>#next <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#next<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>category<span class="token punctuation">,</span> vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">_process</span> <span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">throw</span> <span class="token string">&#39;override&#39;</span> <span class="token punctuation">}</span>
  <span class="token function">next</span> <span class="token punctuation">(</span><span class="token parameter">processor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>#next <span class="token operator">=</span> processor
    <span class="token keyword">return</span> processor
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC704\uC758 \uCF54\uB4DC\uB294 \uB2E4\uC74C\uACFC \uAC19\uC774 \uC0AC\uC6A9\uB420 \uC218 \uC788\uB2E4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> processor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">class</span> <span class="token keyword">extends</span> <span class="token class-name">Processor</span> <span class="token punctuation">{</span>
<span class="token function">_process</span> <span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> el<span class="token punctuation">.</span>style<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> v <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token string">&#39;styles&#39;</span><span class="token punctuation">)</span>
processor
  <span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">class</span> <span class="token keyword">extends</span> <span class="token class-name">Processor</span> <span class="token punctuation">{</span>
    <span class="token function">_process</span> <span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> el<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token string">&#39;attributes&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">class</span> <span class="token keyword">extends</span> <span class="token class-name">Processor</span> <span class="token punctuation">{</span>
    <span class="token function">_process</span> <span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> el<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> v <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token string">&#39;properties&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">class</span> <span class="token keyword">extends</span> <span class="token class-name">Processor</span> <span class="token punctuation">{</span>
    <span class="token function">_process</span> <span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> el<span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">on</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>k<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token function">v</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> e<span class="token punctuation">,</span> vm<span class="token punctuation">)</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token string">&#39;events&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uADF8\uB9AC\uACE0 <code>Binder</code> \uB610\uD55C \uACE0\uCCD0\uC918\uC57C \uD55C\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Binder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">class</span> <span class="token keyword">extends</span> <span class="token class-name">ViewModelListener</span> <span class="token punctuation">{</span>
  <span class="token comment">// .. \uC0DD\uB7B5</span>
  <span class="token comment">// addProcessor, #processors \uC0AD\uC81C</span>
  #processor <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token keyword">set</span> <span class="token function">processor</span> <span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#processor <span class="token operator">=</span> v <span class="token punctuation">}</span>
  <span class="token function">render</span> <span class="token punctuation">(</span><span class="token parameter">viewmodel<span class="token punctuation">,</span> _ <span class="token operator">=</span> <span class="token function">type</span><span class="token punctuation">(</span>viewmodel<span class="token punctuation">,</span> ViewModel<span class="token punctuation">)</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>#items<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> vmName<span class="token punctuation">,</span> el <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token function">type</span><span class="token punctuation">(</span>viewmodel<span class="token punctuation">[</span>vmName<span class="token punctuation">]</span><span class="token punctuation">,</span> ViewModel<span class="token punctuation">)</span>
      Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>category<span class="token punctuation">,</span> childVm<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>childVm<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>k<span class="token punctuation">,</span> v<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>#processor<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>category<span class="token punctuation">,</span> vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token comment">// \uAC01\uAC01\uC758 processorr\uAC00 category\uB97C \uC2DD\uBCC4\uD558\uC5EC \uC2E4\uD589\uD568</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC774\uC81C <code>Binder</code>\uC5D0 <code>Processor</code>\uB97C \uC8FC\uC785\uD560 \uB550 \uB2E4\uC74C\uACFC \uAC19\uC774 \uD574\uC57C \uD55C\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> visitor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DomVisitor</span>
<span class="token keyword">const</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DomScanner</span><span class="token punctuation">(</span>visitor<span class="token punctuation">)</span>
<span class="token keyword">const</span> binder <span class="token operator">=</span> <span class="token function">type</span><span class="token punctuation">(</span>scanner<span class="token punctuation">.</span><span class="token function">scan</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">,</span> Binder<span class="token punctuation">)</span>

<span class="token comment">// \uCCAB \uBC88\uC9F8 processor \uC8FC\uC785</span>
binder<span class="token punctuation">.</span>processor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">class</span> <span class="token keyword">extends</span> <span class="token class-name">Processor</span> <span class="token punctuation">{</span>
<span class="token function">_process</span> <span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> el<span class="token punctuation">.</span>style<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> v <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token string">&#39;styles&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// \uB098\uBA38\uC9C0 processor \uC8FC\uC785</span>
binder<span class="token punctuation">.</span>processor 
<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">class</span> <span class="token keyword">extends</span> <span class="token class-name">Processor</span> <span class="token punctuation">{</span>
  <span class="token function">_process</span> <span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> el<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token string">&#39;attributes&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">class</span> <span class="token keyword">extends</span> <span class="token class-name">Processor</span> <span class="token punctuation">{</span>
  <span class="token function">_process</span> <span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> el<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> v <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token string">&#39;properties&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">class</span> <span class="token keyword">extends</span> <span class="token class-name">Processor</span> <span class="token punctuation">{</span>
  <span class="token function">_process</span> <span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> el<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> el<span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">on</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>k<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token function">v</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> e<span class="token punctuation">,</span> vm<span class="token punctuation">)</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token string">&#39;events&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u110E\u116C\u110C\u1169\u11BC-\u110F\u1169\u1103\u1173" tabindex="-1"><a class="header-anchor" href="#\u110E\u116C\u110C\u1169\u11BC-\u110F\u1169\u1103\u1173" aria-hidden="true">#</a> \uCD5C\uC885 \uCF54\uB4DC</h2><p>Decorator \uAE4C\uC9C0 \uBC18\uC601\uD55C \uCF54\uB4DC\uB294 \uB2E4\uC74C\uACFC \uAC19\uB2E4.</p><p>&lt;&lt;&lt; @/CodeSpitz/Object-Oriented-Javascript/05-Extension/example.html</p>`,59),g={href:"https://github.com/JunilHwang/TIL/blob/master/CodeSpitz/Object-Oriented-Javascript/05-Extension/example.html",target:"_blank",rel:"noopener noreferrer"},w=s("GitHub\uC5D0\uC11C \uBCF4\uAE30"),h=p('<h2 id="\u1109\u1162\u11BC\u1100\u1161\u11A8-\u110C\u1165\u11BC\u1105\u1175" tabindex="-1"><a class="header-anchor" href="#\u1109\u1162\u11BC\u1100\u1161\u11A8-\u110C\u1165\u11BC\u1105\u1175" aria-hidden="true">#</a> \uC0DD\uAC01 \uC815\uB9AC</h2><ul><li>\uD568\uBD80\uB85C \uC131\uAE09\uD55C \uC77C\uBC18\uD654\uB97C \uD558\uC9C0 \uC54A\uAE30 \uC704\uD574\uC120 \uCF54\uC5B4(\uBCF8\uCCB4)\uB97C \uAC00\uBCCD\uAC8C \uB9CC\uB4E4\uACE0, \uB4A4\uCABD\uC73C\uB85C \uBC00\uC5B4\uB0B4\uBA74 \uC88B\uB2E4.</li><li>\uCF54\uC5B4\uB294 \uC548\uC804\uD574\uC9C0\uACE0 \uAC00\uBCCD\uC9C0\uB9CC, \uB9C8\uC9C0\uB9C9 \uAD6C\uD604\uCCB4\uC5D0 \uB530\uB77C\uC11C \uD504\uB85C\uC81D\uD2B8\uAC00 \uC2E4\uD328\uD560 \uC218 \uC788\uB2E4.</li><li>\uC81C\uC5B4\uC5ED\uC804\uC744 \uD1B5\uD574\uC11C \uCF54\uC5B4\uB97C \uBB34\uAC81\uAC8C \uB9CC\uB4E4\uBA74 \uC740\uC2E0\uC758 \uD3ED\uC774 \uC881\uC544\uC9C0\uAC8C \uB41C\uB2E4. <ul><li>\uC548\uC815\uD654\uB41C \uC11C\uBE44\uC2A4 \u2192 \uC798 \uBCC0\uD558\uC9C0 \uC54A\uC74C \u2192 \uC81C\uC5B4 \uC5ED\uC804\uC758 \uD6A8\uACFC\uB97C \uBCF4\uAE30\uAC00 \uC27D\uB2E4.</li><li>\uC131\uC7A5\uD558\uB294 \uC11C\uBE44\uC2A4 \u2192 \uC798 \uBCC0\uD568 \u2192 \uC81C\uC5B4 \uC5ED\uC804\uC758 \uD6A8\uACFC\uB97C \uBCF4\uAE30\uAC00 \uD798\uB4E4\uB2E4.</li></ul></li><li>\uD604\uB300\uC758 \uC874\uC7AC\uD558\uB294 \uB300\uBD80\uBD84\uC758 \uD504\uB808\uC784\uC6CC\uD06C\uB294 \uCF54\uC5B4\uB97C \uAC00\uBCCD\uAC8C \uB9CC\uB4E0\uB2E4. <ul><li>\uB300\uBD80\uBD84\uC758 \uAE30\uB2A5\uC740 \uCF54\uC5B4\uC5D0 \uC5F0\uACB0\uB41C \uD50C\uB7EC\uADF8\uC778\uC5D0\uAC8C \uC704\uC784\uD55C\uB2E4</li><li>\uC989, \uC81C\uC5B4\uC5ED\uC804\uC774 \uD50C\uB7EC\uADF8\uC778\uB4E4\uC5D0\uAC8C \uBD84\uD560\uB418\uC5B4 \uC788\uB2E4.</li><li>\uCF54\uC5B4 : Vue</li><li>\uD50C\uB7EC\uADF8\uC778 : VueRouter, Vuex, VueLoader</li></ul></li></ul>',2);function y(f,V){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,k,n("div",r,[d,n("p",null,[n("a",v,[m,t(a)])])]),b,n("p",null,[n("a",g,[w,t(a)])]),h])}var x=e(i,[["render",y],["__file","index.html.vue"]]);export{x as default};
