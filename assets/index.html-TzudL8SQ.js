import{_ as i,r as p,o as r,c as t,a as n,b as s,d as e,e as l}from"./app-B2zpISQz.js";const d="/TIL/assets/01-BwXjxtYV.jpg",c="/TIL/assets/02-CfNrgvOS.jpg",o="/TIL/assets/03-BH6FFoFe.jpg",u="/TIL/assets/04-DHqhC4w1.jpg",v={},m=l('<h1 id="gradle-wrapper" tabindex="-1"><a class="header-anchor" href="#gradle-wrapper"><span>Gradle Wrapper</span></a></h1><p><code>Gradle Wrapper</code>는 Gradle을 각 개발자나 CI 서버에 깔지 않고, 프로젝트에 함께 포함시켜 배포할 수 있는 방법을 제공해준다.</p><div class="custom-container tip"><p class="custom-container-title">Wrapper를 사용하는 이유</p><p>Gradle 빌드를 실행하는 데 권장되는 방법은 Gradle Wrapper를 사용하는 것이다. Wrapper는 선언 된 버전의 Gradle을 호출하여 필요한 경우 미리 다운로드하는 스크립트다. 결과적으로 수동 설치 프로세스를 수행하지 않고도 Gradle 프로젝트를 신속하게 시작할 수 있다.</p></div><p>즉, Gradle Wrapper를 사용하면 이미 존재하는 프로젝트를 새로운 환경에서 바로 빌드할 수 있다. java나 gardle도 설치할 필요가 없다. <strong>환경에 종속되지 않는다는 이야기다.</strong></p><h2 id="gradle-download" tabindex="-1"><a class="header-anchor" href="#gradle-download"><span>Gradle Download</span></a></h2>',5),g={href:"https://gradle.org/releases/",target:"_blank",rel:"noopener noreferrer"},b=l(`<h3 id="linux-macos" tabindex="-1"><a class="header-anchor" href="#linux-macos"><span>Linux &amp; MacOS</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ <span class="token function">mkdir</span> /opt/gradle <span class="token comment"># gradle 폴더 생성</span></span>
<span class="line">$ <span class="token function">unzip</span> <span class="token parameter variable">-d</span> /opt/gradle gradle-6.0.1-bin.zip <span class="token comment"># 압축 해제</span></span>
<span class="line highlighted">$ <span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/opt/gradle/gradle-6.0.1/bin <span class="token comment"># 환경변수 설정</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="window" tabindex="-1"><a class="header-anchor" href="#window"><span>Window</span></a></h3><p><code>C:\\Gradle</code>에 폴더를 만든 후, 다운받은 gradle을 옮긴다.</p><p><img src="`+d+'" alt="예시1"></p><p>그리고 <code>컴퓨터 &gt; 속성 &gt; 고급 시스템 설정 &gt; 고급 &gt; 환경변수</code>로 들어간 다음 <code>시스템 변수</code>의 <code>Path</code>에 <code>C:\\Gradle\\gradle-6.0.1\\bin</code>를 추가해준다.</p><p><img src="'+c+`" alt="예시2"></p><h3 id="설치-확인" tabindex="-1"><a class="header-anchor" href="#설치-확인"><span>설치 확인</span></a></h3><p>환경변수까지 설정이 완료되었으면 <code>gradle -v</code> 명령을 통해 정상적으로 설치 되었는지 확인한다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ gradle <span class="token parameter variable">-v</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="`+o+`" alt="예시3"></p><h2 id="gradlew" tabindex="-1"><a class="header-anchor" href="#gradlew"><span>gradlew</span></a></h2><p>프로젝트 폴더에서 다음과 같이 <code>gradle wrapper</code> 명령을 실행하면 <code>gradlew</code> 파일이 생성된다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 그냥 실행</span></span>
<span class="line">gradle wrapper</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 옵션을 사용하는 경우</span></span>
<span class="line">gradle wrapper --gradle-version <span class="token number">6.0</span>.1 --distribution-type all</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+u+`" alt="예시4"></p><p><code>gradle build</code>를 사용하면 컴퓨터에 설치된 gradle과 java를 기준으로 build 하고, <code>./gradlew build</code>를 실행하면 <code>build.gradle</code> 파일에 정의한 내용을 기준으로 build된다.</p><ul><li>Linux, OSX, MacOS : <u>gradlew</u> 사용</li><li>window : <u>gradleㅈ.bat</u> 사용</li></ul><h3 id="build-gradle-작성" tabindex="-1"><a class="header-anchor" href="#build-gradle-작성"><span>build.gradle 작성</span></a></h3><p>다음은 SpringBoot를 gradle.build에 추가하는 내용이다.</p><div class="language-groovy line-numbers-mode" data-highlighter="prismjs" data-ext="groovy" data-title="groovy"><pre><code><span class="line">plugins <span class="token punctuation">{</span></span>
<span class="line">    id <span class="token string">&#39;org.springframework.boot&#39;</span> version <span class="token string">&#39;2.2.0.RELEASE&#39;</span></span>
<span class="line">    id <span class="token string">&#39;io.spring.dependency-management&#39;</span> version <span class="token string">&#39;1.0.8.RELEASE&#39;</span></span>
<span class="line">    id <span class="token string">&#39;java&#39;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// java version</span></span>
<span class="line">sourceCompatibility <span class="token operator">=</span> <span class="token string">&#39;1.8&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 프로젝트의 종속성을 구성합니다.</span></span>
<span class="line">configurations <span class="token punctuation">{</span></span>
<span class="line">    developmentOnly</span>
<span class="line">    runtimeClasspath <span class="token punctuation">{</span></span>
<span class="line">        extendsFrom developmentOnly</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// dependency를 maven에서 가져온다.</span></span>
<span class="line">repositories <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">mavenCentral</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">dependencies <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 의존성(jar)을 가져온다.</span></span>
<span class="line">    implementation <span class="token string">&#39;org.springframework.boot:spring-boot-starter-web&#39;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// test시에만 의존성을 가져온다.</span></span>
<span class="line">    <span class="token function">testImplementation</span><span class="token punctuation">(</span><span class="token string">&#39;org.springframework.boot:spring-boot-starter-test&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        exclude group<span class="token punctuation">:</span> <span class="token string">&#39;org.junit.vintage&#39;</span><span class="token punctuation">,</span> module<span class="token punctuation">:</span> <span class="token string">&#39;junit-vintage-engine&#39;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">test <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">useJUnitPlatform</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference"><span>Reference</span></a></h2>`,21),h={href:"https://docs.gradle.org/current/userguide/gradle_wrapper.html",target:"_blank",rel:"noopener noreferrer"},k={href:"https://effectivesquid.tistory.com/entry/Gradle-%EB%B9%8C%EB%93%9C%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B8%B0%EC%B4%88",target:"_blank",rel:"noopener noreferrer"},f={href:"https://kwonnam.pe.kr/wiki/gradle/wrapper",target:"_blank",rel:"noopener noreferrer"};function w(_,x){const a=p("ExternalLinkIcon");return r(),t("div",null,[m,n("p",null,[s("Gradle을 시작하기 이전에, Gradle을 "),n("a",g,[s("다운로드"),e(a)]),s(" 받아야 한다. 링크에서 원하는 버전을 다운받으면 된다. gradle을 다운 받은 다음, 원하는 위치로 옮긴 후 환경변수를 설정해야된다.")]),b,n("ul",null,[n("li",null,[n("a",h,[s("Gradle 공식 문서"),e(a)])]),n("li",null,[n("a",k,[s("Gradle 빌드 시스템 기초"),e(a)])]),n("li",null,[n("a",f,[s("Gradle Wrapper"),e(a)])])])])}const E=i(v,[["render",w],["__file","index.html.vue"]]),C=JSON.parse('{"path":"/Gradle/GradleWrapper/","title":"Gradle Wrapper","lang":"en-US","frontmatter":{"title":"Gradle Wrapper","description":"Gradle Wrapper는 Gradle을 각 개발자나 CI 서버에 깔지 않고, 프로젝트에 함께 포함시켜 배포할 수 있는 방법을 제공해준다.","sidebarDepth":2,"date":"2020-01-14T00:00:00.000Z","tag":"개발환경","thumbnail":"https://upload.wikimedia.org/wikipedia/commons/c/cb/Gradle_logo.png"},"headers":[{"level":2,"title":"Gradle Download","slug":"gradle-download","link":"#gradle-download","children":[{"level":3,"title":"Linux & MacOS","slug":"linux-macos","link":"#linux-macos","children":[]},{"level":3,"title":"Window","slug":"window","link":"#window","children":[]},{"level":3,"title":"설치 확인","slug":"설치-확인","link":"#설치-확인","children":[]}]},{"level":2,"title":"gradlew","slug":"gradlew","link":"#gradlew","children":[{"level":3,"title":"build.gradle 작성","slug":"build-gradle-작성","link":"#build-gradle-작성","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"updatedTime":1725359553000},"filePathRelative":"Gradle/GradleWrapper/README.md"}');export{E as comp,C as data};
