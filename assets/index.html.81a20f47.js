import{_ as e,r as o,o as c,c as i,a as n,b as t,e as s,d as p}from"./app.8f797ad7.js";var l="/TIL/assets/1.75515343.png",u="/TIL/assets/2.38712759.png",r="/TIL/assets/3.e6a3e087.png";const k={},d=n("h1",{id:"vanilla-javascript\u1105\u1169-react-usestate-hook-\u1106\u1161\u11AB\u1103\u1173\u11AF\u1100\u1175",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vanilla-javascript\u1105\u1169-react-usestate-hook-\u1106\u1161\u11AB\u1103\u1173\u11AF\u1100\u1175","aria-hidden":"true"},"#"),s(" Vanilla Javascript\uB85C React UseState Hook \uB9CC\uB4E4\uAE30")],-1),v=n("p",null,[s("\uBCF8 \uD3EC\uC2A4\uD2B8\uB294 React\uC758 "),n("code",null,"useState"),s(" Hook\uC758 \uC791\uB3D9\uBC29\uC2DD\uC5D0 \uB300\uD574 "),n("strong",null,"\uACE0\uBBFC\uD574\uBCF4\uACE0, \uAD6C\uD604\uD574\uBCF4\uACE0, \uCD5C\uC801\uD654"),s("\uD558\uB294 \uB0B4\uC6A9\uC744 \uB2E4\uB8F9\uB2C8\uB2E4.")],-1),m={class:"custom-container tip"},b=n("p",{class:"custom-container-title"},"\uC120\uD589\uD559\uC2B5",-1),g=n("p",null,"\uAD6C\uD604\uBD80 \uCF54\uB4DC\uB294 \uC544\uB798 \uD3EC\uC2A4\uD2B8\uC758 \uB0B4\uC6A9\uC744 \uBAA8\uB974\uBA74 \uC774\uD574\uD558\uAE30\uAC00 \uD798\uB4E4 \uC218 \uC788\uC2B5\uB2C8\uB2E4.",-1),h={href:"https://junilhwang.github.io/TIL/Javascript/Design/Vanilla-JS-Component/",target:"_blank",rel:"noopener noreferrer"},f=s("Vanilla Javascript\uB85C \uC6F9 \uCEF4\uD3EC\uB10C\uD2B8 \uB9CC\uB4E4\uAE30"),y={href:"https://junilhwang.github.io/TIL/Javascript/Design/Vanilla-JS-Store/",target:"_blank",rel:"noopener noreferrer"},w=s("Vanilla Javascript\uB85C \uC0C1\uD0DC\uAD00\uB9AC \uC2DC\uC2A4\uD15C \uB9CC\uB4E4\uAE30"),_={href:"https://junilhwang.github.io/TIL/Javascript/Design/Vanilla-JS-Virtual-DOM/",target:"_blank",rel:"noopener noreferrer"},x=s("Vanilla Javascript\uB85C \uAC00\uC0C1\uB3D4(VirtualDOM) \uB9CC\uB4E4\uAE30"),S=p(`<h2 id="_1-react\u110B\u1174-usestate" tabindex="-1"><a class="header-anchor" href="#_1-react\u110B\u1174-usestate" aria-hidden="true">#</a> 1. React\uC758 useState</h2><h3 id="_1-\u110B\u1174\u1106\u116E\u11AB\u110B\u1173\u11AF-\u1100\u1161\u11BD\u1100\u1175" tabindex="-1"><a class="header-anchor" href="#_1-\u110B\u1174\u1106\u116E\u11AB\u110B\u1173\u11AF-\u1100\u1161\u11BD\u1100\u1175" aria-hidden="true">#</a> (1) \uC758\uBB38\uC744 \uAC16\uAE30</h3><p>\uD544\uC790\uB294 React\uB97C \uC0AC\uC6A9\uD560 \uB54C hook api\uB4E4\uC744 \uBCF4\uBA74\uC11C \uD56D\uC0C1 \uC2E0\uAE30\uD588\uB2E4.</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">Counter</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \uB3D4\uC5D0\uC11C \uC9C1\uC811 \uD638\uCD9C\uD558\uAE30 \uC704\uD574 window(\uC804\uC5ED\uAC1D\uCCB4)\uC5D0 \uD560\uB2F9</span>
  window<span class="token punctuation">.</span><span class="token function-variable function">increment</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCount</span><span class="token punctuation">(</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;div&gt;
      &lt;strong&gt;count: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> &lt;/strong&gt;
      &lt;button onclick=&quot;increment()&quot;&gt;\uC99D\uAC00&lt;/button&gt;
    &lt;/div&gt;
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>useState\uB85C state\uC640 setState\uB97C \uB9CC\uB4E4 \uC218 \uC788\uB2E4.</li><li>500ms(0.5\uCD08)\uB9C8\uB2E4 setCount\uB97C \uC2E4\uD589\uD55C\uB2E4.</li><li>\uAC12\uC774 1\uC529 \uC99D\uAC00\uD55C\uB2E4.</li><li>setCount\uAC00 \uC2E4\uD589\uB418\uBA74 \uB2E4\uC2DC \uB80C\uB354\uB9C1\uC774 \uC2E4\uD589\uB41C\uB2E4.</li><li>\uB80C\uB354\uB9C1\uC774 \uC2E4\uD589\uB418\uBA74 Counter\uAC00 \uB2E4\uC2DC \uC2E4\uD589\uB420 \uAC83\uC774\uB2E4.</li><li><strong>Counter \uCEF4\uD3EC\uB10C\uD2B8\uAC00 \uB2E4\uC2DC \uC2E4\uD589\uB418\uC5B4\uB3C4 count\uC758 \uAC12\uC740 \uCD08\uAE30\uD654\uB418\uC9C0 \uC54A\uACE0 \uC720\uC9C0\uB41C\uB2E4.</strong></li></ol><p>\uD575\uC2EC\uC740 5\uBC88\uC758 \uB0B4\uC6A9\uC774\uB2E4. <u>\uCEF4\uD3EC\uB10C\uD2B8 \uD568\uC218\uAC00 \uB2E4\uC2DC \uC2E4\uD589 \uB418\uB354\uB77C\uB3C4 count\uC758 \uAC12\uC774 \uCD08\uAE30\uD654\uB418\uC9C0 \uC54A\uB294 \uB2E4\uB294 \uAC83\uC774\uB2E4.</u> \uC5B4\uB5BB\uAC8C \uC774\uAC8C \uAC00\uB2A5\uD560\uAE4C?</p><h3 id="_2-bottom-up-\u1107\u116E\u11AB\u1109\u1165\u11A8" tabindex="-1"><a class="header-anchor" href="#_2-bottom-up-\u1107\u116E\u11AB\u1109\u1165\u11A8" aria-hidden="true">#</a> (2) bottom - up \uBD84\uC11D</h3><p>\uBC11 \uBC14\uB2E5 \uBD80\uD130 \uCC28\uADFC\uCC28\uADFC <code>useState</code> \uC5D0 \uB300\uD574 \uBD84\uC11D\uD574\uBCF4\uC790.</p><p>\uC774\uBC88 \uC139\uC158\uC758 \uBAA9\uC801\uC740 <strong>count\uC758 \uAC12\uC774 \uC5B4\uB5BB\uAC8C \uCD08\uAE30\uD654\uB418\uC9C0 \uC54A\uACE0 \uC720\uC9C0 \uB418\uB294\uC9C0 \uC54C\uC544\uBCF4\uB294 \uAC83</strong>\uC774\uB2E4.</p><p>\uC77C\uB2E8 <code>Counter</code> \uCEF4\uD3EC\uB10C\uD2B8\uB97C \uB80C\uB354\uB9C1 \uD574\uC8FC\uB294 \uCF54\uB4DC\uB97C \uC791\uC131\uD574\uBCF4\uC790.</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token comment">/** HTML **/</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">/** Javascript **/</span>
<span class="token keyword">function</span> <span class="token function">useState</span> <span class="token punctuation">(</span><span class="token parameter">initState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">Counter</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  window<span class="token punctuation">.</span><span class="token function-variable function">increment</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCount</span><span class="token punctuation">(</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;div&gt;
      &lt;strong&gt;count: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> &lt;/strong&gt;
      &lt;button onclick=&quot;increment()&quot;&gt;\uC99D\uAC00&lt;/button&gt;
    &lt;/div&gt;
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">render</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> $app <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	$app<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token function">Counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC544\uB9C8\uB3C4 \uC774\uB7F0 \uD615\uD0DC\uC77C \uAC83\uC774\uB2E4.</p><p>React\uB97C \uC0AC\uC6A9\uD558\uB294 \uC0AC\uB78C\uB4E4\uC774\uB77C\uBA74, \uC704\uC758 \uCF54\uB4DC\uB97C \uBCF4\uACE0 <code>useState</code>\uC640 <code>render</code>\uC640\uC758 \uAD00\uACC4\uB97C \uC720\uCD94\uD560 \uC218 \uC788\uB2E4.</p><p><code>useState</code>\uB97C \uC2E4\uD589\uD558\uBA74 \uCCAB \uBC88\uC9F8 \uC778\uC790\uB294 <code>state</code>\uB97C \uBC18\uD658\uD558\uACE0, \uB450 \uBC88\uC9F8 \uC778\uC790\uB294 state\uB97C \uBCC0\uACBD\uD558\uB294 <code>setState</code>\uB97C \uBC18\uD658\uD558\uB2E4. \uADF8\uB9AC\uACE0 <code>setState</code> \uB97C \uC2E4\uD589\uD558\uBA74 <code>render</code>\uAC00 \uC2E4\uD589\uB41C\uB2E4.</p><p>\uADF8\uB798\uC11C \uB300\uB7B5 \uB2E4\uC74C\uACFC \uAC19\uC740 \uD615\uD0DC\uC758 \uCF54\uB4DC\uAC00 \uB420 \uAC83\uC774\uB2E4.</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token parameter">initState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> state <span class="token operator">=</span> initState<span class="token punctuation">;</span> <span class="token comment">// state\uB97C \uC815\uC758\uD55C\uB2E4.</span>
  <span class="token keyword">const</span> <span class="token function-variable function">setState</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">newState</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    state <span class="token operator">=</span> newState<span class="token punctuation">;</span> <span class="token comment">// \uC0C8\uB85C\uC6B4 state\uB97C \uD560\uB2F9\uD55C\uB2E4</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// render\uB97C \uC2E4\uD589\uD55C\uB2E4.</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span> state<span class="token punctuation">,</span> setState <span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>useState</code>\uB97C \uC2E4\uD589\uD558\uBA74 \uB0B4\uBD80\uC5D0 state\uB97C \uC815\uC758\uD558\uACE0, setState\uB97C \uC2E4\uD589\uD558\uBA74 \uB0B4\uBD80\uC5D0 \uC120\uC5B8\uB41C state\uB97C \uBCC0\uACBD\uD560 \uAC83\uC774\uB2E4. \uC989, \uD568\uC218\uAC00 \uC2E4\uD589\uB420 \uB54C \uB9C8\uB2E4 \uACB0\uAD6D state\uC758 \uAC12\uC740 <code>initState</code> \uB85C \uCD08\uAE30\uD654 \uB420 \uAC83\uC774\uB2E4.</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// state\uC5D0\uB294 \uD56D\uC0C1 1\uC774 \uB4E4\uC5B4\uAC04\uB2E4.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><iframe class="example-frame" width="100%" src="https://junilhwang.github.io/simple-use-state/01-make-state-frame/index.html"></iframe><p>\uACB0\uACFC\uBB3C\uC5D0\uC11C\uB3C4 \uD655\uC778\uD560 \uC218 \uC788\uB4EF\uC774, state\uC5D0\uB294 \uD56D\uC0C1 1\uC774 \uB4E4\uC5B4\uAC04\uB2E4.</p><p>\uADF8\uB798\uC11C <code>state</code>\uC758 \uAC12\uC740 \uB0B4\uBD80\uAC00 \uC544\uB2CC \uC678\uBD80\uC5D0\uC11C \uAD00\uB9AC\uD574\uC57C \uD55C\uB2E4.</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">let</span> state <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token parameter">initState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// state\uC5D0 \uAC12\uC774 \uC5C6\uC744 \uB54C\uB9CC \uCD08\uAE30\uD654\uB97C \uC9C4\uD589\uD55C\uB2E4.</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    state <span class="token operator">=</span> initState<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> <span class="token function-variable function">setState</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">newState</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    state <span class="token operator">=</span> newState<span class="token punctuation">;</span> <span class="token comment">// \uC0C8\uB85C\uC6B4 state\uB97C \uD560\uB2F9\uD55C\uB2E4</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// render\uB97C \uC2E4\uD589\uD55C\uB2E4.</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span> state<span class="token punctuation">,</span> setState <span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">Counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/*\uC0DD\uB7B5*/</span> <span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">render</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/*\uC0DD\uB7B5*/</span> <span class="token punctuation">}</span>

<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><div class="highlight-line">\xA0</div><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><iframe class="example-frame" width="100%" src="https://junilhwang.github.io/simple-use-state/02-only-one-state/index.html"></iframe><p>\uC798 \uC2E4\uD589\uB418\uACE0 \uC788\uB2E4.</p><p>\uADF8\uB7F0\uB370 \uB9CC\uC57D useState\uC640 Component\uAC00 \uC5EC\uB7EC \uAC1C\uB77C\uBA74 \uC5B4\uB5A8\uAE4C?</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">Counter</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  window<span class="token punctuation">.</span><span class="token function-variable function">increment</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCount</span><span class="token punctuation">(</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;div&gt;
      &lt;strong&gt;count: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> &lt;/strong&gt;
      &lt;button onclick=&quot;increment()&quot;&gt;\uC99D\uAC00&lt;/button&gt;
    &lt;/div&gt;
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">Cat</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>cat<span class="token punctuation">,</span> setCat<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;\uACE0\uC591\uC774&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  window<span class="token punctuation">.</span><span class="token function-variable function">meow</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCat</span><span class="token punctuation">(</span>cat <span class="token operator">+</span> <span class="token string">&#39; \uC57C\uC639!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;div&gt;
      &lt;strong&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>cat<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/strong&gt;
      &lt;button onclick=&quot;meow()&quot;&gt;\uACE0\uC591\uC774\uC758 \uC6B8\uC74C\uC18C\uB9AC&lt;/button&gt;
    &lt;/div&gt;
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">render</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  app<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;div&gt;
      </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">Counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
      </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">Cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
    &lt;/div&gt;
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><iframe class="example-frame" width="100%" src="https://junilhwang.github.io/simple-use-state/03-multi-state-bug/index.html"></iframe><p>\uD55C \uAC1C\uC758 state \uBCC0\uC218\uB85C \uB450 \uAC1C\uC758 state\uB97C \uAD00\uB9AC\uD558\uAE30 \uB54C\uBB38\uC5D0 count\uC640 cat\uC774 \uB611\uAC19\uC740 \uAC12\uC744 \uBCF4\uC5EC\uC8FC\uAC8C \uB41C\uB2E4.</p><p>\uC774\uB97C \uD574\uACB0\uD558\uAE30 \uC704\uD574\uC11C \uC678\uBD80\uC758 state \uAC2F\uC218\uB97C useState\uAC00 \uC2E4\uD589\uB418\uB294 \uD69F\uC218\uB9CC\uD07C \uB9CC\uB4E4\uC5B4\uC8FC\uBA74 \uB420 \uAC83\uC774\uB2E4.</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">let</span> currentStateKey <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// useState\uAC00 \uC2E4\uD589 \uB41C \uD69F\uC218</span>
<span class="token keyword">const</span> states <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// state\uB97C \uBCF4\uAD00\uD560 \uBC30\uC5F4</span>
<span class="token keyword">function</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token parameter">initState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// initState\uB85C \uCD08\uAE30\uAC12 \uC124\uC815</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>states<span class="token punctuation">.</span>length <span class="token operator">===</span> currentStateKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    states<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>initState<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// state \uD560\uB2F9</span>
  <span class="token keyword">const</span> state <span class="token operator">=</span> states<span class="token punctuation">[</span>currentStateKey<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">setState</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">newState</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// state\uB97C \uC9C1\uC811 \uC218\uC815\uD558\uB294 \uAC83\uC774 \uC544\uB2CC, states \uB0B4\uBD80\uC758 \uAC12\uC744 \uC218\uC815</span>
    states<span class="token punctuation">[</span>currentStateKey<span class="token punctuation">]</span> <span class="token operator">=</span> newState<span class="token punctuation">;</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  currentStateKey <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span> state<span class="token punctuation">,</span> setState <span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">Counter</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/*\uC0DD\uB7B5*/</span> <span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">Cat</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/*\uC0DD\uB7B5*/</span> <span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">render</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  app<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;div&gt;
      </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">Counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
      </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">Cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
    &lt;/div&gt;
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token comment">// \uC774 \uC2DC\uC810\uC5D0 currentStateKey\uB294 2\uAC00 \uB420 \uAC83\uC774\uB2E4.</span>
  <span class="token comment">// \uADF8\uB798\uC11C \uB2E4\uC2DC 0\uBD80\uD130 \uC811\uADFC\uD560 \uC218 \uC788\uB3C4\uB85D \uAC12\uC744 \uCD08\uAE30\uD654 \uD574\uC57C \uD55C\uB2E4.</span>
  currentStateKey <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><div class="highlight-line">\xA0</div><br><br><div class="highlight-line">\xA0</div><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><iframe class="example-frame" width="100%" src="https://junilhwang.github.io/simple-use-state/04-multi-state-success/index.html"></iframe><p>\uC5EC\uAE30\uAE4C\uC9C0\uAC00 <code>useState</code>\uC758 \uD575\uC2EC \uC6D0\uB9AC\uC774\uB2E4. \uC0DD\uAC01\uBCF4\uB2E4 \uAC04\uB2E8\uD558\uC9C0 \uC54A\uC740\uAC00?</p><div class="custom-container tip"><p class="custom-container-title">\uD074\uB85C\uC800</p><p>\uC0AC\uC2E4 \uC774\uAC74 <code>\uD074\uB85C\uC800</code>\uC5D0 \uB300\uD55C \uC774\uD574\uAC00 \uBA3C\uC800 \uD544\uC694\uD558\uB2E4. \uC9C1\uC811\uC801\uC73C\uB85C \uD074\uB85C\uC800\uB97C \uC0AC\uC6A9\uD558\uC9C4 \uC54A\uC558\uC9C0\uB9CC \uC720\uC0AC\uD55C \uAC1C\uB150\uC774\uB77C\uACE0 \uBCFC \uC218 \uC788\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">\uD074\uB85C\uC800</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> \uC8FD\uC9C0\uC54A\uB294_\uBCC0\uC218 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    \uC8FD\uC9C0\uC54A\uB294_\uBCC0\uC218 <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\uC8FD\uC9C0\uC54A\uB294_\uBCC0\uC218 : &#39;</span> <span class="token operator">+</span> \uC8FD\uC9C0\uC54A\uB294_\uBCC0\uC218<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> \uD074\uB85C\uC800\uB85C_\uB9CC\uB4E4\uC5B4\uC9C4_\uD568\uC218 <span class="token operator">=</span> <span class="token function">\uD074\uB85C\uC800</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">\uD074\uB85C\uC800\uB85C_\uB9CC\uB4E4\uC5B4\uC9C4_\uD568\uC218</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \uC8FD\uC9C0\uC54A\uB294_\uBCC0\uC218 : 1</span>
<span class="token function">\uD074\uB85C\uC800\uB85C_\uB9CC\uB4E4\uC5B4\uC9C4_\uD568\uC218</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \uC8FD\uC9C0\uC54A\uB294_\uBCC0\uC218 : 2</span>
<span class="token function">\uD074\uB85C\uC800\uB85C_\uB9CC\uB4E4\uC5B4\uC9C4_\uD568\uC218</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \uC8FD\uC9C0\uC54A\uB294_\uBCC0\uC218 : 3</span>
<span class="token function">\uD074\uB85C\uC800\uB85C_\uB9CC\uB4E4\uC5B4\uC9C4_\uD568\uC218</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \uC8FD\uC9C0\uC54A\uB294_\uBCC0\uC218 : 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>useState</code> \uD568\uC218\uC758 \uBC14\uAE65\uC5D0\uC11C <code>state</code>\uB97C \uAD00\uB9AC\uD558\uAE30 \uB54C\uBB38\uC5D0 <code>state</code>\uC758 \uAC12\uC774 \uC720\uC9C0\uB418\uB294 \uAC83\uC774\uB2E4.</p></div><h2 id="_2-usestate-\u110E\u116C\u110C\u1165\u11A8\u1112\u116A" tabindex="-1"><a class="header-anchor" href="#_2-usestate-\u110E\u116C\u110C\u1165\u11A8\u1112\u116A" aria-hidden="true">#</a> 2. useState \uCD5C\uC801\uD654</h2><p>\uC55E\uC120 \uACFC\uC815\uC740 <code>useState</code>\uAC00 <strong>\uAC12\uC744 \uBCF4\uC874\uD558\uB294 \uBC29\uBC95</strong>\uC5D0 \uB300\uD574 \uBD84\uC11D\uD574\uBCF4\uB294 \uB0B4\uC6A9\uC774\uC5C8\uB2E4. \uC774\uC81C useState\uB97C <strong>\uCD5C\uC801\uD654</strong> \uD574\uBCF4\uC790.</p><h3 id="_1-\u1107\u1167\u11AB\u1100\u1167\u11BC\u1103\u116C\u11AB-\u1100\u1161\u11B9\u110B\u1175-\u110B\u1165\u11B9\u110B\u1173\u11AF-\u1100\u1167\u11BC\u110B\u116E" tabindex="-1"><a class="header-anchor" href="#_1-\u1107\u1167\u11AB\u1100\u1167\u11BC\u1103\u116C\u11AB-\u1100\u1161\u11B9\u110B\u1175-\u110B\u1165\u11B9\u110B\u1173\u11AF-\u1100\u1167\u11BC\u110B\u116E" aria-hidden="true">#</a> (1) \uBCC0\uACBD\uB41C \uAC12\uC774 \uC5C6\uC744 \uACBD\uC6B0</h3><p>\uBA3C\uC800 \uACE0\uBBFC\uD574\uBCFC \uC218 \uC788\uB294 \uC0C1\uD669\uC740 <code>setState</code>\uC5D0 <code>state</code>\uC640 <strong>\uB3D9\uC77C\uD55C \uAC12</strong>\uC744 \uB123\uC5C8\uC744 \uACBD\uC6B0\uC774\uB2E4.</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">Counter</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  window<span class="token punctuation">.</span><span class="token function-variable function">nochange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCount</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// count\uC5D0 \uB611\uAC19\uC740 \uAC12\uC744 \uC0BD\uC785\uD55C\uB2E4.</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;div&gt;
      &lt;strong&gt;count: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> &lt;/strong&gt;
      &lt;button onclick=&quot;nochange()&quot;&gt;\uBCC0\uD654\uC5C6\uC74C&lt;/button&gt;
    &lt;/div&gt;
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> renderCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">render</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> $app <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  $app<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;div&gt;
      renderCount: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>renderCount<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
      </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">Counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
    &lt;/div&gt;
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  currentStateKey <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  renderCount <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><iframe class="example-frame" width="100%" src="https://junilhwang.github.io/simple-use-state/05-no-state-change/index.html"></iframe><p>\uAC12\uC740 \uB611\uAC19\uC740\uB370 <strong>render\uB294 \uACC4\uC18D \uC2E4\uD589</strong>\uD558\uACE0 \uC788\uB2E4.</p><p>\uC774\uB7F4 \uB54C\uB294 \uB80C\uB354\uB9C1\uC774 \uB418\uC9C0 \uC54A\uB3C4\uB85D <strong>\uBC29\uC9C0</strong>\uD574\uC57C\uD55C\uB2E4.</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token parameter">initState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// initState\uB85C \uCD08\uAE30\uAC12 \uC124\uC815</span>
  <span class="token keyword">const</span> key <span class="token operator">=</span> currentStateKey<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>states<span class="token punctuation">.</span>length <span class="token operator">===</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    states<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>initState<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// state \uD560\uB2F9</span>
  <span class="token keyword">const</span> state <span class="token operator">=</span> states<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">setState</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">newState</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \uAC12\uC774 \uB611\uAC19\uC740 \uACBD\uC6B0</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newState <span class="token operator">===</span> state<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    
    <span class="token comment">// \uBC30\uC5F4/\uAC1D\uCCB4\uC77C \uB54C\uB294 JSON.stringify\uB97C \uD1B5\uD574 \uAC04\uB2E8\uD558\uAC8C \uBE44\uAD50\uD560 \uC218 \uC788\uB2E4.</span>
    <span class="token comment">// \uADF8\uB7F0\uB370 Set, Map, WeekMap, Symbol \uAC19\uC740 \uC6D0\uC2DC\uD0C0\uC785\uC758 \uACBD\uC6B0</span>
    <span class="token comment">// JSON\uC73C\uB85C \uD30C\uC2F1\uB418\uC9C0 \uC54A\uAE30 \uB54C\uBB38\uC5D0 \uC8FC\uC758\uD574\uC57C\uD55C\uB2E4.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>newState<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

		<span class="token comment">// \uAE30\uC874 \uAC12\uACFC \uB2E4\uB978 \uACBD\uC6B0\uC5D0\uB9CC \uAC12\uC744 \uBCC0\uACBD\uD558\uACE0 render()\uB97C \uC2E4\uD589\uD55C\uB2E4.</span>
    states<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> newState<span class="token punctuation">;</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  currentStateKey <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span> state<span class="token punctuation">,</span> setState <span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><iframe class="example-frame" width="100%" src="https://junilhwang.github.io/simple-use-state/06-dont-render-no-change/index.html"></iframe><p>\uC774\uC81C \uAC12\uC774 \uB611\uAC19\uC744 \uACBD\uC6B0\uC5D0\uB294 \uB80C\uB354\uB9C1\uC774 \uB418\uC9C0 \uC54A\uB294\uB2E4.</p><h3 id="_2-\u1103\u1169\u11BC\u1109\u1175\u110B\u1166-\u110B\u1167\u1105\u1165-setstate\u1100\u1161-\u1109\u1175\u11AF\u1112\u1162\u11BC\u1103\u116C\u11AF-\u1100\u1167\u11BC\u110B\u116E" tabindex="-1"><a class="header-anchor" href="#_2-\u1103\u1169\u11BC\u1109\u1175\u110B\u1166-\u110B\u1167\u1105\u1165-setstate\u1100\u1161-\u1109\u1175\u11AF\u1112\u1162\u11BC\u1103\u116C\u11AF-\u1100\u1167\u11BC\u110B\u116E" aria-hidden="true">#</a> (2) \uB3D9\uC2DC\uC5D0 \uC5EC\uB7EC setState\uAC00 \uC2E4\uD589\uB420 \uACBD\uC6B0</h3><p>\uC77C\uB2E8 \uB2E4\uC74C\uACFC \uAC19\uC774 \uD558\uB098\uC758 \uD568\uC218\uC5D0 <code>setState</code>\uAC00 \uB450 \uBC88 \uC0AC\uC6A9 \uB418\uB294 \uACBD\uC6B0\uAC00 \uC788\uB2E4.</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">CounterAndMeow</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>cat<span class="token punctuation">,</span> setCat<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;\uC57C\uC639! &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">countMeow</span> <span class="token punctuation">(</span><span class="token parameter">newCount</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setCount</span><span class="token punctuation">(</span>newCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setCat</span><span class="token punctuation">(</span><span class="token string">&#39;\uC57C\uC639! &#39;</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span>newCount<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  window<span class="token punctuation">.</span><span class="token function-variable function">increment</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">countMeow</span><span class="token punctuation">(</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  window<span class="token punctuation">.</span><span class="token function-variable function">decrement</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">countMeow</span><span class="token punctuation">(</span>count <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;div&gt;
      &lt;p&gt;\uACE0\uC591\uC774\uAC00 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\uBC88 \uC6B8\uC5B4\uC11C </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>cat<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> &lt;/p&gt;
      &lt;button onclick=&quot;increment()&quot;&gt;\uC99D\uAC00&lt;/button&gt;
      &lt;button onclick=&quot;decrement()&quot;&gt;\uAC10\uC18C&lt;/button&gt;
    &lt;/div&gt;
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> renderCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">render</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> $app <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  $app<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;div&gt;
      </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>renderCount<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
      </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">CounterAndMeow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
    &lt;/div&gt;
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  renderCount <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  currentStateKey <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><iframe class="example-frame" width="100%" src="https://junilhwang.github.io/simple-use-state/07-unnecessary-render/index.html"></iframe><p><code>countMeow</code> \uB97C \uC2E4\uD589\uD560 \uB54C \uB9C8\uB2E4 <code>render</code>\uB294 2\uBC88 \uC2E4\uD589\uB41C\uB2E4. \uC989, \uBE44\uD6A8\uC728\uC801\uC774\uB2E4.</p><p>\uC774\uB97C \uD574\uACB0\uD560 \uC218 \uC788\uB294 \uBC29\uBC95 \uC911 \uD558\uB098\uAC00 <code>debounce</code> \uB97C \uC774\uC6A9\uD558\uB294 \uAC83\uC774\uB2E4.</p><p>\uC8FC\uC808\uC8FC\uC808 \uC124\uBA85\uD558\uAE30\uBCF4\uB2E8, \uCF54\uB4DC\uB85C \uC0B4\uD3B4\uBCF4\uC790.</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">debounce</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> timer <span class="token operator">=</span> <span class="token number">0</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> currentCallbackTimer <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>

  <span class="token comment">// \uD074\uB85C\uC800\uB97C \uC774\uC6A9\uD558\uAE30 \uC704\uD574 debounce\uB97C \uC2E4\uD589\uD558\uBA74 \uD568\uC218\uB97C \uBC18\uD658\uD55C\uB2E4.</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    count <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token comment">// \uC2E4\uD589\uC774 \uC608\uC57D\uB41C \uD568\uC218(callback)\uAC00 \uC788\uC744 \uACBD\uC6B0 \uCE94\uC2AC\uD55C\uB2E4.</span>
    <span class="token function">clearTimeout</span><span class="token punctuation">(</span>currentCallbackTimer<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// \uD2B9\uC815\uC2DC\uAC04(timer) \uD6C4\uC5D0 callback\uC774 \uC2E4\uD589\uB418\uB3C4\uB85D \uD55C\uB2E4.</span>
    currentCallbackTimer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>callback<span class="token punctuation">,</span> timer<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> \uC57C\uC639 <span class="token operator">=</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\uC57C\uC639&#39;</span> <span class="token operator">+</span> count<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">\uC57C\uC639</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \uC2E4\uD589 \uCDE8\uC18C</span>
<span class="token function">\uC57C\uC639</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \uC2E4\uD589 \uCDE8\uC18C</span>
<span class="token function">\uC57C\uC639</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \uC2E4\uD589 \uCDE8\uC18C</span>
<span class="token function">\uC57C\uC639</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \uC2E4\uD589</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>\uC57C\uC639<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \uC2E4\uD589</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+l+`" alt="1"></p><ul><li>\uC77C\uBC18\uC801\uC73C\uB85C \uC6B0\uB9AC\uAC00 \uC0AC\uC6A9\uD558\uB294 \uBAA8\uB2C8\uD130\uC758 \uC8FC\uC0AC\uC728\uC740 <strong>60\uD504\uB808\uC784</strong>\uC774\uB2E4.</li><li>\uC989, <strong>1\uCD08\uC5D0 60\uBC88\uC758 \uBCC0\uD654\uAC00 \uBC1C\uC0DD\uD558\uB294 \uAC83</strong>\uC774\uB2E4.</li><li>\uB530\uB77C\uC11C 1\uD504\uB808\uC784 \uC774\uB0B4\uB85C \uBC1C\uC0DD\uD558\uB294 \uBAA8\uB4E0 \uBCC0\uD654\uB97C \uBAA8\uC544\uC11C \uC2E4\uD589\uC2DC\uCF1C\uC8FC\uBA74 \uC5B4\uB5A8\uAE4C?</li><li>render\uAC00 <strong>1\uCD08\uC5D0 \uCD5C\uB300 60\uBC88\uB9CC \uC2E4\uD589\uB418\uBA74 \uB418\uB3C4\uB85D</strong> \uB9CC\uB4E4\uBA74 \uB418\uC9C0 \uC54A\uC744\uAE4C?</li></ul><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\uC2E4\uD589&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1\uCD08\uC5D0 60\uBC88 \uC2E4\uD589\uB41C\uB2E4.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\uC774 \uB54C \uC774\uC6A9\uD560 \uC218 \uC788\uB294 API\uAC00 \uBC14\uB85C <code>requestAnimationFrame</code> \uC774\uB2E4.</p><ul><li><code>requestAnimationFrame(callback)</code>\uC740 \uBE0C\uB77C\uC6B0\uC800\uC5D0\uAC8C \uC218\uD589\uD558\uAE30\uB97C \uC6D0\uD558\uB294 \uC560\uB2C8\uBA54\uC774\uC158\uC744 \uC54C\uB9AC\uACE0, \uB2E4\uC74C \uB9AC\uD398\uC778\uD2B8\uAC00 \uC9C4\uD589\uB418\uAE30 \uC804\uC5D0 \uC778\uC790\uB85C \uB118\uACA8\uC9C4 <code>callback</code>\uD568\uC218\uB97C \uD638\uCD9C\uD55C\uB2E4.</li><li>\uC77C\uBC18\uC801\uC73C\uB85C requestAnimationFrame\uC774 <strong>1\uCD08\uB3D9\uC548 \uC2E4\uD589\uB418\uB294 \uD69F\uC218</strong>\uB294 \uB300\uBD80\uBD84\uC758 \uBE0C\uB77C\uC6B0\uC800\uC5D0\uC11C\uB294 W3C \uAD8C\uC7A5\uC0AC\uD56D\uC5D0 \uB530\uB77C <strong>\uB514\uC2A4\uD50C\uB808\uC774 \uC8FC\uC0AC\uC728\uACFC \uC77C\uCE58</strong>\uD558\uAC8C \uB41C\uB2E4. <ul><li>60Hz -&gt; 1\uCD08\uC5D0 60\uD68C</li><li>144Hz -&gt; 1\uCD08\uC5D0 144\uD68C</li><li>240Hz -&gt; 1\uCD08\uC5D0 240\uD68C</li></ul></li></ul><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">const</span> fn <span class="token operator">=</span> <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\uC2E4\uD589&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// fn\uC740 1\uCD08\uC5D0 60\uBC88 \uC2E4\uD589\uB41C\uB2E4.</span>
<span class="token comment">// \uB9CC\uC57D \uBAA8\uB2C8\uD130\uC758 \uC8FC\uC0AC\uC728\uC774 144HZ \uC77C \uACBD\uC6B0, 1\uCD08\uC5D0 144\uBC88 \uC2E4\uD589\uB420 \uAC83\uC774\uB2E4.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC5B4\uCA0C\uB4E0 \uB2E4\uC2DC <code>requestAnimationFrame</code>\uC744 \uC774\uC6A9\uD558\uC5EC debounce\uB97C \uB2E4\uC2DC \uB9CC\uB4E4\uC5B4\uBCF4\uC790.</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">debounceFrame</span> <span class="token operator">=</span> <span class="token parameter">callback</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> nextFrameCallback <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>

  <span class="token comment">// \uD074\uB85C\uC800\uB97C \uC774\uC6A9\uD558\uAE30 \uC704\uD574 debounce\uB97C \uC2E4\uD589\uD558\uBA74 \uD568\uC218\uB97C \uBC18\uD658\uD55C\uB2E4.</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    count <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token comment">// \uC2E4\uD589\uC774 \uC608\uC57D\uB41C \uD568\uC218(callback)\uAC00 \uC788\uC744 \uACBD\uC6B0 \uCE94\uC2AC\uD55C\uB2E4.</span>
    <span class="token function">cancelAnimationFrame</span><span class="token punctuation">(</span>nextFrameCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// \uD2B9\uC815\uC2DC\uAC04(timer) \uD6C4\uC5D0 callback\uC774 \uC2E4\uD589\uB418\uB3C4\uB85D \uD55C\uB2E4.</span>
    nextFrameCallback <span class="token operator">=</span> <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> \uC57C\uC639 <span class="token operator">=</span> <span class="token function">debounceFrame</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\uC57C\uC639&#39;</span> <span class="token operator">+</span> count<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">\uC57C\uC639</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \uC2E4\uD589 \uCDE8\uC18C</span>
<span class="token function">\uC57C\uC639</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \uC2E4\uD589 \uCDE8\uC18C</span>
<span class="token function">\uC57C\uC639</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \uC2E4\uD589 \uCDE8\uC18C</span>
<span class="token function">\uC57C\uC639</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \uC2E4\uD589</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>\uC57C\uC639<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \uC2E4\uD589</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+u+'" alt="2"></p><p>\uC0AC\uC2E4 <code>setTimeout</code>\uC744 \uC0AC\uC6A9\uD558\uB294 \uAC83\uACFC \uD06C\uAC8C \uB2E4\uB974\uC9C0 \uC54A\uB2E4.</p>',62),j={class:"custom-container tip"},C=n("p",{class:"custom-container-title"},"\uC774\uBCA4\uD2B8\uB8E8\uD504",-1),q=n("li",null,[s("setTimeout\uACFC requestAnimationFrame\uC774 "),n("strong",null,"\uC2E4\uD589\uB418\uB294 \uC2DC\uC810"),s("\uC5D0 \uB300\uD574 \uC815\uD655\uD558\uAC8C \uC774\uD574\uD558\uAE30 \uC704\uD574\uC120 "),n("code",null,"\uC774\uBCA4\uD2B8 \uB8E8\uD504"),s(" \uB77C\uB294 \uAC1C\uB150\uC5D0 \uB300\uD574 \uC54C\uC544\uC57C\uD55C\uB2E4.")],-1),M=s("\uC774\uC5D0 \uB300\uD55C \uB0B4\uC6A9\uC740 "),F={href:"https://meetup.toast.com/posts/89",target:"_blank",rel:"noopener noreferrer"},A=s("\uC790\uBC14\uC2A4\uD06C\uB9BD\uD2B8\uC640 \uC774\uBCA4\uD2B8 \uB8E8\uD504 | NHN Clound Meetup"),$=s(" \uC544\uD2F0\uD074\uC5D0 \uC790\uC138\uD788 \uB098\uC640\uC788\uC73C\uB2C8 \uCC38\uACE0\uD558\uBA74 \uB420 \uAC83 \uAC19\uB2E4."),K=p(`<p>\uC774\uB7EC\uD55C \uB0B4\uC6A9\uC744 \uBC14\uD0D5\uC73C\uB85C \uB9AC\uD329\uD1A0\uB9C1\uC744 \uC9C4\uD589\uD574\uBCF4\uC790.</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">debounceFrame</span> <span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> nextFrameCallback <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">cancelAnimationFrame</span><span class="token punctuation">(</span>nextFrameCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    nextFrameCallback <span class="token operator">=</span> <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> renderCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> render <span class="token operator">=</span> <span class="token function">debounceFrame</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> $app <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  $app<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;div&gt;
      renderCount: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>renderCount<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
      </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">CounterAndMeow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
    &lt;/div&gt;
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  renderCount <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  currentStateKey <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC0AC\uC2E4 <code>debounce</code>\uB294 <code>useState</code>\uC5D0 \uC801\uC6A9\uD558\uAE30\uBCF4\uB2E8 <code>render</code>\uC5D0 \uC801\uC6A9\uD558\uB294\uAC8C \uB354 \uC27D\uACE0 \uC9C1\uAD00\uC801\uC774\uB2E4.</p><iframe class="example-frame" width="100%" src="https://junilhwang.github.io/simple-use-state/08-refactor-rendering-by-debounce/index.html"></iframe><p>\uC77C\uB2E8 \uC774\uC815\uB3C4\uB9CC \uC801\uC6A9\uD574\uB3C4 <code>useState</code>\uB97C \uC774\uC6A9\uD558\uB294\uB370 \uD070 \uC5B4\uB824\uC6C0\uC740 \uC5C6\uC73C\uB9AC\uB77C \uC0DD\uAC01\uD55C\uB2E4.</p><h2 id="_3-render-\u1112\u1161\u11B7\u1109\u116E-\u110E\u116E\u1109\u1161\u11BC\u1112\u116A" tabindex="-1"><a class="header-anchor" href="#_3-render-\u1112\u1161\u11B7\u1109\u116E-\u110E\u116E\u1109\u1161\u11BC\u1112\u116A" aria-hidden="true">#</a> 3. render \uD568\uC218 \uCD94\uC0C1\uD654</h2><ul><li>\uC774\uC81C \uB05D\uC778\uC904 \uC54C\uC558\uB2E4\uBA74 \uB9E4\uC6B0 \uD070 \uC624\uC0B0!</li><li>useState\uB294 \uD544\uC5F0\uC801\uC73C\uB85C render\uC640 \uAC19\uC774 \uC0AC\uC6A9\uB41C\uB2E4.</li><li><s>\uC544\uC8FC \uADF8\uB0E5 \uCC9C\uC0DD\uC5F0\uBD84\uC774\uB2E4.</s></li><li>\uB458 \uC0AC\uC774\uB97C \uC678\uBD80\uC5D0\uC11C \uAC04\uC12D\uD558\uC9C0 \uBABB\uD558\uAC8C \uD568\uC218\uB85C \uBCF4\uD638\uD574\uC8FC\uC790.</li></ul><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">MyReact</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">useState</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">render</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> render <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> render <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">MyReact</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC774\uB807\uAC8C \uC0AC\uC6A9\uD560 \uACBD\uC6B0 <strong>useState\uC640 render\uB294 \uB0B4\uBD80\uC801\uC73C\uB85C \uC5EE\uAE30\uAC00 \uB354 \uC26C\uC6CC\uC9C4\uB2E4.</strong> \uB2E4\uB978 \uBCC0\uC218\uB4E4\uB3C4 \uCD94\uAC00\uD574\uBCF4\uC790.</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">MyReact</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> currentStateKey <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> states <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">useState</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token keyword">let</span> renderCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">render</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> render <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> render <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">MyReact</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC774\uB807\uAC8C \uD558\uBA74 <code>currentStateKey</code>\uC640 <code>renderCount</code>\uB294 \uD568\uC218 \uB0B4\uBD80\uC5D0\uC11C\uB9CC \uC0AC\uC6A9\uD560 \uC218 \uC788\uB2E4. <code>useState</code>\uC640 <code>render</code>\uC5D0\uC11C\uB9CC \uC811\uADFC \uAC00\uB2A5\uD55C \uAC83\uC774\uB2E4.</p><p>\uB2E4\uC2DC \uB0B4\uC6A9\uC744 \uCC44\uC6CC\uBCF4\uC790.</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">MyReact</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \uB0B4\uBD80\uC5D0\uC11C \uC0AC\uC6A9\uB418\uB294 \uBCC0\uC218\uB294 options\uC5D0 \uBAA8\uC544\uB193\uAE30</span>
  <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">currentStateKey</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token literal-property property">renderCount</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token literal-property property">states</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token parameter">initState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> key <span class="token operator">=</span> options<span class="token punctuation">.</span>currentStateKey<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>states<span class="token punctuation">.</span>length <span class="token operator">===</span> key<span class="token punctuation">)</span> states<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>initState<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> state <span class="token operator">=</span> states<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token function-variable function">setState</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">newState</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      states<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> newState<span class="token punctuation">;</span>
      <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    options<span class="token punctuation">.</span>currentStateKey <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span> state<span class="token punctuation">,</span> setState <span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">render</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> render <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> render <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">MyReact</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uB208\uCE58\uBE60\uB978 \uC0AC\uB78C\uB4E4(?)\uC740 <code>render</code>\uAC00 \uC774\uC804 \uCC98\uB7FC \uC0AC\uC6A9\uB420 \uC218 \uC5C6\uC73C\uB9AC\uB77C\uB294 \uAC83\uC744 \uC54C\uC558\uC744 \uAC83\uC774\uB2E4.</p><p>\uC774\uC81C <code>render</code>\uB294 \uB2E4\uC74C\uACFC \uAC19\uC774 \uC0AC\uC6A9\uB418\uC5B4\uC57C \uD55C\uB2E4.</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> render <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">MyReact</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  &lt;div&gt;
    </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">CounterAndMeow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
  &lt;/div&gt;
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token function">render</span><span class="token punctuation">(</span>App<span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><div class="highlight-line">\xA0</div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),T=s("\uC0AC\uC2E4 \uC704\uC758 \uCF54\uB4DC\uB294 "),R={href:"https://ko.reactjs.org/docs/hello-world.html",target:"_blank",rel:"noopener noreferrer"},H=s("React\uC758 HelloWorld"),L=s(" \uCF54\uB4DC\uC640 \uB611\uAC19\uB2E4."),J=p('<p><img src="'+r+`" alt="3"></p><p>\uC5B4\uCA0C\uB4E0 <code>render</code>\uB97C \uD55C \uBC88 \uAD6C\uC131\uD574\uBCF4\uC790.</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">MyReact</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \uB0B4\uBD80\uC5D0\uC11C \uC0AC\uC6A9\uB418\uB294 \uBCC0\uC218\uB294 options\uC5D0 \uBAA8\uC544\uB193\uAE30</span>
  <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">currentStateKey</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token literal-property property">renderCount</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token literal-property property">states</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> 
    <span class="token literal-property property">rootComponent</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token parameter">initState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/*\uC0DD\uB7B5*/</span><span class="token punctuation">}</span>
  
  <span class="token comment">// render\uB294 \uC77C\uC885\uC758 \uBC14\uC9C0\uC0AC\uC7A5\uC774\uB77C\uACE0 \uBCF4\uBA74 \uB420 \uAC83 \uAC19\uB2E4.</span>
  <span class="token keyword">function</span> <span class="token function">render</span> <span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> rootComponent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    options<span class="token punctuation">.</span>root <span class="token operator">=</span> root<span class="token punctuation">;</span>
    options<span class="token punctuation">.</span>rootComponent <span class="token operator">=</span> rootComponent<span class="token punctuation">;</span>
    <span class="token function">_render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \uB0B4\uBD80\uC801\uC73C\uB85C _render\uB97C \uC774\uC6A9\uD558\uC5EC \uC0C1\uD0DC\uBCC0\uD654\uC5D0 \uB300\uC751\uD55C\uB2E4.</span>
	<span class="token keyword">const</span> _render <span class="token operator">=</span> <span class="token function">debounceFrame</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> root<span class="token punctuation">,</span> rootComponent <span class="token punctuation">}</span> <span class="token operator">=</span> options<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root <span class="token operator">||</span> <span class="token operator">!</span>rootComponent<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    root<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token function">rootComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    options<span class="token punctuation">.</span>currentStateKey <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    options<span class="token punctuation">.</span>renderCount <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> render <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>_render</code>\uB77C\uB294 \uBE44\uC120\uC2E4\uC138(?)\uAC00 <code>render</code>\uB77C\uB294 \uBC14\uC9C0\uC0AC\uC7A5\uC744 \uC138\uC6CC\uB193\uACE0 \uC77C\uD558\uB294 \uAC83\uC774\uB2E4.</p>`,4),V=s("\uCD5C\uADFC\uC5D0 "),I={href:"http://program.tving.com/tvn/tvnvincenzo",target:"_blank",rel:"noopener noreferrer"},N=s("\uB4DC\uB77C\uB9C8 \uBE48\uC13C\uC870"),O=s("\uB97C \uC7AC\uBC0C\uAC8C \uBD24\uB294\uB370,"),D=p(`<ul><li><code>render</code>\uB294 <code>\uC7A5\uD55C\uC11C</code>\uACE0</li><li><code>_render</code>\uB294 <code>\uC7A5\uC900\uC6B0</code> \uB77C\uACE0 \uBCF4\uBA74 \uB420 \uAC83 \uAC19\uB2E4.</li><li>\uBE44\uC720\uAC00 \uC880 \uC774\uC0C1\uD55C\uAC00?</li></ul><p>\uC774\uC81C <code>useState</code>\uC758 \uCF54\uB4DC\uB3C4 \uC870\uAE08 \uBCC0\uACBD\uD574\uC57C\uD55C\uB2E4.</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">useState</span> <span class="token punctuation">(</span><span class="token parameter">initState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">currentStateKey</span><span class="token operator">:</span> key<span class="token punctuation">,</span> states <span class="token punctuation">}</span> <span class="token operator">=</span> options<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>states<span class="token punctuation">.</span>length <span class="token operator">===</span> key<span class="token punctuation">)</span> states<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>initState<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> state <span class="token operator">=</span> states<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">setState</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">newState</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    states<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> newState<span class="token punctuation">;</span>
    <span class="token function">_render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \uC0AC\uC2E4 \uC774 \uBD80\uBD84\uB9CC \uBCC0\uACBD\uB418\uBA74 \uB41C\uB2E4.</span>
  <span class="token punctuation">}</span>
  options<span class="token punctuation">.</span>currentStateKey <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span> state<span class="token punctuation">,</span> setState <span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC804\uCCB4\uC801\uC778 \uCF54\uB4DC\uB294 \uB2E4\uC74C\uACFC \uAC19\uB2E4.</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">MyReact</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">currentStateKey</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token literal-property property">renderCount</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token literal-property property">states</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token literal-property property">rootComponent</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">useState</span> <span class="token punctuation">(</span><span class="token parameter">initState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">currentStateKey</span><span class="token operator">:</span> key<span class="token punctuation">,</span> states <span class="token punctuation">}</span> <span class="token operator">=</span> options<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>states<span class="token punctuation">.</span>length <span class="token operator">===</span> key<span class="token punctuation">)</span> states<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>initState<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> state <span class="token operator">=</span> states<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token function-variable function">setState</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">newState</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      states<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> newState<span class="token punctuation">;</span>
      <span class="token function">_render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    options<span class="token punctuation">.</span>currentStateKey <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span> state<span class="token punctuation">,</span> setState <span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> _render <span class="token operator">=</span> <span class="token function">debounceFrame</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> root<span class="token punctuation">,</span> rootComponent <span class="token punctuation">}</span> <span class="token operator">=</span> options<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root <span class="token operator">||</span> <span class="token operator">!</span>rootComponent<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    root<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token function">rootComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    options<span class="token punctuation">.</span>currentStateKey <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    options<span class="token punctuation">.</span>renderCount <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">render</span> <span class="token punctuation">(</span><span class="token parameter">rootComponent<span class="token punctuation">,</span> root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    options<span class="token punctuation">.</span>root <span class="token operator">=</span> root<span class="token punctuation">;</span>
    options<span class="token punctuation">.</span>rootComponent <span class="token operator">=</span> rootComponent<span class="token punctuation">;</span>
    <span class="token function">_render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> render <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> render <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">MyReact</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">CounterAndMeow</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>cat<span class="token punctuation">,</span> setCat<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;\uC57C\uC639! &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">countMeow</span> <span class="token punctuation">(</span><span class="token parameter">newCount</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setCount</span><span class="token punctuation">(</span>newCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setCat</span><span class="token punctuation">(</span><span class="token string">&#39;\uC57C\uC639! &#39;</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span>newCount<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  window<span class="token punctuation">.</span><span class="token function-variable function">increment</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">countMeow</span><span class="token punctuation">(</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  window<span class="token punctuation">.</span><span class="token function-variable function">decrement</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">countMeow</span><span class="token punctuation">(</span>count <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;div&gt;
      &lt;p&gt;\uACE0\uC591\uC774\uAC00 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\uBC88 \uC6B8\uC5B4\uC11C </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>cat<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> &lt;/p&gt;
      &lt;button onclick=&quot;increment()&quot;&gt;\uC99D\uAC00&lt;/button&gt;
      &lt;button onclick=&quot;decrement()&quot;&gt;\uAC10\uC18C&lt;/button&gt;
    &lt;/div&gt;
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">debounceFrame</span> <span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> nextFrameCallback <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">cancelAnimationFrame</span><span class="token punctuation">(</span>nextFrameCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    nextFrameCallback <span class="token operator">=</span> <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  &lt;div&gt;
    </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">CounterAndMeow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
  &lt;/div&gt;
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

<span class="token function">render</span><span class="token punctuation">(</span>App<span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><iframe class="example-frame" width="100%" src="https://junilhwang.github.io/simple-use-state/09-abstract-render/index.html"></iframe><p>\uC704\uC640 \uAC19\uC774 \uC798 \uC791\uB3D9\uD558\uB294 \uAC83\uC744 \uD655\uC778\uD560 \uC218 \uC788\uB2E4.</p><h2 id="_4-\u1106\u1169\u1103\u1172\u11AF\u1112\u116A" tabindex="-1"><a class="header-anchor" href="#_4-\u1106\u1169\u1103\u1172\u11AF\u1112\u116A" aria-hidden="true">#</a> 4. \uBAA8\uB4C8\uD654</h2><p>\uC774\uC81C \uBAA8\uB4C8\uD654\uB97C \uD574\uBCF4\uC790. \uC804\uCCB4\uC801\uC778 \uB514\uB809\uD1A0\uB9AC \uAD6C\uC131\uC740 \uB2E4\uC74C\uACFC \uAC19\uB2E4.</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token punctuation">.</span>
\u251C\u2500 src
\u2502   \u251C\u2500 components
\u2502   \u2502  \u2514\u2500 CounterAndMeow<span class="token punctuation">.</span>js
\u2502   \u251C\u2500 core
\u2502   \u2502  \u2514\u2500 MyReact<span class="token punctuation">.</span>js
\u2502   \u251C\u2500 utils
\u2502   \u2502  \u2514\u2500 debounceFrame<span class="token punctuation">.</span>js
\u2502   \u251C\u2500 App<span class="token punctuation">.</span>js
\u2502   \u2514\u2500 main<span class="token punctuation">.</span>js
\u2514\u2500 index<span class="token punctuation">.</span>html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>/index.html</code></p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>MyReact App<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./src/main.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>/src/main.js</code></p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> render <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./core/MyReact.js&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> App <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./App.js&quot;</span><span class="token punctuation">;</span>

<span class="token function">render</span><span class="token punctuation">(</span>App<span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>/src/App.js</code></p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> CounterAndMeow <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./components/CounterAndMeow.js&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  &lt;div&gt;
    </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">CounterAndMeow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
  &lt;/div&gt;
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>/src/utils/debounceFrame.js</code></p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">debounceFrame</span> <span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> nextFrameCallback <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">cancelAnimationFrame</span><span class="token punctuation">(</span>nextFrameCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    nextFrameCallback <span class="token operator">=</span> <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>/src/core/MyReact.js</code></p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> debounceFrame <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../utils/debounceFrame.js&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">MyReact</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">currentStateKey</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token literal-property property">renderCount</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token literal-property property">states</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token literal-property property">rootComponent</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">useState</span> <span class="token punctuation">(</span><span class="token parameter">initState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">currentStateKey</span><span class="token operator">:</span> key<span class="token punctuation">,</span> states <span class="token punctuation">}</span> <span class="token operator">=</span> options<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>states<span class="token punctuation">.</span>length <span class="token operator">===</span> key<span class="token punctuation">)</span> states<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>initState<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> state <span class="token operator">=</span> states<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token function-variable function">setState</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">newState</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      states<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> newState<span class="token punctuation">;</span>
      <span class="token function">_render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    options<span class="token punctuation">.</span>currentStateKey <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>\u3147
    <span class="token keyword">return</span> <span class="token punctuation">[</span> state<span class="token punctuation">,</span> setState <span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> _render <span class="token operator">=</span> <span class="token function">debounceFrame</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> root<span class="token punctuation">,</span> rootComponent <span class="token punctuation">}</span> <span class="token operator">=</span> options<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root <span class="token operator">||</span> <span class="token operator">!</span>rootComponent<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    root<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token function">rootComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    options<span class="token punctuation">.</span>currentStateKey <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    options<span class="token punctuation">.</span>renderCount <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">render</span> <span class="token punctuation">(</span><span class="token parameter">rootComponent<span class="token punctuation">,</span> root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    options<span class="token punctuation">.</span>root <span class="token operator">=</span> root<span class="token punctuation">;</span>
    options<span class="token punctuation">.</span>rootComponent <span class="token operator">=</span> rootComponent<span class="token punctuation">;</span>
    <span class="token function">_render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> render <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> render <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">MyReact</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>/src/components/CounterAndMeow.js</code></p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../core/MyReact.js&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">CounterAndMeow</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>cat<span class="token punctuation">,</span> setCat<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;\uC57C\uC639! &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">countMeow</span> <span class="token punctuation">(</span><span class="token parameter">newCount</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setCount</span><span class="token punctuation">(</span>newCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setCat</span><span class="token punctuation">(</span><span class="token string">&#39;\uC57C\uC639! &#39;</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span>newCount<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  window<span class="token punctuation">.</span><span class="token function-variable function">increment</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">countMeow</span><span class="token punctuation">(</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  window<span class="token punctuation">.</span><span class="token function-variable function">decrement</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">countMeow</span><span class="token punctuation">(</span>count <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;div&gt;
      &lt;p&gt;\uACE0\uC591\uC774\uAC00 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\uBC88 \uC6B8\uC5B4\uC11C </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>cat<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> &lt;/p&gt;
      &lt;button onclick=&quot;increment()&quot;&gt;\uC99D\uAC00&lt;/button&gt;
      &lt;button onclick=&quot;decrement()&quot;&gt;\uAC10\uC18C&lt;/button&gt;
    &lt;/div&gt;
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><iframe class="example-frame" width="100%" src="https://junilhwang.github.io/simple-use-state/10-modularity/index.html"></iframe><p>\uCF54\uB4DC\uC5D0 \uB300\uD55C \uC124\uBA85\uC740 \uC0DD\uB7B5\uD558\uACA0\uB2E4. \uC774\uBBF8 \uC55E\uC120 \uACFC\uC815\uC5D0\uC11C \uB9CE\uC774 \uB2E4\uB918\uAE30 \uB54C\uBB38\uC774\uB2E4.</p><hr><p>\uC774\uB807\uAC8C <code>useState</code> \uADF8\uB9AC\uACE0 \uC774\uC640 \uAC15\uD558\uAC8C \uC5EE\uC5EC\uC788\uB294 <code>render</code>\uC5D0 \uB300\uD574\uC11C \uB2E4\uB904\uBD24\uB2E4.</p><p>\uC5EC\uAE30\uC5D0 diff \uC54C\uACE0\uB9AC\uC998\uAE4C\uC9C0 \uC0AC\uC6A9\uD55C\uB2E4\uBA74 \uB354\uC6B1\uB354 \uC644\uC131\uB3C4 \uC788\uB294 \uB80C\uB354\uB9C1 \uC2DC\uC2A4\uD15C\uC774 \uB418\uB9AC\uB77C \uC0DD\uAC01\uD55C\uB2E4.</p><p>\uADF8\uB9AC\uACE0 \uC9C0\uAE08\uC740 \uC774\uBCA4\uD2B8\uB97C \uAD00\uB9AC\uD558\uB294 \uBC29\uBC95\uC774 \uBB34\uCC99 \uC798\uBABB\uB41C \uC0C1\uD0DC\uB2E4.</p><p>\uB530\uB77C\uC11C \uC704\uC640 \uAC19\uC774 \uAD6C\uC131\uD588\uC744 \uB54C \uC5B4\uB5A4 \uBC29\uC2DD\uC73C\uB85C \uC774\uBCA4\uD2B8\uB97C \uAD00\uB9AC\uD558\uBA74 \uC88B\uC740\uC9C0\uC5D0 \uB300\uD574\uC11C\uB3C4 \uB2E4\uB8F0 \uC218 \uC788\uC744 \uAC83 \uAC19\uB2E4.</p><h2 id="\u110C\u1165\u11AB\u110E\u1166-\u110B\u1168\u110C\u1166\u110F\u1169\u1103\u1173" tabindex="-1"><a class="header-anchor" href="#\u110C\u1165\u11AB\u110E\u1166-\u110B\u1168\u110C\u1166\u110F\u1169\u1103\u1173" aria-hidden="true">#</a> \uC804\uCCB4 \uC608\uC81C\uCF54\uB4DC</h2>`,30),z=s("\uC774 \uD3EC\uC2A4\uD2B8\uC5D0 \uC0AC\uC6A9\uB41C \uBAA8\uB4E0 \uCF54\uB4DC\uB294 "),E={href:"https://github.com/JunilHwang/simple-use-state",target:"_blank",rel:"noopener noreferrer"},B=s("\uC774 \uC800\uC7A5\uC18C"),W=s(" \uC5D0\uC11C \uD655\uC778\uD560 \uC218 \uC788\uB2E4."),P={href:"https://junilhwang.github.io/simple-use-state/01-make-state-frame/index.html",target:"_blank",rel:"noopener noreferrer"},U=s("01. state \uD2C0 \uAD6C\uC131"),Y={href:"https://junilhwang.github.io/simple-use-state/02-only-one-state/index.html",target:"_blank",rel:"noopener noreferrer"},Z=s("02. \uD55C \uAC1C\uC758 state\uB9CC \uC788\uC744 \uACBD\uC6B0"),G={href:"https://junilhwang.github.io/simple-use-state/03-multi-state-bug/index.html",target:"_blank",rel:"noopener noreferrer"},Q=s("03. \uC5EC\uB7EC \uAC1C\uC758 state\uAC00 \uC788\uC744 \uACBD\uC6B0 \uBC84\uADF8 \uBC1C\uC0DD"),X={href:"https://junilhwang.github.io/simple-use-state/04-multi-state-success/index.html",target:"_blank",rel:"noopener noreferrer"},nn=s("04. \uC5EC\uB7EC \uAC1C\uC758 state\uAC00 \uC788\uC744 \uACBD\uC6B0 \uC815\uC0C1 \uC791\uB3D9"),sn={href:"https://junilhwang.github.io/simple-use-state/05-no-state-change/index.html",target:"_blank",rel:"noopener noreferrer"},an=s("05. state \uAC12\uC774 \uB3D9\uC77C\uD560 \uACBD\uC6B0"),tn={href:"https://junilhwang.github.io/simple-use-state/06-dont-render-no-change/index.html",target:"_blank",rel:"noopener noreferrer"},pn=s("06. state \uAC12\uC774 \uB3D9\uC77C\uD560 \uACBD\uC6B0 \uB80C\uB354\uB9C1 \uBC29\uC9C0"),en={href:"https://junilhwang.github.io/simple-use-state/07-unnecessary-render/index.html",target:"_blank",rel:"noopener noreferrer"},on=s("07. \uBD88\uD544\uC694\uD55C render \uBC1C\uC0DD"),cn={href:"https://junilhwang.github.io/simple-use-state/08-refactor-rendering-by-debounce/index.html",target:"_blank",rel:"noopener noreferrer"},ln=s("08. debounce\uB85C \uB80C\uB354\uB9C1\uC744 \uB9AC\uD329\uD1A0\uB9C1"),un={href:"https://junilhwang.github.io/simple-use-state/09-abstract-render/index.html",target:"_blank",rel:"noopener noreferrer"},rn=s("09. render \uCD94\uC0C1\uD654"),kn={href:"https://junilhwang.github.io/simple-use-state/10-modularity/index.html",target:"_blank",rel:"noopener noreferrer"},dn=s("10. \uBAA8\uB4C8\uD654"),vn=p('<h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary" aria-hidden="true">#</a> Summary</h2><ul><li>useState\uC5D0 \uB300\uD574 \uBD84\uC11D\uD558\uAE30</li><li>\uD074\uB85C\uC800\uC5D0 \uB300\uD55C \uC774\uD574</li><li>useState \uCD5C\uC801\uD654\uD558\uAE30 <ul><li>\uAC12\uC774 \uBCC0\uACBD\uB418\uC9C0 \uC54A\uB294 \uACBD\uC6B0</li></ul></li><li>\uB80C\uB354\uB9C1 \uCD5C\uC801\uD654\uD558\uAE30 <ul><li>\uB3D9\uC2DC\uC5D0 setState\uAC00 \uC2E4\uD589\uB418\uB294 \uACBD\uC6B0</li><li>debounce\uB85C \uCD5C\uC801\uD654\uD558\uAE30</li><li>requestAnimationFrame \uC774\uC6A9\uD558\uAE30</li></ul></li><li>\uBAA8\uB4C8\uD654</li></ul>',2);function mn(bn,gn){const a=o("ExternalLinkIcon");return c(),i("div",null,[d,v,n("div",m,[b,g,n("ul",null,[n("li",null,[n("strong",null,[n("a",h,[f,t(a)])])]),n("li",null,[n("strong",null,[n("a",y,[w,t(a)])])]),n("li",null,[n("strong",null,[n("a",_,[x,t(a)])])])])]),S,n("div",j,[C,n("ul",null,[q,n("li",null,[M,n("a",F,[A,t(a)]),$])])]),K,n("p",null,[T,n("a",R,[H,t(a)]),L]),J,n("p",null,[V,n("a",I,[N,t(a)]),O]),D,n("p",null,[z,n("a",E,[B,t(a)]),W]),n("ul",null,[n("li",null,[n("a",P,[U,t(a)])]),n("li",null,[n("a",Y,[Z,t(a)])]),n("li",null,[n("a",G,[Q,t(a)])]),n("li",null,[n("a",X,[nn,t(a)])]),n("li",null,[n("a",sn,[an,t(a)])]),n("li",null,[n("a",tn,[pn,t(a)])]),n("li",null,[n("a",en,[on,t(a)])]),n("li",null,[n("a",cn,[ln,t(a)])]),n("li",null,[n("a",un,[rn,t(a)])]),n("li",null,[n("a",kn,[dn,t(a)])])]),vn])}var fn=e(k,[["render",mn],["__file","index.html.vue"]]);export{fn as default};
